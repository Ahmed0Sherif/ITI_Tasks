
D10_Task_02.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002a8a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00002a8a  00002afe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000189c  00000000  00000000  00002b10  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b7e  00000000  00000000  000043ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000506a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000051da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006e23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007d0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008abc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008ea9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009677  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e8       	ldi	r30, 0x8A	; 138
      68:	fa e2       	ldi	r31, 0x2A	; 42
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 3f 09 	call	0x127e	; 0x127e <main>
      7a:	0c 94 43 15 	jmp	0x2a86	; 0x2a86 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 0c 15 	jmp	0x2a18	; 0x2a18 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 28 15 	jmp	0x2a50	; 0x2a50 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 0c 15 	jmp	0x2a18	; 0x2a18 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 28 15 	jmp	0x2a50	; 0x2a50 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 1c 15 	jmp	0x2a38	; 0x2a38 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 38 15 	jmp	0x2a70	; 0x2a70 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <MDIO_voidDioSetPinDirection>:
PORTS A, B, C, D ->>>>>>>>>>>>>> 0, 1, 2, 3
*/


void MDIO_voidDioSetPinDirection(u8 copy_u8Port, u8 copy_u8Pin, u8 copy_u8Direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	27 97       	sbiw	r28, 0x07	; 7
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	6a 83       	std	Y+2, r22	; 0x02
     b4e:	4b 83       	std	Y+3, r20	; 0x03
	if (copy_u8Direction == 1)
     b50:	8b 81       	ldd	r24, Y+3	; 0x03
     b52:	81 30       	cpi	r24, 0x01	; 1
     b54:	09 f0       	breq	.+2      	; 0xb58 <MDIO_voidDioSetPinDirection+0x22>
     b56:	6f c0       	rjmp	.+222    	; 0xc36 <MDIO_voidDioSetPinDirection+0x100>
	{
		switch (copy_u8Port)
     b58:	89 81       	ldd	r24, Y+1	; 0x01
     b5a:	28 2f       	mov	r18, r24
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	3f 83       	std	Y+7, r19	; 0x07
     b60:	2e 83       	std	Y+6, r18	; 0x06
     b62:	8e 81       	ldd	r24, Y+6	; 0x06
     b64:	9f 81       	ldd	r25, Y+7	; 0x07
     b66:	81 30       	cpi	r24, 0x01	; 1
     b68:	91 05       	cpc	r25, r1
     b6a:	49 f1       	breq	.+82     	; 0xbbe <MDIO_voidDioSetPinDirection+0x88>
     b6c:	2e 81       	ldd	r18, Y+6	; 0x06
     b6e:	3f 81       	ldd	r19, Y+7	; 0x07
     b70:	22 30       	cpi	r18, 0x02	; 2
     b72:	31 05       	cpc	r19, r1
     b74:	2c f4       	brge	.+10     	; 0xb80 <MDIO_voidDioSetPinDirection+0x4a>
     b76:	8e 81       	ldd	r24, Y+6	; 0x06
     b78:	9f 81       	ldd	r25, Y+7	; 0x07
     b7a:	00 97       	sbiw	r24, 0x00	; 0
     b7c:	61 f0       	breq	.+24     	; 0xb96 <MDIO_voidDioSetPinDirection+0x60>
     b7e:	d2 c0       	rjmp	.+420    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
     b80:	2e 81       	ldd	r18, Y+6	; 0x06
     b82:	3f 81       	ldd	r19, Y+7	; 0x07
     b84:	22 30       	cpi	r18, 0x02	; 2
     b86:	31 05       	cpc	r19, r1
     b88:	71 f1       	breq	.+92     	; 0xbe6 <MDIO_voidDioSetPinDirection+0xb0>
     b8a:	8e 81       	ldd	r24, Y+6	; 0x06
     b8c:	9f 81       	ldd	r25, Y+7	; 0x07
     b8e:	83 30       	cpi	r24, 0x03	; 3
     b90:	91 05       	cpc	r25, r1
     b92:	e9 f1       	breq	.+122    	; 0xc0e <MDIO_voidDioSetPinDirection+0xd8>
     b94:	c7 c0       	rjmp	.+398    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
		{
			case 0:SET_BIT(DDRA, copy_u8Pin); break;
     b96:	aa e3       	ldi	r26, 0x3A	; 58
     b98:	b0 e0       	ldi	r27, 0x00	; 0
     b9a:	ea e3       	ldi	r30, 0x3A	; 58
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	80 81       	ld	r24, Z
     ba0:	48 2f       	mov	r20, r24
     ba2:	8a 81       	ldd	r24, Y+2	; 0x02
     ba4:	28 2f       	mov	r18, r24
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	02 2e       	mov	r0, r18
     bae:	02 c0       	rjmp	.+4      	; 0xbb4 <MDIO_voidDioSetPinDirection+0x7e>
     bb0:	88 0f       	add	r24, r24
     bb2:	99 1f       	adc	r25, r25
     bb4:	0a 94       	dec	r0
     bb6:	e2 f7       	brpl	.-8      	; 0xbb0 <MDIO_voidDioSetPinDirection+0x7a>
     bb8:	84 2b       	or	r24, r20
     bba:	8c 93       	st	X, r24
     bbc:	b3 c0       	rjmp	.+358    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
			case 1:SET_BIT(DDRB, copy_u8Pin); break;
     bbe:	a7 e3       	ldi	r26, 0x37	; 55
     bc0:	b0 e0       	ldi	r27, 0x00	; 0
     bc2:	e7 e3       	ldi	r30, 0x37	; 55
     bc4:	f0 e0       	ldi	r31, 0x00	; 0
     bc6:	80 81       	ld	r24, Z
     bc8:	48 2f       	mov	r20, r24
     bca:	8a 81       	ldd	r24, Y+2	; 0x02
     bcc:	28 2f       	mov	r18, r24
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	02 2e       	mov	r0, r18
     bd6:	02 c0       	rjmp	.+4      	; 0xbdc <MDIO_voidDioSetPinDirection+0xa6>
     bd8:	88 0f       	add	r24, r24
     bda:	99 1f       	adc	r25, r25
     bdc:	0a 94       	dec	r0
     bde:	e2 f7       	brpl	.-8      	; 0xbd8 <MDIO_voidDioSetPinDirection+0xa2>
     be0:	84 2b       	or	r24, r20
     be2:	8c 93       	st	X, r24
     be4:	9f c0       	rjmp	.+318    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
			case 2:SET_BIT(DDRC, copy_u8Pin); break;
     be6:	a4 e3       	ldi	r26, 0x34	; 52
     be8:	b0 e0       	ldi	r27, 0x00	; 0
     bea:	e4 e3       	ldi	r30, 0x34	; 52
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	80 81       	ld	r24, Z
     bf0:	48 2f       	mov	r20, r24
     bf2:	8a 81       	ldd	r24, Y+2	; 0x02
     bf4:	28 2f       	mov	r18, r24
     bf6:	30 e0       	ldi	r19, 0x00	; 0
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	02 2e       	mov	r0, r18
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <MDIO_voidDioSetPinDirection+0xce>
     c00:	88 0f       	add	r24, r24
     c02:	99 1f       	adc	r25, r25
     c04:	0a 94       	dec	r0
     c06:	e2 f7       	brpl	.-8      	; 0xc00 <MDIO_voidDioSetPinDirection+0xca>
     c08:	84 2b       	or	r24, r20
     c0a:	8c 93       	st	X, r24
     c0c:	8b c0       	rjmp	.+278    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
			case 3:SET_BIT(DDRD, copy_u8Pin); break;
     c0e:	a1 e3       	ldi	r26, 0x31	; 49
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	e1 e3       	ldi	r30, 0x31	; 49
     c14:	f0 e0       	ldi	r31, 0x00	; 0
     c16:	80 81       	ld	r24, Z
     c18:	48 2f       	mov	r20, r24
     c1a:	8a 81       	ldd	r24, Y+2	; 0x02
     c1c:	28 2f       	mov	r18, r24
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	02 2e       	mov	r0, r18
     c26:	02 c0       	rjmp	.+4      	; 0xc2c <MDIO_voidDioSetPinDirection+0xf6>
     c28:	88 0f       	add	r24, r24
     c2a:	99 1f       	adc	r25, r25
     c2c:	0a 94       	dec	r0
     c2e:	e2 f7       	brpl	.-8      	; 0xc28 <MDIO_voidDioSetPinDirection+0xf2>
     c30:	84 2b       	or	r24, r20
     c32:	8c 93       	st	X, r24
     c34:	77 c0       	rjmp	.+238    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
		}
	}
	else if(copy_u8Direction == 0)
     c36:	8b 81       	ldd	r24, Y+3	; 0x03
     c38:	88 23       	and	r24, r24
     c3a:	09 f0       	breq	.+2      	; 0xc3e <MDIO_voidDioSetPinDirection+0x108>
     c3c:	73 c0       	rjmp	.+230    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
	{
		switch (copy_u8Port)
     c3e:	89 81       	ldd	r24, Y+1	; 0x01
     c40:	28 2f       	mov	r18, r24
     c42:	30 e0       	ldi	r19, 0x00	; 0
     c44:	3d 83       	std	Y+5, r19	; 0x05
     c46:	2c 83       	std	Y+4, r18	; 0x04
     c48:	8c 81       	ldd	r24, Y+4	; 0x04
     c4a:	9d 81       	ldd	r25, Y+5	; 0x05
     c4c:	81 30       	cpi	r24, 0x01	; 1
     c4e:	91 05       	cpc	r25, r1
     c50:	59 f1       	breq	.+86     	; 0xca8 <MDIO_voidDioSetPinDirection+0x172>
     c52:	2c 81       	ldd	r18, Y+4	; 0x04
     c54:	3d 81       	ldd	r19, Y+5	; 0x05
     c56:	22 30       	cpi	r18, 0x02	; 2
     c58:	31 05       	cpc	r19, r1
     c5a:	2c f4       	brge	.+10     	; 0xc66 <MDIO_voidDioSetPinDirection+0x130>
     c5c:	8c 81       	ldd	r24, Y+4	; 0x04
     c5e:	9d 81       	ldd	r25, Y+5	; 0x05
     c60:	00 97       	sbiw	r24, 0x00	; 0
     c62:	69 f0       	breq	.+26     	; 0xc7e <MDIO_voidDioSetPinDirection+0x148>
     c64:	5f c0       	rjmp	.+190    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
     c66:	2c 81       	ldd	r18, Y+4	; 0x04
     c68:	3d 81       	ldd	r19, Y+5	; 0x05
     c6a:	22 30       	cpi	r18, 0x02	; 2
     c6c:	31 05       	cpc	r19, r1
     c6e:	89 f1       	breq	.+98     	; 0xcd2 <MDIO_voidDioSetPinDirection+0x19c>
     c70:	8c 81       	ldd	r24, Y+4	; 0x04
     c72:	9d 81       	ldd	r25, Y+5	; 0x05
     c74:	83 30       	cpi	r24, 0x03	; 3
     c76:	91 05       	cpc	r25, r1
     c78:	09 f4       	brne	.+2      	; 0xc7c <MDIO_voidDioSetPinDirection+0x146>
     c7a:	40 c0       	rjmp	.+128    	; 0xcfc <MDIO_voidDioSetPinDirection+0x1c6>
     c7c:	53 c0       	rjmp	.+166    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
		{
			case 0:CLR_BIT(DDRA, copy_u8Pin); break;
     c7e:	aa e3       	ldi	r26, 0x3A	; 58
     c80:	b0 e0       	ldi	r27, 0x00	; 0
     c82:	ea e3       	ldi	r30, 0x3A	; 58
     c84:	f0 e0       	ldi	r31, 0x00	; 0
     c86:	80 81       	ld	r24, Z
     c88:	48 2f       	mov	r20, r24
     c8a:	8a 81       	ldd	r24, Y+2	; 0x02
     c8c:	28 2f       	mov	r18, r24
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	02 2e       	mov	r0, r18
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <MDIO_voidDioSetPinDirection+0x166>
     c98:	88 0f       	add	r24, r24
     c9a:	99 1f       	adc	r25, r25
     c9c:	0a 94       	dec	r0
     c9e:	e2 f7       	brpl	.-8      	; 0xc98 <MDIO_voidDioSetPinDirection+0x162>
     ca0:	80 95       	com	r24
     ca2:	84 23       	and	r24, r20
     ca4:	8c 93       	st	X, r24
     ca6:	3e c0       	rjmp	.+124    	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
			case 1:CLR_BIT(DDRB, copy_u8Pin); break;
     ca8:	a7 e3       	ldi	r26, 0x37	; 55
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	e7 e3       	ldi	r30, 0x37	; 55
     cae:	f0 e0       	ldi	r31, 0x00	; 0
     cb0:	80 81       	ld	r24, Z
     cb2:	48 2f       	mov	r20, r24
     cb4:	8a 81       	ldd	r24, Y+2	; 0x02
     cb6:	28 2f       	mov	r18, r24
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	02 2e       	mov	r0, r18
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <MDIO_voidDioSetPinDirection+0x190>
     cc2:	88 0f       	add	r24, r24
     cc4:	99 1f       	adc	r25, r25
     cc6:	0a 94       	dec	r0
     cc8:	e2 f7       	brpl	.-8      	; 0xcc2 <MDIO_voidDioSetPinDirection+0x18c>
     cca:	80 95       	com	r24
     ccc:	84 23       	and	r24, r20
     cce:	8c 93       	st	X, r24
     cd0:	29 c0       	rjmp	.+82     	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
			case 2:CLR_BIT(DDRC, copy_u8Pin); break;
     cd2:	a4 e3       	ldi	r26, 0x34	; 52
     cd4:	b0 e0       	ldi	r27, 0x00	; 0
     cd6:	e4 e3       	ldi	r30, 0x34	; 52
     cd8:	f0 e0       	ldi	r31, 0x00	; 0
     cda:	80 81       	ld	r24, Z
     cdc:	48 2f       	mov	r20, r24
     cde:	8a 81       	ldd	r24, Y+2	; 0x02
     ce0:	28 2f       	mov	r18, r24
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	81 e0       	ldi	r24, 0x01	; 1
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	02 2e       	mov	r0, r18
     cea:	02 c0       	rjmp	.+4      	; 0xcf0 <MDIO_voidDioSetPinDirection+0x1ba>
     cec:	88 0f       	add	r24, r24
     cee:	99 1f       	adc	r25, r25
     cf0:	0a 94       	dec	r0
     cf2:	e2 f7       	brpl	.-8      	; 0xcec <MDIO_voidDioSetPinDirection+0x1b6>
     cf4:	80 95       	com	r24
     cf6:	84 23       	and	r24, r20
     cf8:	8c 93       	st	X, r24
     cfa:	14 c0       	rjmp	.+40     	; 0xd24 <MDIO_voidDioSetPinDirection+0x1ee>
			case 3:CLR_BIT(DDRD, copy_u8Pin); break;
     cfc:	a1 e3       	ldi	r26, 0x31	; 49
     cfe:	b0 e0       	ldi	r27, 0x00	; 0
     d00:	e1 e3       	ldi	r30, 0x31	; 49
     d02:	f0 e0       	ldi	r31, 0x00	; 0
     d04:	80 81       	ld	r24, Z
     d06:	48 2f       	mov	r20, r24
     d08:	8a 81       	ldd	r24, Y+2	; 0x02
     d0a:	28 2f       	mov	r18, r24
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	81 e0       	ldi	r24, 0x01	; 1
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	02 2e       	mov	r0, r18
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <MDIO_voidDioSetPinDirection+0x1e4>
     d16:	88 0f       	add	r24, r24
     d18:	99 1f       	adc	r25, r25
     d1a:	0a 94       	dec	r0
     d1c:	e2 f7       	brpl	.-8      	; 0xd16 <MDIO_voidDioSetPinDirection+0x1e0>
     d1e:	80 95       	com	r24
     d20:	84 23       	and	r24, r20
     d22:	8c 93       	st	X, r24
		}
	}
}
     d24:	27 96       	adiw	r28, 0x07	; 7
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	f8 94       	cli
     d2a:	de bf       	out	0x3e, r29	; 62
     d2c:	0f be       	out	0x3f, r0	; 63
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	cf 91       	pop	r28
     d32:	df 91       	pop	r29
     d34:	08 95       	ret

00000d36 <MDIO_voidDioSetPinValue>:

void MDIO_voidDioSetPinValue (u8 copy_u8Port, u8 copy_u8Pin, u8 copy_u8Value)
{
     d36:	df 93       	push	r29
     d38:	cf 93       	push	r28
     d3a:	cd b7       	in	r28, 0x3d	; 61
     d3c:	de b7       	in	r29, 0x3e	; 62
     d3e:	27 97       	sbiw	r28, 0x07	; 7
     d40:	0f b6       	in	r0, 0x3f	; 63
     d42:	f8 94       	cli
     d44:	de bf       	out	0x3e, r29	; 62
     d46:	0f be       	out	0x3f, r0	; 63
     d48:	cd bf       	out	0x3d, r28	; 61
     d4a:	89 83       	std	Y+1, r24	; 0x01
     d4c:	6a 83       	std	Y+2, r22	; 0x02
     d4e:	4b 83       	std	Y+3, r20	; 0x03
	if (copy_u8Value == 1)
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	81 30       	cpi	r24, 0x01	; 1
     d54:	09 f0       	breq	.+2      	; 0xd58 <MDIO_voidDioSetPinValue+0x22>
     d56:	6f c0       	rjmp	.+222    	; 0xe36 <MDIO_voidDioSetPinValue+0x100>
	{
		switch(copy_u8Port)
     d58:	89 81       	ldd	r24, Y+1	; 0x01
     d5a:	28 2f       	mov	r18, r24
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	3f 83       	std	Y+7, r19	; 0x07
     d60:	2e 83       	std	Y+6, r18	; 0x06
     d62:	8e 81       	ldd	r24, Y+6	; 0x06
     d64:	9f 81       	ldd	r25, Y+7	; 0x07
     d66:	81 30       	cpi	r24, 0x01	; 1
     d68:	91 05       	cpc	r25, r1
     d6a:	49 f1       	breq	.+82     	; 0xdbe <MDIO_voidDioSetPinValue+0x88>
     d6c:	2e 81       	ldd	r18, Y+6	; 0x06
     d6e:	3f 81       	ldd	r19, Y+7	; 0x07
     d70:	22 30       	cpi	r18, 0x02	; 2
     d72:	31 05       	cpc	r19, r1
     d74:	2c f4       	brge	.+10     	; 0xd80 <MDIO_voidDioSetPinValue+0x4a>
     d76:	8e 81       	ldd	r24, Y+6	; 0x06
     d78:	9f 81       	ldd	r25, Y+7	; 0x07
     d7a:	00 97       	sbiw	r24, 0x00	; 0
     d7c:	61 f0       	breq	.+24     	; 0xd96 <MDIO_voidDioSetPinValue+0x60>
     d7e:	d2 c0       	rjmp	.+420    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
     d80:	2e 81       	ldd	r18, Y+6	; 0x06
     d82:	3f 81       	ldd	r19, Y+7	; 0x07
     d84:	22 30       	cpi	r18, 0x02	; 2
     d86:	31 05       	cpc	r19, r1
     d88:	71 f1       	breq	.+92     	; 0xde6 <MDIO_voidDioSetPinValue+0xb0>
     d8a:	8e 81       	ldd	r24, Y+6	; 0x06
     d8c:	9f 81       	ldd	r25, Y+7	; 0x07
     d8e:	83 30       	cpi	r24, 0x03	; 3
     d90:	91 05       	cpc	r25, r1
     d92:	e9 f1       	breq	.+122    	; 0xe0e <MDIO_voidDioSetPinValue+0xd8>
     d94:	c7 c0       	rjmp	.+398    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
		{
			case 0: SET_BIT(PORTA, copy_u8Pin); break;
     d96:	ab e3       	ldi	r26, 0x3B	; 59
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	eb e3       	ldi	r30, 0x3B	; 59
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	48 2f       	mov	r20, r24
     da2:	8a 81       	ldd	r24, Y+2	; 0x02
     da4:	28 2f       	mov	r18, r24
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	02 2e       	mov	r0, r18
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <MDIO_voidDioSetPinValue+0x7e>
     db0:	88 0f       	add	r24, r24
     db2:	99 1f       	adc	r25, r25
     db4:	0a 94       	dec	r0
     db6:	e2 f7       	brpl	.-8      	; 0xdb0 <MDIO_voidDioSetPinValue+0x7a>
     db8:	84 2b       	or	r24, r20
     dba:	8c 93       	st	X, r24
     dbc:	b3 c0       	rjmp	.+358    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
			case 1: SET_BIT(PORTB, copy_u8Pin); break;
     dbe:	a8 e3       	ldi	r26, 0x38	; 56
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e8 e3       	ldi	r30, 0x38	; 56
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	48 2f       	mov	r20, r24
     dca:	8a 81       	ldd	r24, Y+2	; 0x02
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 2e       	mov	r0, r18
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <MDIO_voidDioSetPinValue+0xa6>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	0a 94       	dec	r0
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <MDIO_voidDioSetPinValue+0xa2>
     de0:	84 2b       	or	r24, r20
     de2:	8c 93       	st	X, r24
     de4:	9f c0       	rjmp	.+318    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
			case 2: SET_BIT(PORTC, copy_u8Pin); break;
     de6:	a5 e3       	ldi	r26, 0x35	; 53
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e5 e3       	ldi	r30, 0x35	; 53
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	48 2f       	mov	r20, r24
     df2:	8a 81       	ldd	r24, Y+2	; 0x02
     df4:	28 2f       	mov	r18, r24
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 2e       	mov	r0, r18
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <MDIO_voidDioSetPinValue+0xce>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	0a 94       	dec	r0
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <MDIO_voidDioSetPinValue+0xca>
     e08:	84 2b       	or	r24, r20
     e0a:	8c 93       	st	X, r24
     e0c:	8b c0       	rjmp	.+278    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
			case 3: SET_BIT(PORTD, copy_u8Pin); break;
     e0e:	a2 e3       	ldi	r26, 0x32	; 50
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	e2 e3       	ldi	r30, 0x32	; 50
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8a 81       	ldd	r24, Y+2	; 0x02
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <MDIO_voidDioSetPinValue+0xf6>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <MDIO_voidDioSetPinValue+0xf2>
     e30:	84 2b       	or	r24, r20
     e32:	8c 93       	st	X, r24
     e34:	77 c0       	rjmp	.+238    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
		}
	}
	else if (copy_u8Value == 0)
     e36:	8b 81       	ldd	r24, Y+3	; 0x03
     e38:	88 23       	and	r24, r24
     e3a:	09 f0       	breq	.+2      	; 0xe3e <MDIO_voidDioSetPinValue+0x108>
     e3c:	73 c0       	rjmp	.+230    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
	{
		switch(copy_u8Port)
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3d 83       	std	Y+5, r19	; 0x05
     e46:	2c 83       	std	Y+4, r18	; 0x04
     e48:	8c 81       	ldd	r24, Y+4	; 0x04
     e4a:	9d 81       	ldd	r25, Y+5	; 0x05
     e4c:	81 30       	cpi	r24, 0x01	; 1
     e4e:	91 05       	cpc	r25, r1
     e50:	59 f1       	breq	.+86     	; 0xea8 <MDIO_voidDioSetPinValue+0x172>
     e52:	2c 81       	ldd	r18, Y+4	; 0x04
     e54:	3d 81       	ldd	r19, Y+5	; 0x05
     e56:	22 30       	cpi	r18, 0x02	; 2
     e58:	31 05       	cpc	r19, r1
     e5a:	2c f4       	brge	.+10     	; 0xe66 <MDIO_voidDioSetPinValue+0x130>
     e5c:	8c 81       	ldd	r24, Y+4	; 0x04
     e5e:	9d 81       	ldd	r25, Y+5	; 0x05
     e60:	00 97       	sbiw	r24, 0x00	; 0
     e62:	69 f0       	breq	.+26     	; 0xe7e <MDIO_voidDioSetPinValue+0x148>
     e64:	5f c0       	rjmp	.+190    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
     e66:	2c 81       	ldd	r18, Y+4	; 0x04
     e68:	3d 81       	ldd	r19, Y+5	; 0x05
     e6a:	22 30       	cpi	r18, 0x02	; 2
     e6c:	31 05       	cpc	r19, r1
     e6e:	89 f1       	breq	.+98     	; 0xed2 <MDIO_voidDioSetPinValue+0x19c>
     e70:	8c 81       	ldd	r24, Y+4	; 0x04
     e72:	9d 81       	ldd	r25, Y+5	; 0x05
     e74:	83 30       	cpi	r24, 0x03	; 3
     e76:	91 05       	cpc	r25, r1
     e78:	09 f4       	brne	.+2      	; 0xe7c <MDIO_voidDioSetPinValue+0x146>
     e7a:	40 c0       	rjmp	.+128    	; 0xefc <MDIO_voidDioSetPinValue+0x1c6>
     e7c:	53 c0       	rjmp	.+166    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
		{
			case 0: CLR_BIT(PORTA, copy_u8Pin); break;
     e7e:	ab e3       	ldi	r26, 0x3B	; 59
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	eb e3       	ldi	r30, 0x3B	; 59
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	80 81       	ld	r24, Z
     e88:	48 2f       	mov	r20, r24
     e8a:	8a 81       	ldd	r24, Y+2	; 0x02
     e8c:	28 2f       	mov	r18, r24
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 2e       	mov	r0, r18
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <MDIO_voidDioSetPinValue+0x166>
     e98:	88 0f       	add	r24, r24
     e9a:	99 1f       	adc	r25, r25
     e9c:	0a 94       	dec	r0
     e9e:	e2 f7       	brpl	.-8      	; 0xe98 <MDIO_voidDioSetPinValue+0x162>
     ea0:	80 95       	com	r24
     ea2:	84 23       	and	r24, r20
     ea4:	8c 93       	st	X, r24
     ea6:	3e c0       	rjmp	.+124    	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
			case 1: CLR_BIT(PORTB, copy_u8Pin); break;
     ea8:	a8 e3       	ldi	r26, 0x38	; 56
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	e8 e3       	ldi	r30, 0x38	; 56
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	80 81       	ld	r24, Z
     eb2:	48 2f       	mov	r20, r24
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	28 2f       	mov	r18, r24
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	02 2e       	mov	r0, r18
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <MDIO_voidDioSetPinValue+0x190>
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	0a 94       	dec	r0
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <MDIO_voidDioSetPinValue+0x18c>
     eca:	80 95       	com	r24
     ecc:	84 23       	and	r24, r20
     ece:	8c 93       	st	X, r24
     ed0:	29 c0       	rjmp	.+82     	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
			case 2: CLR_BIT(PORTC, copy_u8Pin); break;
     ed2:	a5 e3       	ldi	r26, 0x35	; 53
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	e5 e3       	ldi	r30, 0x35	; 53
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	80 81       	ld	r24, Z
     edc:	48 2f       	mov	r20, r24
     ede:	8a 81       	ldd	r24, Y+2	; 0x02
     ee0:	28 2f       	mov	r18, r24
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	02 2e       	mov	r0, r18
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <MDIO_voidDioSetPinValue+0x1ba>
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	0a 94       	dec	r0
     ef2:	e2 f7       	brpl	.-8      	; 0xeec <MDIO_voidDioSetPinValue+0x1b6>
     ef4:	80 95       	com	r24
     ef6:	84 23       	and	r24, r20
     ef8:	8c 93       	st	X, r24
     efa:	14 c0       	rjmp	.+40     	; 0xf24 <MDIO_voidDioSetPinValue+0x1ee>
			case 3: CLR_BIT(PORTD, copy_u8Pin); break;
     efc:	a2 e3       	ldi	r26, 0x32	; 50
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e2 e3       	ldi	r30, 0x32	; 50
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	48 2f       	mov	r20, r24
     f08:	8a 81       	ldd	r24, Y+2	; 0x02
     f0a:	28 2f       	mov	r18, r24
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	02 2e       	mov	r0, r18
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <MDIO_voidDioSetPinValue+0x1e4>
     f16:	88 0f       	add	r24, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	0a 94       	dec	r0
     f1c:	e2 f7       	brpl	.-8      	; 0xf16 <MDIO_voidDioSetPinValue+0x1e0>
     f1e:	80 95       	com	r24
     f20:	84 23       	and	r24, r20
     f22:	8c 93       	st	X, r24
		}
	}
}
     f24:	27 96       	adiw	r28, 0x07	; 7
     f26:	0f b6       	in	r0, 0x3f	; 63
     f28:	f8 94       	cli
     f2a:	de bf       	out	0x3e, r29	; 62
     f2c:	0f be       	out	0x3f, r0	; 63
     f2e:	cd bf       	out	0x3d, r28	; 61
     f30:	cf 91       	pop	r28
     f32:	df 91       	pop	r29
     f34:	08 95       	ret

00000f36 <MDIO_u8DioGetPinValue>:

u8 MDIO_u8DioGetPinValue (u8 copy_u8Port, u8 copy_u8Pin)
{
     f36:	df 93       	push	r29
     f38:	cf 93       	push	r28
     f3a:	00 d0       	rcall	.+0      	; 0xf3c <MDIO_u8DioGetPinValue+0x6>
     f3c:	00 d0       	rcall	.+0      	; 0xf3e <MDIO_u8DioGetPinValue+0x8>
     f3e:	0f 92       	push	r0
     f40:	cd b7       	in	r28, 0x3d	; 61
     f42:	de b7       	in	r29, 0x3e	; 62
     f44:	8a 83       	std	Y+2, r24	; 0x02
     f46:	6b 83       	std	Y+3, r22	; 0x03
	u8 L_u8Value;
	switch(copy_u8Port)
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	28 2f       	mov	r18, r24
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	3d 83       	std	Y+5, r19	; 0x05
     f50:	2c 83       	std	Y+4, r18	; 0x04
     f52:	4c 81       	ldd	r20, Y+4	; 0x04
     f54:	5d 81       	ldd	r21, Y+5	; 0x05
     f56:	41 30       	cpi	r20, 0x01	; 1
     f58:	51 05       	cpc	r21, r1
     f5a:	41 f1       	breq	.+80     	; 0xfac <MDIO_u8DioGetPinValue+0x76>
     f5c:	8c 81       	ldd	r24, Y+4	; 0x04
     f5e:	9d 81       	ldd	r25, Y+5	; 0x05
     f60:	82 30       	cpi	r24, 0x02	; 2
     f62:	91 05       	cpc	r25, r1
     f64:	34 f4       	brge	.+12     	; 0xf72 <MDIO_u8DioGetPinValue+0x3c>
     f66:	2c 81       	ldd	r18, Y+4	; 0x04
     f68:	3d 81       	ldd	r19, Y+5	; 0x05
     f6a:	21 15       	cp	r18, r1
     f6c:	31 05       	cpc	r19, r1
     f6e:	61 f0       	breq	.+24     	; 0xf88 <MDIO_u8DioGetPinValue+0x52>
     f70:	52 c0       	rjmp	.+164    	; 0x1016 <MDIO_u8DioGetPinValue+0xe0>
     f72:	4c 81       	ldd	r20, Y+4	; 0x04
     f74:	5d 81       	ldd	r21, Y+5	; 0x05
     f76:	42 30       	cpi	r20, 0x02	; 2
     f78:	51 05       	cpc	r21, r1
     f7a:	51 f1       	breq	.+84     	; 0xfd0 <MDIO_u8DioGetPinValue+0x9a>
     f7c:	8c 81       	ldd	r24, Y+4	; 0x04
     f7e:	9d 81       	ldd	r25, Y+5	; 0x05
     f80:	83 30       	cpi	r24, 0x03	; 3
     f82:	91 05       	cpc	r25, r1
     f84:	b9 f1       	breq	.+110    	; 0xff4 <MDIO_u8DioGetPinValue+0xbe>
     f86:	47 c0       	rjmp	.+142    	; 0x1016 <MDIO_u8DioGetPinValue+0xe0>
		{
			case 0: L_u8Value = GET_BIT(PINA, copy_u8Pin); break;
     f88:	e9 e3       	ldi	r30, 0x39	; 57
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	80 81       	ld	r24, Z
     f8e:	28 2f       	mov	r18, r24
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	8b 81       	ldd	r24, Y+3	; 0x03
     f94:	88 2f       	mov	r24, r24
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	a9 01       	movw	r20, r18
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <MDIO_u8DioGetPinValue+0x6a>
     f9c:	55 95       	asr	r21
     f9e:	47 95       	ror	r20
     fa0:	8a 95       	dec	r24
     fa2:	e2 f7       	brpl	.-8      	; 0xf9c <MDIO_u8DioGetPinValue+0x66>
     fa4:	ca 01       	movw	r24, r20
     fa6:	81 70       	andi	r24, 0x01	; 1
     fa8:	89 83       	std	Y+1, r24	; 0x01
     faa:	35 c0       	rjmp	.+106    	; 0x1016 <MDIO_u8DioGetPinValue+0xe0>
			case 1: L_u8Value = GET_BIT(PINB, copy_u8Pin); break;
     fac:	e6 e3       	ldi	r30, 0x36	; 54
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 81       	ld	r24, Z
     fb2:	28 2f       	mov	r18, r24
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	8b 81       	ldd	r24, Y+3	; 0x03
     fb8:	88 2f       	mov	r24, r24
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	a9 01       	movw	r20, r18
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <MDIO_u8DioGetPinValue+0x8e>
     fc0:	55 95       	asr	r21
     fc2:	47 95       	ror	r20
     fc4:	8a 95       	dec	r24
     fc6:	e2 f7       	brpl	.-8      	; 0xfc0 <MDIO_u8DioGetPinValue+0x8a>
     fc8:	ca 01       	movw	r24, r20
     fca:	81 70       	andi	r24, 0x01	; 1
     fcc:	89 83       	std	Y+1, r24	; 0x01
     fce:	23 c0       	rjmp	.+70     	; 0x1016 <MDIO_u8DioGetPinValue+0xe0>
			case 2: L_u8Value = GET_BIT(PINC, copy_u8Pin); break;
     fd0:	e3 e3       	ldi	r30, 0x33	; 51
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	80 81       	ld	r24, Z
     fd6:	28 2f       	mov	r18, r24
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	8b 81       	ldd	r24, Y+3	; 0x03
     fdc:	88 2f       	mov	r24, r24
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	a9 01       	movw	r20, r18
     fe2:	02 c0       	rjmp	.+4      	; 0xfe8 <MDIO_u8DioGetPinValue+0xb2>
     fe4:	55 95       	asr	r21
     fe6:	47 95       	ror	r20
     fe8:	8a 95       	dec	r24
     fea:	e2 f7       	brpl	.-8      	; 0xfe4 <MDIO_u8DioGetPinValue+0xae>
     fec:	ca 01       	movw	r24, r20
     fee:	81 70       	andi	r24, 0x01	; 1
     ff0:	89 83       	std	Y+1, r24	; 0x01
     ff2:	11 c0       	rjmp	.+34     	; 0x1016 <MDIO_u8DioGetPinValue+0xe0>
			case 3: L_u8Value = GET_BIT(PIND, copy_u8Pin); break;
     ff4:	e0 e3       	ldi	r30, 0x30	; 48
     ff6:	f0 e0       	ldi	r31, 0x00	; 0
     ff8:	80 81       	ld	r24, Z
     ffa:	28 2f       	mov	r18, r24
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	8b 81       	ldd	r24, Y+3	; 0x03
    1000:	88 2f       	mov	r24, r24
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	a9 01       	movw	r20, r18
    1006:	02 c0       	rjmp	.+4      	; 0x100c <MDIO_u8DioGetPinValue+0xd6>
    1008:	55 95       	asr	r21
    100a:	47 95       	ror	r20
    100c:	8a 95       	dec	r24
    100e:	e2 f7       	brpl	.-8      	; 0x1008 <MDIO_u8DioGetPinValue+0xd2>
    1010:	ca 01       	movw	r24, r20
    1012:	81 70       	andi	r24, 0x01	; 1
    1014:	89 83       	std	Y+1, r24	; 0x01
		}
	return L_u8Value;
    1016:	89 81       	ldd	r24, Y+1	; 0x01
}
    1018:	0f 90       	pop	r0
    101a:	0f 90       	pop	r0
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	cf 91       	pop	r28
    1024:	df 91       	pop	r29
    1026:	08 95       	ret

00001028 <MDIO_voidDioTogglePin>:

void MDIO_voidDioTogglePin (u8 copy_u8Port, u8 copy_u8Pin)
{
    1028:	df 93       	push	r29
    102a:	cf 93       	push	r28
    102c:	00 d0       	rcall	.+0      	; 0x102e <MDIO_voidDioTogglePin+0x6>
    102e:	00 d0       	rcall	.+0      	; 0x1030 <MDIO_voidDioTogglePin+0x8>
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	89 83       	std	Y+1, r24	; 0x01
    1036:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8Port)
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	28 2f       	mov	r18, r24
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	3c 83       	std	Y+4, r19	; 0x04
    1040:	2b 83       	std	Y+3, r18	; 0x03
    1042:	8b 81       	ldd	r24, Y+3	; 0x03
    1044:	9c 81       	ldd	r25, Y+4	; 0x04
    1046:	81 30       	cpi	r24, 0x01	; 1
    1048:	91 05       	cpc	r25, r1
    104a:	49 f1       	breq	.+82     	; 0x109e <MDIO_voidDioTogglePin+0x76>
    104c:	2b 81       	ldd	r18, Y+3	; 0x03
    104e:	3c 81       	ldd	r19, Y+4	; 0x04
    1050:	22 30       	cpi	r18, 0x02	; 2
    1052:	31 05       	cpc	r19, r1
    1054:	2c f4       	brge	.+10     	; 0x1060 <MDIO_voidDioTogglePin+0x38>
    1056:	8b 81       	ldd	r24, Y+3	; 0x03
    1058:	9c 81       	ldd	r25, Y+4	; 0x04
    105a:	00 97       	sbiw	r24, 0x00	; 0
    105c:	61 f0       	breq	.+24     	; 0x1076 <MDIO_voidDioTogglePin+0x4e>
    105e:	5a c0       	rjmp	.+180    	; 0x1114 <MDIO_voidDioTogglePin+0xec>
    1060:	2b 81       	ldd	r18, Y+3	; 0x03
    1062:	3c 81       	ldd	r19, Y+4	; 0x04
    1064:	22 30       	cpi	r18, 0x02	; 2
    1066:	31 05       	cpc	r19, r1
    1068:	71 f1       	breq	.+92     	; 0x10c6 <MDIO_voidDioTogglePin+0x9e>
    106a:	8b 81       	ldd	r24, Y+3	; 0x03
    106c:	9c 81       	ldd	r25, Y+4	; 0x04
    106e:	83 30       	cpi	r24, 0x03	; 3
    1070:	91 05       	cpc	r25, r1
    1072:	e9 f1       	breq	.+122    	; 0x10ee <MDIO_voidDioTogglePin+0xc6>
    1074:	4f c0       	rjmp	.+158    	; 0x1114 <MDIO_voidDioTogglePin+0xec>
		{
			case 0: TOG_BIT(PORTA, copy_u8Pin); break;
    1076:	ab e3       	ldi	r26, 0x3B	; 59
    1078:	b0 e0       	ldi	r27, 0x00	; 0
    107a:	eb e3       	ldi	r30, 0x3B	; 59
    107c:	f0 e0       	ldi	r31, 0x00	; 0
    107e:	80 81       	ld	r24, Z
    1080:	48 2f       	mov	r20, r24
    1082:	8a 81       	ldd	r24, Y+2	; 0x02
    1084:	28 2f       	mov	r18, r24
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	02 2e       	mov	r0, r18
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <MDIO_voidDioTogglePin+0x6c>
    1090:	88 0f       	add	r24, r24
    1092:	99 1f       	adc	r25, r25
    1094:	0a 94       	dec	r0
    1096:	e2 f7       	brpl	.-8      	; 0x1090 <MDIO_voidDioTogglePin+0x68>
    1098:	84 27       	eor	r24, r20
    109a:	8c 93       	st	X, r24
    109c:	3b c0       	rjmp	.+118    	; 0x1114 <MDIO_voidDioTogglePin+0xec>
			case 1: TOG_BIT(PORTB, copy_u8Pin); break;
    109e:	a8 e3       	ldi	r26, 0x38	; 56
    10a0:	b0 e0       	ldi	r27, 0x00	; 0
    10a2:	e8 e3       	ldi	r30, 0x38	; 56
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	80 81       	ld	r24, Z
    10a8:	48 2f       	mov	r20, r24
    10aa:	8a 81       	ldd	r24, Y+2	; 0x02
    10ac:	28 2f       	mov	r18, r24
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	02 2e       	mov	r0, r18
    10b6:	02 c0       	rjmp	.+4      	; 0x10bc <MDIO_voidDioTogglePin+0x94>
    10b8:	88 0f       	add	r24, r24
    10ba:	99 1f       	adc	r25, r25
    10bc:	0a 94       	dec	r0
    10be:	e2 f7       	brpl	.-8      	; 0x10b8 <MDIO_voidDioTogglePin+0x90>
    10c0:	84 27       	eor	r24, r20
    10c2:	8c 93       	st	X, r24
    10c4:	27 c0       	rjmp	.+78     	; 0x1114 <MDIO_voidDioTogglePin+0xec>
			case 2: TOG_BIT(PORTC, copy_u8Pin); break;
    10c6:	a5 e3       	ldi	r26, 0x35	; 53
    10c8:	b0 e0       	ldi	r27, 0x00	; 0
    10ca:	e5 e3       	ldi	r30, 0x35	; 53
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	80 81       	ld	r24, Z
    10d0:	48 2f       	mov	r20, r24
    10d2:	8a 81       	ldd	r24, Y+2	; 0x02
    10d4:	28 2f       	mov	r18, r24
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	02 2e       	mov	r0, r18
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <MDIO_voidDioTogglePin+0xbc>
    10e0:	88 0f       	add	r24, r24
    10e2:	99 1f       	adc	r25, r25
    10e4:	0a 94       	dec	r0
    10e6:	e2 f7       	brpl	.-8      	; 0x10e0 <MDIO_voidDioTogglePin+0xb8>
    10e8:	84 27       	eor	r24, r20
    10ea:	8c 93       	st	X, r24
    10ec:	13 c0       	rjmp	.+38     	; 0x1114 <MDIO_voidDioTogglePin+0xec>
			case 3: TOG_BIT(PORTD, copy_u8Pin); break;
    10ee:	a2 e3       	ldi	r26, 0x32	; 50
    10f0:	b0 e0       	ldi	r27, 0x00	; 0
    10f2:	e2 e3       	ldi	r30, 0x32	; 50
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	48 2f       	mov	r20, r24
    10fa:	8a 81       	ldd	r24, Y+2	; 0x02
    10fc:	28 2f       	mov	r18, r24
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	02 2e       	mov	r0, r18
    1106:	02 c0       	rjmp	.+4      	; 0x110c <MDIO_voidDioTogglePin+0xe4>
    1108:	88 0f       	add	r24, r24
    110a:	99 1f       	adc	r25, r25
    110c:	0a 94       	dec	r0
    110e:	e2 f7       	brpl	.-8      	; 0x1108 <MDIO_voidDioTogglePin+0xe0>
    1110:	84 27       	eor	r24, r20
    1112:	8c 93       	st	X, r24
		}
}
    1114:	0f 90       	pop	r0
    1116:	0f 90       	pop	r0
    1118:	0f 90       	pop	r0
    111a:	0f 90       	pop	r0
    111c:	cf 91       	pop	r28
    111e:	df 91       	pop	r29
    1120:	08 95       	ret

00001122 <MDIO_voidDioSetPortDirection>:

void MDIO_voidDioSetPortDirection (u8 copy_u8Port, u8 copy_u8Direction)
{
    1122:	df 93       	push	r29
    1124:	cf 93       	push	r28
    1126:	00 d0       	rcall	.+0      	; 0x1128 <MDIO_voidDioSetPortDirection+0x6>
    1128:	00 d0       	rcall	.+0      	; 0x112a <MDIO_voidDioSetPortDirection+0x8>
    112a:	cd b7       	in	r28, 0x3d	; 61
    112c:	de b7       	in	r29, 0x3e	; 62
    112e:	89 83       	std	Y+1, r24	; 0x01
    1130:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8Port)
    1132:	89 81       	ldd	r24, Y+1	; 0x01
    1134:	28 2f       	mov	r18, r24
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	3c 83       	std	Y+4, r19	; 0x04
    113a:	2b 83       	std	Y+3, r18	; 0x03
    113c:	8b 81       	ldd	r24, Y+3	; 0x03
    113e:	9c 81       	ldd	r25, Y+4	; 0x04
    1140:	81 30       	cpi	r24, 0x01	; 1
    1142:	91 05       	cpc	r25, r1
    1144:	d1 f0       	breq	.+52     	; 0x117a <MDIO_voidDioSetPortDirection+0x58>
    1146:	2b 81       	ldd	r18, Y+3	; 0x03
    1148:	3c 81       	ldd	r19, Y+4	; 0x04
    114a:	22 30       	cpi	r18, 0x02	; 2
    114c:	31 05       	cpc	r19, r1
    114e:	2c f4       	brge	.+10     	; 0x115a <MDIO_voidDioSetPortDirection+0x38>
    1150:	8b 81       	ldd	r24, Y+3	; 0x03
    1152:	9c 81       	ldd	r25, Y+4	; 0x04
    1154:	00 97       	sbiw	r24, 0x00	; 0
    1156:	61 f0       	breq	.+24     	; 0x1170 <MDIO_voidDioSetPortDirection+0x4e>
    1158:	1e c0       	rjmp	.+60     	; 0x1196 <MDIO_voidDioSetPortDirection+0x74>
    115a:	2b 81       	ldd	r18, Y+3	; 0x03
    115c:	3c 81       	ldd	r19, Y+4	; 0x04
    115e:	22 30       	cpi	r18, 0x02	; 2
    1160:	31 05       	cpc	r19, r1
    1162:	81 f0       	breq	.+32     	; 0x1184 <MDIO_voidDioSetPortDirection+0x62>
    1164:	8b 81       	ldd	r24, Y+3	; 0x03
    1166:	9c 81       	ldd	r25, Y+4	; 0x04
    1168:	83 30       	cpi	r24, 0x03	; 3
    116a:	91 05       	cpc	r25, r1
    116c:	81 f0       	breq	.+32     	; 0x118e <MDIO_voidDioSetPortDirection+0x6c>
    116e:	13 c0       	rjmp	.+38     	; 0x1196 <MDIO_voidDioSetPortDirection+0x74>
		{
			case 0: DDRA = copy_u8Direction; break;
    1170:	ea e3       	ldi	r30, 0x3A	; 58
    1172:	f0 e0       	ldi	r31, 0x00	; 0
    1174:	8a 81       	ldd	r24, Y+2	; 0x02
    1176:	80 83       	st	Z, r24
    1178:	0e c0       	rjmp	.+28     	; 0x1196 <MDIO_voidDioSetPortDirection+0x74>
			case 1: DDRB = copy_u8Direction; break;
    117a:	e7 e3       	ldi	r30, 0x37	; 55
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	8a 81       	ldd	r24, Y+2	; 0x02
    1180:	80 83       	st	Z, r24
    1182:	09 c0       	rjmp	.+18     	; 0x1196 <MDIO_voidDioSetPortDirection+0x74>
			case 2: DDRC = copy_u8Direction; break;
    1184:	e4 e3       	ldi	r30, 0x34	; 52
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	8a 81       	ldd	r24, Y+2	; 0x02
    118a:	80 83       	st	Z, r24
    118c:	04 c0       	rjmp	.+8      	; 0x1196 <MDIO_voidDioSetPortDirection+0x74>
			case 3: DDRD = copy_u8Direction; break;
    118e:	e1 e3       	ldi	r30, 0x31	; 49
    1190:	f0 e0       	ldi	r31, 0x00	; 0
    1192:	8a 81       	ldd	r24, Y+2	; 0x02
    1194:	80 83       	st	Z, r24
		}
}
    1196:	0f 90       	pop	r0
    1198:	0f 90       	pop	r0
    119a:	0f 90       	pop	r0
    119c:	0f 90       	pop	r0
    119e:	cf 91       	pop	r28
    11a0:	df 91       	pop	r29
    11a2:	08 95       	ret

000011a4 <MDIO_voidDioSetPortValue>:

void MDIO_voidDioSetPortValue (u8 copy_u8Port, u8 copy_u8Value)
{
    11a4:	df 93       	push	r29
    11a6:	cf 93       	push	r28
    11a8:	00 d0       	rcall	.+0      	; 0x11aa <MDIO_voidDioSetPortValue+0x6>
    11aa:	00 d0       	rcall	.+0      	; 0x11ac <MDIO_voidDioSetPortValue+0x8>
    11ac:	cd b7       	in	r28, 0x3d	; 61
    11ae:	de b7       	in	r29, 0x3e	; 62
    11b0:	89 83       	std	Y+1, r24	; 0x01
    11b2:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8Port)
    11b4:	89 81       	ldd	r24, Y+1	; 0x01
    11b6:	28 2f       	mov	r18, r24
    11b8:	30 e0       	ldi	r19, 0x00	; 0
    11ba:	3c 83       	std	Y+4, r19	; 0x04
    11bc:	2b 83       	std	Y+3, r18	; 0x03
    11be:	8b 81       	ldd	r24, Y+3	; 0x03
    11c0:	9c 81       	ldd	r25, Y+4	; 0x04
    11c2:	81 30       	cpi	r24, 0x01	; 1
    11c4:	91 05       	cpc	r25, r1
    11c6:	d1 f0       	breq	.+52     	; 0x11fc <MDIO_voidDioSetPortValue+0x58>
    11c8:	2b 81       	ldd	r18, Y+3	; 0x03
    11ca:	3c 81       	ldd	r19, Y+4	; 0x04
    11cc:	22 30       	cpi	r18, 0x02	; 2
    11ce:	31 05       	cpc	r19, r1
    11d0:	2c f4       	brge	.+10     	; 0x11dc <MDIO_voidDioSetPortValue+0x38>
    11d2:	8b 81       	ldd	r24, Y+3	; 0x03
    11d4:	9c 81       	ldd	r25, Y+4	; 0x04
    11d6:	00 97       	sbiw	r24, 0x00	; 0
    11d8:	61 f0       	breq	.+24     	; 0x11f2 <MDIO_voidDioSetPortValue+0x4e>
    11da:	1e c0       	rjmp	.+60     	; 0x1218 <MDIO_voidDioSetPortValue+0x74>
    11dc:	2b 81       	ldd	r18, Y+3	; 0x03
    11de:	3c 81       	ldd	r19, Y+4	; 0x04
    11e0:	22 30       	cpi	r18, 0x02	; 2
    11e2:	31 05       	cpc	r19, r1
    11e4:	81 f0       	breq	.+32     	; 0x1206 <MDIO_voidDioSetPortValue+0x62>
    11e6:	8b 81       	ldd	r24, Y+3	; 0x03
    11e8:	9c 81       	ldd	r25, Y+4	; 0x04
    11ea:	83 30       	cpi	r24, 0x03	; 3
    11ec:	91 05       	cpc	r25, r1
    11ee:	81 f0       	breq	.+32     	; 0x1210 <MDIO_voidDioSetPortValue+0x6c>
    11f0:	13 c0       	rjmp	.+38     	; 0x1218 <MDIO_voidDioSetPortValue+0x74>
		{
			case 0: PORTA = copy_u8Value;  break;
    11f2:	eb e3       	ldi	r30, 0x3B	; 59
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	8a 81       	ldd	r24, Y+2	; 0x02
    11f8:	80 83       	st	Z, r24
    11fa:	0e c0       	rjmp	.+28     	; 0x1218 <MDIO_voidDioSetPortValue+0x74>
			case 1: PORTB = copy_u8Value;  break;
    11fc:	e8 e3       	ldi	r30, 0x38	; 56
    11fe:	f0 e0       	ldi	r31, 0x00	; 0
    1200:	8a 81       	ldd	r24, Y+2	; 0x02
    1202:	80 83       	st	Z, r24
    1204:	09 c0       	rjmp	.+18     	; 0x1218 <MDIO_voidDioSetPortValue+0x74>
			case 2: PORTC = copy_u8Value;  break;
    1206:	e5 e3       	ldi	r30, 0x35	; 53
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	8a 81       	ldd	r24, Y+2	; 0x02
    120c:	80 83       	st	Z, r24
    120e:	04 c0       	rjmp	.+8      	; 0x1218 <MDIO_voidDioSetPortValue+0x74>
			case 3: PORTD = copy_u8Value;  break;
    1210:	e2 e3       	ldi	r30, 0x32	; 50
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	8a 81       	ldd	r24, Y+2	; 0x02
    1216:	80 83       	st	Z, r24
		}
}
    1218:	0f 90       	pop	r0
    121a:	0f 90       	pop	r0
    121c:	0f 90       	pop	r0
    121e:	0f 90       	pop	r0
    1220:	cf 91       	pop	r28
    1222:	df 91       	pop	r29
    1224:	08 95       	ret

00001226 <HSEVEN_voidSevenInitDisplay>:
#include "../../MCAL/M_DIO/MDIO_Interface.h"

char NUM_ARR [] = {ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE};

void HSEVEN_voidSevenInitDisplay (u8 copy_u8Port)
{
    1226:	df 93       	push	r29
    1228:	cf 93       	push	r28
    122a:	0f 92       	push	r0
    122c:	cd b7       	in	r28, 0x3d	; 61
    122e:	de b7       	in	r29, 0x3e	; 62
    1230:	89 83       	std	Y+1, r24	; 0x01
	MDIO_voidDioSetPortDirection(copy_u8Port,0xff);
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	6f ef       	ldi	r22, 0xFF	; 255
    1236:	0e 94 91 08 	call	0x1122	; 0x1122 <MDIO_voidDioSetPortDirection>
}
    123a:	0f 90       	pop	r0
    123c:	cf 91       	pop	r28
    123e:	df 91       	pop	r29
    1240:	08 95       	ret

00001242 <HSEVEN_voidSevenShowNum>:

void HSEVEN_voidSevenShowNum(u8 copy_u8Port, u8 number)
{
    1242:	df 93       	push	r29
    1244:	cf 93       	push	r28
    1246:	00 d0       	rcall	.+0      	; 0x1248 <HSEVEN_voidSevenShowNum+0x6>
    1248:	cd b7       	in	r28, 0x3d	; 61
    124a:	de b7       	in	r29, 0x3e	; 62
    124c:	89 83       	std	Y+1, r24	; 0x01
    124e:	6a 83       	std	Y+2, r22	; 0x02
	number = number % 10;
    1250:	8a 81       	ldd	r24, Y+2	; 0x02
    1252:	9a e0       	ldi	r25, 0x0A	; 10
    1254:	69 2f       	mov	r22, r25
    1256:	0e 94 00 15 	call	0x2a00	; 0x2a00 <__udivmodqi4>
    125a:	89 2f       	mov	r24, r25
    125c:	8a 83       	std	Y+2, r24	; 0x02
	MDIO_voidDioSetPortValue(copy_u8Port,NUM_ARR[number]);
    125e:	8a 81       	ldd	r24, Y+2	; 0x02
    1260:	88 2f       	mov	r24, r24
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	fc 01       	movw	r30, r24
    1266:	e8 59       	subi	r30, 0x98	; 152
    1268:	ff 4f       	sbci	r31, 0xFF	; 255
    126a:	90 81       	ld	r25, Z
    126c:	89 81       	ldd	r24, Y+1	; 0x01
    126e:	69 2f       	mov	r22, r25
    1270:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
}
    1274:	0f 90       	pop	r0
    1276:	0f 90       	pop	r0
    1278:	cf 91       	pop	r28
    127a:	df 91       	pop	r29
    127c:	08 95       	ret

0000127e <main>:

#define LED_PORT 1
#define IN_PORT 0

int main (void)
{
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	df 93       	push	r29
    1284:	cf 93       	push	r28
    1286:	cd b7       	in	r28, 0x3d	; 61
    1288:	de b7       	in	r29, 0x3e	; 62
    128a:	c9 5d       	subi	r28, 0xD9	; 217
    128c:	d0 40       	sbci	r29, 0x00	; 0
    128e:	0f b6       	in	r0, 0x3f	; 63
    1290:	f8 94       	cli
    1292:	de bf       	out	0x3e, r29	; 62
    1294:	0f be       	out	0x3f, r0	; 63
    1296:	cd bf       	out	0x3d, r28	; 61
	s8 L_s8Count;
	u8 L_u8In0 = 0, L_u8In1 = 0, L_u8In2 = 0 , L_u8Compare = 0 ;
    1298:	fe 01       	movw	r30, r28
    129a:	ea 52       	subi	r30, 0x2A	; 42
    129c:	ff 4f       	sbci	r31, 0xFF	; 255
    129e:	10 82       	st	Z, r1
    12a0:	fe 01       	movw	r30, r28
    12a2:	eb 52       	subi	r30, 0x2B	; 43
    12a4:	ff 4f       	sbci	r31, 0xFF	; 255
    12a6:	10 82       	st	Z, r1
    12a8:	fe 01       	movw	r30, r28
    12aa:	ec 52       	subi	r30, 0x2C	; 44
    12ac:	ff 4f       	sbci	r31, 0xFF	; 255
    12ae:	10 82       	st	Z, r1
    12b0:	fe 01       	movw	r30, r28
    12b2:	ed 52       	subi	r30, 0x2D	; 45
    12b4:	ff 4f       	sbci	r31, 0xFF	; 255
    12b6:	10 82       	st	Z, r1

	for (L_s8Count = 0;  L_s8Count < 3; L_s8Count++)
    12b8:	fe 01       	movw	r30, r28
    12ba:	e9 52       	subi	r30, 0x29	; 41
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	10 82       	st	Z, r1
    12c0:	1b c0       	rjmp	.+54     	; 0x12f8 <main+0x7a>
	{
		MDIO_voidDioSetPinDirection(IN_PORT, L_s8Count, 0);
    12c2:	fe 01       	movw	r30, r28
    12c4:	e9 52       	subi	r30, 0x29	; 41
    12c6:	ff 4f       	sbci	r31, 0xFF	; 255
    12c8:	90 81       	ld	r25, Z
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	69 2f       	mov	r22, r25
    12ce:	40 e0       	ldi	r20, 0x00	; 0
    12d0:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidDioSetPinDirection>
		MDIO_voidDioSetPinValue(IN_PORT, L_s8Count, 1);
    12d4:	fe 01       	movw	r30, r28
    12d6:	e9 52       	subi	r30, 0x29	; 41
    12d8:	ff 4f       	sbci	r31, 0xFF	; 255
    12da:	90 81       	ld	r25, Z
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	69 2f       	mov	r22, r25
    12e0:	41 e0       	ldi	r20, 0x01	; 1
    12e2:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
int main (void)
{
	s8 L_s8Count;
	u8 L_u8In0 = 0, L_u8In1 = 0, L_u8In2 = 0 , L_u8Compare = 0 ;

	for (L_s8Count = 0;  L_s8Count < 3; L_s8Count++)
    12e6:	de 01       	movw	r26, r28
    12e8:	a9 52       	subi	r26, 0x29	; 41
    12ea:	bf 4f       	sbci	r27, 0xFF	; 255
    12ec:	fe 01       	movw	r30, r28
    12ee:	e9 52       	subi	r30, 0x29	; 41
    12f0:	ff 4f       	sbci	r31, 0xFF	; 255
    12f2:	80 81       	ld	r24, Z
    12f4:	8f 5f       	subi	r24, 0xFF	; 255
    12f6:	8c 93       	st	X, r24
    12f8:	fe 01       	movw	r30, r28
    12fa:	e9 52       	subi	r30, 0x29	; 41
    12fc:	ff 4f       	sbci	r31, 0xFF	; 255
    12fe:	80 81       	ld	r24, Z
    1300:	83 30       	cpi	r24, 0x03	; 3
    1302:	fc f2       	brlt	.-66     	; 0x12c2 <main+0x44>
	{
		MDIO_voidDioSetPinDirection(IN_PORT, L_s8Count, 0);
		MDIO_voidDioSetPinValue(IN_PORT, L_s8Count, 1);
	}
	MDIO_voidDioSetPortDirection(LED_PORT, 0xff);
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	6f ef       	ldi	r22, 0xFF	; 255
    1308:	0e 94 91 08 	call	0x1122	; 0x1122 <MDIO_voidDioSetPortDirection>
	while(1)
	{
		L_u8In0 = MDIO_u8DioGetPinValue(IN_PORT, 0);
    130c:	80 e0       	ldi	r24, 0x00	; 0
    130e:	60 e0       	ldi	r22, 0x00	; 0
    1310:	0e 94 9b 07 	call	0xf36	; 0xf36 <MDIO_u8DioGetPinValue>
    1314:	fe 01       	movw	r30, r28
    1316:	ea 52       	subi	r30, 0x2A	; 42
    1318:	ff 4f       	sbci	r31, 0xFF	; 255
    131a:	80 83       	st	Z, r24
		L_u8In1 = MDIO_u8DioGetPinValue(IN_PORT, 1);
    131c:	80 e0       	ldi	r24, 0x00	; 0
    131e:	61 e0       	ldi	r22, 0x01	; 1
    1320:	0e 94 9b 07 	call	0xf36	; 0xf36 <MDIO_u8DioGetPinValue>
    1324:	fe 01       	movw	r30, r28
    1326:	eb 52       	subi	r30, 0x2B	; 43
    1328:	ff 4f       	sbci	r31, 0xFF	; 255
    132a:	80 83       	st	Z, r24
		L_u8In2 = MDIO_u8DioGetPinValue(IN_PORT, 2);
    132c:	80 e0       	ldi	r24, 0x00	; 0
    132e:	62 e0       	ldi	r22, 0x02	; 2
    1330:	0e 94 9b 07 	call	0xf36	; 0xf36 <MDIO_u8DioGetPinValue>
    1334:	fe 01       	movw	r30, r28
    1336:	ec 52       	subi	r30, 0x2C	; 44
    1338:	ff 4f       	sbci	r31, 0xFF	; 255
    133a:	80 83       	st	Z, r24

		L_u8Compare = L_u8In0 + L_u8In1 * 2 + L_u8In2 * 4;
    133c:	fe 01       	movw	r30, r28
    133e:	ec 52       	subi	r30, 0x2C	; 44
    1340:	ff 4f       	sbci	r31, 0xFF	; 255
    1342:	80 81       	ld	r24, Z
    1344:	88 2f       	mov	r24, r24
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	9c 01       	movw	r18, r24
    134a:	22 0f       	add	r18, r18
    134c:	33 1f       	adc	r19, r19
    134e:	fe 01       	movw	r30, r28
    1350:	eb 52       	subi	r30, 0x2B	; 43
    1352:	ff 4f       	sbci	r31, 0xFF	; 255
    1354:	80 81       	ld	r24, Z
    1356:	88 2f       	mov	r24, r24
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	82 0f       	add	r24, r18
    135c:	93 1f       	adc	r25, r19
    135e:	88 0f       	add	r24, r24
    1360:	99 1f       	adc	r25, r25
    1362:	98 2f       	mov	r25, r24
    1364:	de 01       	movw	r26, r28
    1366:	ad 52       	subi	r26, 0x2D	; 45
    1368:	bf 4f       	sbci	r27, 0xFF	; 255
    136a:	fe 01       	movw	r30, r28
    136c:	ea 52       	subi	r30, 0x2A	; 42
    136e:	ff 4f       	sbci	r31, 0xFF	; 255
    1370:	80 81       	ld	r24, Z
    1372:	89 0f       	add	r24, r25
    1374:	8c 93       	st	X, r24

		switch(	L_u8Compare )
    1376:	fe 01       	movw	r30, r28
    1378:	ed 52       	subi	r30, 0x2D	; 45
    137a:	ff 4f       	sbci	r31, 0xFF	; 255
    137c:	80 81       	ld	r24, Z
    137e:	28 2f       	mov	r18, r24
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	c8 52       	subi	r28, 0x28	; 40
    1384:	df 4f       	sbci	r29, 0xFF	; 255
    1386:	39 83       	std	Y+1, r19	; 0x01
    1388:	28 83       	st	Y, r18
    138a:	c8 5d       	subi	r28, 0xD8	; 216
    138c:	d0 40       	sbci	r29, 0x00	; 0
    138e:	c8 52       	subi	r28, 0x28	; 40
    1390:	df 4f       	sbci	r29, 0xFF	; 255
    1392:	88 81       	ld	r24, Y
    1394:	99 81       	ldd	r25, Y+1	; 0x01
    1396:	c8 5d       	subi	r28, 0xD8	; 216
    1398:	d0 40       	sbci	r29, 0x00	; 0
    139a:	83 30       	cpi	r24, 0x03	; 3
    139c:	91 05       	cpc	r25, r1
    139e:	09 f4       	brne	.+2      	; 0x13a2 <main+0x124>
    13a0:	de c4       	rjmp	.+2492   	; 0x1d5e <main+0xae0>
    13a2:	c8 52       	subi	r28, 0x28	; 40
    13a4:	df 4f       	sbci	r29, 0xFF	; 255
    13a6:	e8 81       	ld	r30, Y
    13a8:	f9 81       	ldd	r31, Y+1	; 0x01
    13aa:	c8 5d       	subi	r28, 0xD8	; 216
    13ac:	d0 40       	sbci	r29, 0x00	; 0
    13ae:	e4 30       	cpi	r30, 0x04	; 4
    13b0:	f1 05       	cpc	r31, r1
    13b2:	ec f4       	brge	.+58     	; 0x13ee <main+0x170>
    13b4:	c8 52       	subi	r28, 0x28	; 40
    13b6:	df 4f       	sbci	r29, 0xFF	; 255
    13b8:	28 81       	ld	r18, Y
    13ba:	39 81       	ldd	r19, Y+1	; 0x01
    13bc:	c8 5d       	subi	r28, 0xD8	; 216
    13be:	d0 40       	sbci	r29, 0x00	; 0
    13c0:	21 30       	cpi	r18, 0x01	; 1
    13c2:	31 05       	cpc	r19, r1
    13c4:	09 f4       	brne	.+2      	; 0x13c8 <main+0x14a>
    13c6:	ae c1       	rjmp	.+860    	; 0x1724 <main+0x4a6>
    13c8:	c8 52       	subi	r28, 0x28	; 40
    13ca:	df 4f       	sbci	r29, 0xFF	; 255
    13cc:	88 81       	ld	r24, Y
    13ce:	99 81       	ldd	r25, Y+1	; 0x01
    13d0:	c8 5d       	subi	r28, 0xD8	; 216
    13d2:	d0 40       	sbci	r29, 0x00	; 0
    13d4:	82 30       	cpi	r24, 0x02	; 2
    13d6:	91 05       	cpc	r25, r1
    13d8:	0c f0       	brlt	.+2      	; 0x13dc <main+0x15e>
    13da:	33 c3       	rjmp	.+1638   	; 0x1a42 <main+0x7c4>
    13dc:	c8 52       	subi	r28, 0x28	; 40
    13de:	df 4f       	sbci	r29, 0xFF	; 255
    13e0:	e8 81       	ld	r30, Y
    13e2:	f9 81       	ldd	r31, Y+1	; 0x01
    13e4:	c8 5d       	subi	r28, 0xD8	; 216
    13e6:	d0 40       	sbci	r29, 0x00	; 0
    13e8:	30 97       	sbiw	r30, 0x00	; 0
    13ea:	61 f1       	breq	.+88     	; 0x1444 <main+0x1c6>
    13ec:	8f cf       	rjmp	.-226    	; 0x130c <main+0x8e>
    13ee:	c8 52       	subi	r28, 0x28	; 40
    13f0:	df 4f       	sbci	r29, 0xFF	; 255
    13f2:	28 81       	ld	r18, Y
    13f4:	39 81       	ldd	r19, Y+1	; 0x01
    13f6:	c8 5d       	subi	r28, 0xD8	; 216
    13f8:	d0 40       	sbci	r29, 0x00	; 0
    13fa:	25 30       	cpi	r18, 0x05	; 5
    13fc:	31 05       	cpc	r19, r1
    13fe:	09 f4       	brne	.+2      	; 0x1402 <main+0x184>
    1400:	75 c6       	rjmp	.+3306   	; 0x20ec <main+0xe6e>
    1402:	c8 52       	subi	r28, 0x28	; 40
    1404:	df 4f       	sbci	r29, 0xFF	; 255
    1406:	88 81       	ld	r24, Y
    1408:	99 81       	ldd	r25, Y+1	; 0x01
    140a:	c8 5d       	subi	r28, 0xD8	; 216
    140c:	d0 40       	sbci	r29, 0x00	; 0
    140e:	85 30       	cpi	r24, 0x05	; 5
    1410:	91 05       	cpc	r25, r1
    1412:	0c f4       	brge	.+2      	; 0x1416 <main+0x198>
    1414:	87 c5       	rjmp	.+2830   	; 0x1f24 <main+0xca6>
    1416:	c8 52       	subi	r28, 0x28	; 40
    1418:	df 4f       	sbci	r29, 0xFF	; 255
    141a:	e8 81       	ld	r30, Y
    141c:	f9 81       	ldd	r31, Y+1	; 0x01
    141e:	c8 5d       	subi	r28, 0xD8	; 216
    1420:	d0 40       	sbci	r29, 0x00	; 0
    1422:	e6 30       	cpi	r30, 0x06	; 6
    1424:	f1 05       	cpc	r31, r1
    1426:	11 f4       	brne	.+4      	; 0x142c <main+0x1ae>
    1428:	0c 94 25 13 	jmp	0x264a	; 0x264a <main+0x13cc>
    142c:	c8 52       	subi	r28, 0x28	; 40
    142e:	df 4f       	sbci	r29, 0xFF	; 255
    1430:	28 81       	ld	r18, Y
    1432:	39 81       	ldd	r19, Y+1	; 0x01
    1434:	c8 5d       	subi	r28, 0xD8	; 216
    1436:	d0 40       	sbci	r29, 0x00	; 0
    1438:	27 30       	cpi	r18, 0x07	; 7
    143a:	31 05       	cpc	r19, r1
    143c:	11 f4       	brne	.+4      	; 0x1442 <main+0x1c4>
    143e:	0c 94 bb 13 	jmp	0x2776	; 0x2776 <main+0x14f8>
    1442:	64 cf       	rjmp	.-312    	; 0x130c <main+0x8e>
		{

		case 0: //Flashing every 500 ms
			MDIO_voidDioSetPortValue(LED_PORT, 0xff);
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	6f ef       	ldi	r22, 0xFF	; 255
    1448:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
    144c:	fe 01       	movw	r30, r28
    144e:	e1 53       	subi	r30, 0x31	; 49
    1450:	ff 4f       	sbci	r31, 0xFF	; 255
    1452:	80 e0       	ldi	r24, 0x00	; 0
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	aa ef       	ldi	r26, 0xFA	; 250
    1458:	b3 e4       	ldi	r27, 0x43	; 67
    145a:	80 83       	st	Z, r24
    145c:	91 83       	std	Z+1, r25	; 0x01
    145e:	a2 83       	std	Z+2, r26	; 0x02
    1460:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1462:	8e 01       	movw	r16, r28
    1464:	05 53       	subi	r16, 0x35	; 53
    1466:	1f 4f       	sbci	r17, 0xFF	; 255
    1468:	fe 01       	movw	r30, r28
    146a:	e1 53       	subi	r30, 0x31	; 49
    146c:	ff 4f       	sbci	r31, 0xFF	; 255
    146e:	60 81       	ld	r22, Z
    1470:	71 81       	ldd	r23, Z+1	; 0x01
    1472:	82 81       	ldd	r24, Z+2	; 0x02
    1474:	93 81       	ldd	r25, Z+3	; 0x03
    1476:	20 e0       	ldi	r18, 0x00	; 0
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	4a e7       	ldi	r20, 0x7A	; 122
    147c:	53 e4       	ldi	r21, 0x43	; 67
    147e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1482:	dc 01       	movw	r26, r24
    1484:	cb 01       	movw	r24, r22
    1486:	f8 01       	movw	r30, r16
    1488:	80 83       	st	Z, r24
    148a:	91 83       	std	Z+1, r25	; 0x01
    148c:	a2 83       	std	Z+2, r26	; 0x02
    148e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1490:	fe 01       	movw	r30, r28
    1492:	e5 53       	subi	r30, 0x35	; 53
    1494:	ff 4f       	sbci	r31, 0xFF	; 255
    1496:	60 81       	ld	r22, Z
    1498:	71 81       	ldd	r23, Z+1	; 0x01
    149a:	82 81       	ldd	r24, Z+2	; 0x02
    149c:	93 81       	ldd	r25, Z+3	; 0x03
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	40 e8       	ldi	r20, 0x80	; 128
    14a4:	5f e3       	ldi	r21, 0x3F	; 63
    14a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14aa:	88 23       	and	r24, r24
    14ac:	44 f4       	brge	.+16     	; 0x14be <main+0x240>
		__ticks = 1;
    14ae:	fe 01       	movw	r30, r28
    14b0:	e7 53       	subi	r30, 0x37	; 55
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	91 83       	std	Z+1, r25	; 0x01
    14ba:	80 83       	st	Z, r24
    14bc:	64 c0       	rjmp	.+200    	; 0x1586 <main+0x308>
	else if (__tmp > 65535)
    14be:	fe 01       	movw	r30, r28
    14c0:	e5 53       	subi	r30, 0x35	; 53
    14c2:	ff 4f       	sbci	r31, 0xFF	; 255
    14c4:	60 81       	ld	r22, Z
    14c6:	71 81       	ldd	r23, Z+1	; 0x01
    14c8:	82 81       	ldd	r24, Z+2	; 0x02
    14ca:	93 81       	ldd	r25, Z+3	; 0x03
    14cc:	20 e0       	ldi	r18, 0x00	; 0
    14ce:	3f ef       	ldi	r19, 0xFF	; 255
    14d0:	4f e7       	ldi	r20, 0x7F	; 127
    14d2:	57 e4       	ldi	r21, 0x47	; 71
    14d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14d8:	18 16       	cp	r1, r24
    14da:	0c f0       	brlt	.+2      	; 0x14de <main+0x260>
    14dc:	43 c0       	rjmp	.+134    	; 0x1564 <main+0x2e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14de:	fe 01       	movw	r30, r28
    14e0:	e1 53       	subi	r30, 0x31	; 49
    14e2:	ff 4f       	sbci	r31, 0xFF	; 255
    14e4:	60 81       	ld	r22, Z
    14e6:	71 81       	ldd	r23, Z+1	; 0x01
    14e8:	82 81       	ldd	r24, Z+2	; 0x02
    14ea:	93 81       	ldd	r25, Z+3	; 0x03
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	30 e0       	ldi	r19, 0x00	; 0
    14f0:	40 e2       	ldi	r20, 0x20	; 32
    14f2:	51 e4       	ldi	r21, 0x41	; 65
    14f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14f8:	dc 01       	movw	r26, r24
    14fa:	cb 01       	movw	r24, r22
    14fc:	8e 01       	movw	r16, r28
    14fe:	07 53       	subi	r16, 0x37	; 55
    1500:	1f 4f       	sbci	r17, 0xFF	; 255
    1502:	bc 01       	movw	r22, r24
    1504:	cd 01       	movw	r24, r26
    1506:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    150a:	dc 01       	movw	r26, r24
    150c:	cb 01       	movw	r24, r22
    150e:	f8 01       	movw	r30, r16
    1510:	91 83       	std	Z+1, r25	; 0x01
    1512:	80 83       	st	Z, r24
    1514:	1f c0       	rjmp	.+62     	; 0x1554 <main+0x2d6>
    1516:	fe 01       	movw	r30, r28
    1518:	e9 53       	subi	r30, 0x39	; 57
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	89 e1       	ldi	r24, 0x19	; 25
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	91 83       	std	Z+1, r25	; 0x01
    1522:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1524:	fe 01       	movw	r30, r28
    1526:	e9 53       	subi	r30, 0x39	; 57
    1528:	ff 4f       	sbci	r31, 0xFF	; 255
    152a:	80 81       	ld	r24, Z
    152c:	91 81       	ldd	r25, Z+1	; 0x01
    152e:	01 97       	sbiw	r24, 0x01	; 1
    1530:	f1 f7       	brne	.-4      	; 0x152e <main+0x2b0>
    1532:	fe 01       	movw	r30, r28
    1534:	e9 53       	subi	r30, 0x39	; 57
    1536:	ff 4f       	sbci	r31, 0xFF	; 255
    1538:	91 83       	std	Z+1, r25	; 0x01
    153a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    153c:	de 01       	movw	r26, r28
    153e:	a7 53       	subi	r26, 0x37	; 55
    1540:	bf 4f       	sbci	r27, 0xFF	; 255
    1542:	fe 01       	movw	r30, r28
    1544:	e7 53       	subi	r30, 0x37	; 55
    1546:	ff 4f       	sbci	r31, 0xFF	; 255
    1548:	80 81       	ld	r24, Z
    154a:	91 81       	ldd	r25, Z+1	; 0x01
    154c:	01 97       	sbiw	r24, 0x01	; 1
    154e:	11 96       	adiw	r26, 0x01	; 1
    1550:	9c 93       	st	X, r25
    1552:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1554:	fe 01       	movw	r30, r28
    1556:	e7 53       	subi	r30, 0x37	; 55
    1558:	ff 4f       	sbci	r31, 0xFF	; 255
    155a:	80 81       	ld	r24, Z
    155c:	91 81       	ldd	r25, Z+1	; 0x01
    155e:	00 97       	sbiw	r24, 0x00	; 0
    1560:	d1 f6       	brne	.-76     	; 0x1516 <main+0x298>
    1562:	27 c0       	rjmp	.+78     	; 0x15b2 <main+0x334>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1564:	8e 01       	movw	r16, r28
    1566:	07 53       	subi	r16, 0x37	; 55
    1568:	1f 4f       	sbci	r17, 0xFF	; 255
    156a:	fe 01       	movw	r30, r28
    156c:	e5 53       	subi	r30, 0x35	; 53
    156e:	ff 4f       	sbci	r31, 0xFF	; 255
    1570:	60 81       	ld	r22, Z
    1572:	71 81       	ldd	r23, Z+1	; 0x01
    1574:	82 81       	ldd	r24, Z+2	; 0x02
    1576:	93 81       	ldd	r25, Z+3	; 0x03
    1578:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    157c:	dc 01       	movw	r26, r24
    157e:	cb 01       	movw	r24, r22
    1580:	f8 01       	movw	r30, r16
    1582:	91 83       	std	Z+1, r25	; 0x01
    1584:	80 83       	st	Z, r24
    1586:	de 01       	movw	r26, r28
    1588:	ab 53       	subi	r26, 0x3B	; 59
    158a:	bf 4f       	sbci	r27, 0xFF	; 255
    158c:	fe 01       	movw	r30, r28
    158e:	e7 53       	subi	r30, 0x37	; 55
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	80 81       	ld	r24, Z
    1594:	91 81       	ldd	r25, Z+1	; 0x01
    1596:	8d 93       	st	X+, r24
    1598:	9c 93       	st	X, r25
    159a:	fe 01       	movw	r30, r28
    159c:	eb 53       	subi	r30, 0x3B	; 59
    159e:	ff 4f       	sbci	r31, 0xFF	; 255
    15a0:	80 81       	ld	r24, Z
    15a2:	91 81       	ldd	r25, Z+1	; 0x01
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	f1 f7       	brne	.-4      	; 0x15a4 <main+0x326>
    15a8:	fe 01       	movw	r30, r28
    15aa:	eb 53       	subi	r30, 0x3B	; 59
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	91 83       	std	Z+1, r25	; 0x01
    15b0:	80 83       	st	Z, r24
			_delay_ms(500);
			MDIO_voidDioSetPortValue(1, 0x0);
    15b2:	81 e0       	ldi	r24, 0x01	; 1
    15b4:	60 e0       	ldi	r22, 0x00	; 0
    15b6:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
    15ba:	fe 01       	movw	r30, r28
    15bc:	ef 53       	subi	r30, 0x3F	; 63
    15be:	ff 4f       	sbci	r31, 0xFF	; 255
    15c0:	80 e0       	ldi	r24, 0x00	; 0
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	aa ef       	ldi	r26, 0xFA	; 250
    15c6:	b3 e4       	ldi	r27, 0x43	; 67
    15c8:	80 83       	st	Z, r24
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	a2 83       	std	Z+2, r26	; 0x02
    15ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15d0:	8e 01       	movw	r16, r28
    15d2:	03 54       	subi	r16, 0x43	; 67
    15d4:	1f 4f       	sbci	r17, 0xFF	; 255
    15d6:	fe 01       	movw	r30, r28
    15d8:	ef 53       	subi	r30, 0x3F	; 63
    15da:	ff 4f       	sbci	r31, 0xFF	; 255
    15dc:	60 81       	ld	r22, Z
    15de:	71 81       	ldd	r23, Z+1	; 0x01
    15e0:	82 81       	ldd	r24, Z+2	; 0x02
    15e2:	93 81       	ldd	r25, Z+3	; 0x03
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	4a e7       	ldi	r20, 0x7A	; 122
    15ea:	53 e4       	ldi	r21, 0x43	; 67
    15ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15f0:	dc 01       	movw	r26, r24
    15f2:	cb 01       	movw	r24, r22
    15f4:	f8 01       	movw	r30, r16
    15f6:	80 83       	st	Z, r24
    15f8:	91 83       	std	Z+1, r25	; 0x01
    15fa:	a2 83       	std	Z+2, r26	; 0x02
    15fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15fe:	fe 01       	movw	r30, r28
    1600:	e3 54       	subi	r30, 0x43	; 67
    1602:	ff 4f       	sbci	r31, 0xFF	; 255
    1604:	60 81       	ld	r22, Z
    1606:	71 81       	ldd	r23, Z+1	; 0x01
    1608:	82 81       	ldd	r24, Z+2	; 0x02
    160a:	93 81       	ldd	r25, Z+3	; 0x03
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	40 e8       	ldi	r20, 0x80	; 128
    1612:	5f e3       	ldi	r21, 0x3F	; 63
    1614:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1618:	88 23       	and	r24, r24
    161a:	44 f4       	brge	.+16     	; 0x162c <main+0x3ae>
		__ticks = 1;
    161c:	fe 01       	movw	r30, r28
    161e:	e5 54       	subi	r30, 0x45	; 69
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	91 83       	std	Z+1, r25	; 0x01
    1628:	80 83       	st	Z, r24
    162a:	64 c0       	rjmp	.+200    	; 0x16f4 <main+0x476>
	else if (__tmp > 65535)
    162c:	fe 01       	movw	r30, r28
    162e:	e3 54       	subi	r30, 0x43	; 67
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	60 81       	ld	r22, Z
    1634:	71 81       	ldd	r23, Z+1	; 0x01
    1636:	82 81       	ldd	r24, Z+2	; 0x02
    1638:	93 81       	ldd	r25, Z+3	; 0x03
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	3f ef       	ldi	r19, 0xFF	; 255
    163e:	4f e7       	ldi	r20, 0x7F	; 127
    1640:	57 e4       	ldi	r21, 0x47	; 71
    1642:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1646:	18 16       	cp	r1, r24
    1648:	0c f0       	brlt	.+2      	; 0x164c <main+0x3ce>
    164a:	43 c0       	rjmp	.+134    	; 0x16d2 <main+0x454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    164c:	fe 01       	movw	r30, r28
    164e:	ef 53       	subi	r30, 0x3F	; 63
    1650:	ff 4f       	sbci	r31, 0xFF	; 255
    1652:	60 81       	ld	r22, Z
    1654:	71 81       	ldd	r23, Z+1	; 0x01
    1656:	82 81       	ldd	r24, Z+2	; 0x02
    1658:	93 81       	ldd	r25, Z+3	; 0x03
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	40 e2       	ldi	r20, 0x20	; 32
    1660:	51 e4       	ldi	r21, 0x41	; 65
    1662:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	8e 01       	movw	r16, r28
    166c:	05 54       	subi	r16, 0x45	; 69
    166e:	1f 4f       	sbci	r17, 0xFF	; 255
    1670:	bc 01       	movw	r22, r24
    1672:	cd 01       	movw	r24, r26
    1674:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1678:	dc 01       	movw	r26, r24
    167a:	cb 01       	movw	r24, r22
    167c:	f8 01       	movw	r30, r16
    167e:	91 83       	std	Z+1, r25	; 0x01
    1680:	80 83       	st	Z, r24
    1682:	1f c0       	rjmp	.+62     	; 0x16c2 <main+0x444>
    1684:	fe 01       	movw	r30, r28
    1686:	e7 54       	subi	r30, 0x47	; 71
    1688:	ff 4f       	sbci	r31, 0xFF	; 255
    168a:	89 e1       	ldi	r24, 0x19	; 25
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	91 83       	std	Z+1, r25	; 0x01
    1690:	80 83       	st	Z, r24
    1692:	fe 01       	movw	r30, r28
    1694:	e7 54       	subi	r30, 0x47	; 71
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	80 81       	ld	r24, Z
    169a:	91 81       	ldd	r25, Z+1	; 0x01
    169c:	01 97       	sbiw	r24, 0x01	; 1
    169e:	f1 f7       	brne	.-4      	; 0x169c <main+0x41e>
    16a0:	fe 01       	movw	r30, r28
    16a2:	e7 54       	subi	r30, 0x47	; 71
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	91 83       	std	Z+1, r25	; 0x01
    16a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16aa:	de 01       	movw	r26, r28
    16ac:	a5 54       	subi	r26, 0x45	; 69
    16ae:	bf 4f       	sbci	r27, 0xFF	; 255
    16b0:	fe 01       	movw	r30, r28
    16b2:	e5 54       	subi	r30, 0x45	; 69
    16b4:	ff 4f       	sbci	r31, 0xFF	; 255
    16b6:	80 81       	ld	r24, Z
    16b8:	91 81       	ldd	r25, Z+1	; 0x01
    16ba:	01 97       	sbiw	r24, 0x01	; 1
    16bc:	11 96       	adiw	r26, 0x01	; 1
    16be:	9c 93       	st	X, r25
    16c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16c2:	fe 01       	movw	r30, r28
    16c4:	e5 54       	subi	r30, 0x45	; 69
    16c6:	ff 4f       	sbci	r31, 0xFF	; 255
    16c8:	80 81       	ld	r24, Z
    16ca:	91 81       	ldd	r25, Z+1	; 0x01
    16cc:	00 97       	sbiw	r24, 0x00	; 0
    16ce:	d1 f6       	brne	.-76     	; 0x1684 <main+0x406>
    16d0:	1d ce       	rjmp	.-966    	; 0x130c <main+0x8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16d2:	8e 01       	movw	r16, r28
    16d4:	05 54       	subi	r16, 0x45	; 69
    16d6:	1f 4f       	sbci	r17, 0xFF	; 255
    16d8:	fe 01       	movw	r30, r28
    16da:	e3 54       	subi	r30, 0x43	; 67
    16dc:	ff 4f       	sbci	r31, 0xFF	; 255
    16de:	60 81       	ld	r22, Z
    16e0:	71 81       	ldd	r23, Z+1	; 0x01
    16e2:	82 81       	ldd	r24, Z+2	; 0x02
    16e4:	93 81       	ldd	r25, Z+3	; 0x03
    16e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16ea:	dc 01       	movw	r26, r24
    16ec:	cb 01       	movw	r24, r22
    16ee:	f8 01       	movw	r30, r16
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	80 83       	st	Z, r24
    16f4:	de 01       	movw	r26, r28
    16f6:	a9 54       	subi	r26, 0x49	; 73
    16f8:	bf 4f       	sbci	r27, 0xFF	; 255
    16fa:	fe 01       	movw	r30, r28
    16fc:	e5 54       	subi	r30, 0x45	; 69
    16fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1700:	80 81       	ld	r24, Z
    1702:	91 81       	ldd	r25, Z+1	; 0x01
    1704:	11 96       	adiw	r26, 0x01	; 1
    1706:	9c 93       	st	X, r25
    1708:	8e 93       	st	-X, r24
    170a:	fe 01       	movw	r30, r28
    170c:	e9 54       	subi	r30, 0x49	; 73
    170e:	ff 4f       	sbci	r31, 0xFF	; 255
    1710:	80 81       	ld	r24, Z
    1712:	91 81       	ldd	r25, Z+1	; 0x01
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	f1 f7       	brne	.-4      	; 0x1714 <main+0x496>
    1718:	fe 01       	movw	r30, r28
    171a:	e9 54       	subi	r30, 0x49	; 73
    171c:	ff 4f       	sbci	r31, 0xFF	; 255
    171e:	91 83       	std	Z+1, r25	; 0x01
    1720:	80 83       	st	Z, r24
    1722:	f4 cd       	rjmp	.-1048   	; 0x130c <main+0x8e>
			_delay_ms(500);
			break;

		case 1://Shifting Left every 250 ms
			for (L_s8Count = 7; L_s8Count >= 0; L_s8Count --)
    1724:	fe 01       	movw	r30, r28
    1726:	e9 52       	subi	r30, 0x29	; 41
    1728:	ff 4f       	sbci	r31, 0xFF	; 255
    172a:	87 e0       	ldi	r24, 0x07	; 7
    172c:	80 83       	st	Z, r24
    172e:	81 c1       	rjmp	.+770    	; 0x1a32 <main+0x7b4>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    1730:	fe 01       	movw	r30, r28
    1732:	e9 52       	subi	r30, 0x29	; 41
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	90 81       	ld	r25, Z
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	69 2f       	mov	r22, r25
    173c:	41 e0       	ldi	r20, 0x01	; 1
    173e:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    1742:	fe 01       	movw	r30, r28
    1744:	ed 54       	subi	r30, 0x4D	; 77
    1746:	ff 4f       	sbci	r31, 0xFF	; 255
    1748:	80 e0       	ldi	r24, 0x00	; 0
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	aa e7       	ldi	r26, 0x7A	; 122
    174e:	b3 e4       	ldi	r27, 0x43	; 67
    1750:	80 83       	st	Z, r24
    1752:	91 83       	std	Z+1, r25	; 0x01
    1754:	a2 83       	std	Z+2, r26	; 0x02
    1756:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1758:	8e 01       	movw	r16, r28
    175a:	01 55       	subi	r16, 0x51	; 81
    175c:	1f 4f       	sbci	r17, 0xFF	; 255
    175e:	fe 01       	movw	r30, r28
    1760:	ed 54       	subi	r30, 0x4D	; 77
    1762:	ff 4f       	sbci	r31, 0xFF	; 255
    1764:	60 81       	ld	r22, Z
    1766:	71 81       	ldd	r23, Z+1	; 0x01
    1768:	82 81       	ldd	r24, Z+2	; 0x02
    176a:	93 81       	ldd	r25, Z+3	; 0x03
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	4a e7       	ldi	r20, 0x7A	; 122
    1772:	53 e4       	ldi	r21, 0x43	; 67
    1774:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1778:	dc 01       	movw	r26, r24
    177a:	cb 01       	movw	r24, r22
    177c:	f8 01       	movw	r30, r16
    177e:	80 83       	st	Z, r24
    1780:	91 83       	std	Z+1, r25	; 0x01
    1782:	a2 83       	std	Z+2, r26	; 0x02
    1784:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1786:	fe 01       	movw	r30, r28
    1788:	e1 55       	subi	r30, 0x51	; 81
    178a:	ff 4f       	sbci	r31, 0xFF	; 255
    178c:	60 81       	ld	r22, Z
    178e:	71 81       	ldd	r23, Z+1	; 0x01
    1790:	82 81       	ldd	r24, Z+2	; 0x02
    1792:	93 81       	ldd	r25, Z+3	; 0x03
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	40 e8       	ldi	r20, 0x80	; 128
    179a:	5f e3       	ldi	r21, 0x3F	; 63
    179c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17a0:	88 23       	and	r24, r24
    17a2:	44 f4       	brge	.+16     	; 0x17b4 <main+0x536>
		__ticks = 1;
    17a4:	fe 01       	movw	r30, r28
    17a6:	e3 55       	subi	r30, 0x53	; 83
    17a8:	ff 4f       	sbci	r31, 0xFF	; 255
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	91 83       	std	Z+1, r25	; 0x01
    17b0:	80 83       	st	Z, r24
    17b2:	64 c0       	rjmp	.+200    	; 0x187c <main+0x5fe>
	else if (__tmp > 65535)
    17b4:	fe 01       	movw	r30, r28
    17b6:	e1 55       	subi	r30, 0x51	; 81
    17b8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ba:	60 81       	ld	r22, Z
    17bc:	71 81       	ldd	r23, Z+1	; 0x01
    17be:	82 81       	ldd	r24, Z+2	; 0x02
    17c0:	93 81       	ldd	r25, Z+3	; 0x03
    17c2:	20 e0       	ldi	r18, 0x00	; 0
    17c4:	3f ef       	ldi	r19, 0xFF	; 255
    17c6:	4f e7       	ldi	r20, 0x7F	; 127
    17c8:	57 e4       	ldi	r21, 0x47	; 71
    17ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17ce:	18 16       	cp	r1, r24
    17d0:	0c f0       	brlt	.+2      	; 0x17d4 <main+0x556>
    17d2:	43 c0       	rjmp	.+134    	; 0x185a <main+0x5dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17d4:	fe 01       	movw	r30, r28
    17d6:	ed 54       	subi	r30, 0x4D	; 77
    17d8:	ff 4f       	sbci	r31, 0xFF	; 255
    17da:	60 81       	ld	r22, Z
    17dc:	71 81       	ldd	r23, Z+1	; 0x01
    17de:	82 81       	ldd	r24, Z+2	; 0x02
    17e0:	93 81       	ldd	r25, Z+3	; 0x03
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	40 e2       	ldi	r20, 0x20	; 32
    17e8:	51 e4       	ldi	r21, 0x41	; 65
    17ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17ee:	dc 01       	movw	r26, r24
    17f0:	cb 01       	movw	r24, r22
    17f2:	8e 01       	movw	r16, r28
    17f4:	03 55       	subi	r16, 0x53	; 83
    17f6:	1f 4f       	sbci	r17, 0xFF	; 255
    17f8:	bc 01       	movw	r22, r24
    17fa:	cd 01       	movw	r24, r26
    17fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	f8 01       	movw	r30, r16
    1806:	91 83       	std	Z+1, r25	; 0x01
    1808:	80 83       	st	Z, r24
    180a:	1f c0       	rjmp	.+62     	; 0x184a <main+0x5cc>
    180c:	fe 01       	movw	r30, r28
    180e:	e5 55       	subi	r30, 0x55	; 85
    1810:	ff 4f       	sbci	r31, 0xFF	; 255
    1812:	89 e1       	ldi	r24, 0x19	; 25
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	91 83       	std	Z+1, r25	; 0x01
    1818:	80 83       	st	Z, r24
    181a:	fe 01       	movw	r30, r28
    181c:	e5 55       	subi	r30, 0x55	; 85
    181e:	ff 4f       	sbci	r31, 0xFF	; 255
    1820:	80 81       	ld	r24, Z
    1822:	91 81       	ldd	r25, Z+1	; 0x01
    1824:	01 97       	sbiw	r24, 0x01	; 1
    1826:	f1 f7       	brne	.-4      	; 0x1824 <main+0x5a6>
    1828:	fe 01       	movw	r30, r28
    182a:	e5 55       	subi	r30, 0x55	; 85
    182c:	ff 4f       	sbci	r31, 0xFF	; 255
    182e:	91 83       	std	Z+1, r25	; 0x01
    1830:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1832:	de 01       	movw	r26, r28
    1834:	a3 55       	subi	r26, 0x53	; 83
    1836:	bf 4f       	sbci	r27, 0xFF	; 255
    1838:	fe 01       	movw	r30, r28
    183a:	e3 55       	subi	r30, 0x53	; 83
    183c:	ff 4f       	sbci	r31, 0xFF	; 255
    183e:	80 81       	ld	r24, Z
    1840:	91 81       	ldd	r25, Z+1	; 0x01
    1842:	01 97       	sbiw	r24, 0x01	; 1
    1844:	11 96       	adiw	r26, 0x01	; 1
    1846:	9c 93       	st	X, r25
    1848:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    184a:	fe 01       	movw	r30, r28
    184c:	e3 55       	subi	r30, 0x53	; 83
    184e:	ff 4f       	sbci	r31, 0xFF	; 255
    1850:	80 81       	ld	r24, Z
    1852:	91 81       	ldd	r25, Z+1	; 0x01
    1854:	00 97       	sbiw	r24, 0x00	; 0
    1856:	d1 f6       	brne	.-76     	; 0x180c <main+0x58e>
    1858:	27 c0       	rjmp	.+78     	; 0x18a8 <main+0x62a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    185a:	8e 01       	movw	r16, r28
    185c:	03 55       	subi	r16, 0x53	; 83
    185e:	1f 4f       	sbci	r17, 0xFF	; 255
    1860:	fe 01       	movw	r30, r28
    1862:	e1 55       	subi	r30, 0x51	; 81
    1864:	ff 4f       	sbci	r31, 0xFF	; 255
    1866:	60 81       	ld	r22, Z
    1868:	71 81       	ldd	r23, Z+1	; 0x01
    186a:	82 81       	ldd	r24, Z+2	; 0x02
    186c:	93 81       	ldd	r25, Z+3	; 0x03
    186e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1872:	dc 01       	movw	r26, r24
    1874:	cb 01       	movw	r24, r22
    1876:	f8 01       	movw	r30, r16
    1878:	91 83       	std	Z+1, r25	; 0x01
    187a:	80 83       	st	Z, r24
    187c:	de 01       	movw	r26, r28
    187e:	a7 55       	subi	r26, 0x57	; 87
    1880:	bf 4f       	sbci	r27, 0xFF	; 255
    1882:	fe 01       	movw	r30, r28
    1884:	e3 55       	subi	r30, 0x53	; 83
    1886:	ff 4f       	sbci	r31, 0xFF	; 255
    1888:	80 81       	ld	r24, Z
    188a:	91 81       	ldd	r25, Z+1	; 0x01
    188c:	8d 93       	st	X+, r24
    188e:	9c 93       	st	X, r25
    1890:	fe 01       	movw	r30, r28
    1892:	e7 55       	subi	r30, 0x57	; 87
    1894:	ff 4f       	sbci	r31, 0xFF	; 255
    1896:	80 81       	ld	r24, Z
    1898:	91 81       	ldd	r25, Z+1	; 0x01
    189a:	01 97       	sbiw	r24, 0x01	; 1
    189c:	f1 f7       	brne	.-4      	; 0x189a <main+0x61c>
    189e:	fe 01       	movw	r30, r28
    18a0:	e7 55       	subi	r30, 0x57	; 87
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	91 83       	std	Z+1, r25	; 0x01
    18a6:	80 83       	st	Z, r24
				_delay_ms(250);
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 0);
    18a8:	fe 01       	movw	r30, r28
    18aa:	e9 52       	subi	r30, 0x29	; 41
    18ac:	ff 4f       	sbci	r31, 0xFF	; 255
    18ae:	90 81       	ld	r25, Z
    18b0:	81 e0       	ldi	r24, 0x01	; 1
    18b2:	69 2f       	mov	r22, r25
    18b4:	40 e0       	ldi	r20, 0x00	; 0
    18b6:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    18ba:	fe 01       	movw	r30, r28
    18bc:	eb 55       	subi	r30, 0x5B	; 91
    18be:	ff 4f       	sbci	r31, 0xFF	; 255
    18c0:	80 e0       	ldi	r24, 0x00	; 0
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	aa e7       	ldi	r26, 0x7A	; 122
    18c6:	b3 e4       	ldi	r27, 0x43	; 67
    18c8:	80 83       	st	Z, r24
    18ca:	91 83       	std	Z+1, r25	; 0x01
    18cc:	a2 83       	std	Z+2, r26	; 0x02
    18ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d0:	8e 01       	movw	r16, r28
    18d2:	0f 55       	subi	r16, 0x5F	; 95
    18d4:	1f 4f       	sbci	r17, 0xFF	; 255
    18d6:	fe 01       	movw	r30, r28
    18d8:	eb 55       	subi	r30, 0x5B	; 91
    18da:	ff 4f       	sbci	r31, 0xFF	; 255
    18dc:	60 81       	ld	r22, Z
    18de:	71 81       	ldd	r23, Z+1	; 0x01
    18e0:	82 81       	ldd	r24, Z+2	; 0x02
    18e2:	93 81       	ldd	r25, Z+3	; 0x03
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	4a e7       	ldi	r20, 0x7A	; 122
    18ea:	53 e4       	ldi	r21, 0x43	; 67
    18ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	f8 01       	movw	r30, r16
    18f6:	80 83       	st	Z, r24
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	a2 83       	std	Z+2, r26	; 0x02
    18fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18fe:	fe 01       	movw	r30, r28
    1900:	ef 55       	subi	r30, 0x5F	; 95
    1902:	ff 4f       	sbci	r31, 0xFF	; 255
    1904:	60 81       	ld	r22, Z
    1906:	71 81       	ldd	r23, Z+1	; 0x01
    1908:	82 81       	ldd	r24, Z+2	; 0x02
    190a:	93 81       	ldd	r25, Z+3	; 0x03
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	40 e8       	ldi	r20, 0x80	; 128
    1912:	5f e3       	ldi	r21, 0x3F	; 63
    1914:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1918:	88 23       	and	r24, r24
    191a:	44 f4       	brge	.+16     	; 0x192c <main+0x6ae>
		__ticks = 1;
    191c:	fe 01       	movw	r30, r28
    191e:	e1 56       	subi	r30, 0x61	; 97
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	91 83       	std	Z+1, r25	; 0x01
    1928:	80 83       	st	Z, r24
    192a:	64 c0       	rjmp	.+200    	; 0x19f4 <main+0x776>
	else if (__tmp > 65535)
    192c:	fe 01       	movw	r30, r28
    192e:	ef 55       	subi	r30, 0x5F	; 95
    1930:	ff 4f       	sbci	r31, 0xFF	; 255
    1932:	60 81       	ld	r22, Z
    1934:	71 81       	ldd	r23, Z+1	; 0x01
    1936:	82 81       	ldd	r24, Z+2	; 0x02
    1938:	93 81       	ldd	r25, Z+3	; 0x03
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	3f ef       	ldi	r19, 0xFF	; 255
    193e:	4f e7       	ldi	r20, 0x7F	; 127
    1940:	57 e4       	ldi	r21, 0x47	; 71
    1942:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1946:	18 16       	cp	r1, r24
    1948:	0c f0       	brlt	.+2      	; 0x194c <main+0x6ce>
    194a:	43 c0       	rjmp	.+134    	; 0x19d2 <main+0x754>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    194c:	fe 01       	movw	r30, r28
    194e:	eb 55       	subi	r30, 0x5B	; 91
    1950:	ff 4f       	sbci	r31, 0xFF	; 255
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	40 e2       	ldi	r20, 0x20	; 32
    1960:	51 e4       	ldi	r21, 0x41	; 65
    1962:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22
    196a:	8e 01       	movw	r16, r28
    196c:	01 56       	subi	r16, 0x61	; 97
    196e:	1f 4f       	sbci	r17, 0xFF	; 255
    1970:	bc 01       	movw	r22, r24
    1972:	cd 01       	movw	r24, r26
    1974:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	f8 01       	movw	r30, r16
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	80 83       	st	Z, r24
    1982:	1f c0       	rjmp	.+62     	; 0x19c2 <main+0x744>
    1984:	fe 01       	movw	r30, r28
    1986:	e3 56       	subi	r30, 0x63	; 99
    1988:	ff 4f       	sbci	r31, 0xFF	; 255
    198a:	89 e1       	ldi	r24, 0x19	; 25
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	91 83       	std	Z+1, r25	; 0x01
    1990:	80 83       	st	Z, r24
    1992:	fe 01       	movw	r30, r28
    1994:	e3 56       	subi	r30, 0x63	; 99
    1996:	ff 4f       	sbci	r31, 0xFF	; 255
    1998:	80 81       	ld	r24, Z
    199a:	91 81       	ldd	r25, Z+1	; 0x01
    199c:	01 97       	sbiw	r24, 0x01	; 1
    199e:	f1 f7       	brne	.-4      	; 0x199c <main+0x71e>
    19a0:	fe 01       	movw	r30, r28
    19a2:	e3 56       	subi	r30, 0x63	; 99
    19a4:	ff 4f       	sbci	r31, 0xFF	; 255
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19aa:	de 01       	movw	r26, r28
    19ac:	a1 56       	subi	r26, 0x61	; 97
    19ae:	bf 4f       	sbci	r27, 0xFF	; 255
    19b0:	fe 01       	movw	r30, r28
    19b2:	e1 56       	subi	r30, 0x61	; 97
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	80 81       	ld	r24, Z
    19b8:	91 81       	ldd	r25, Z+1	; 0x01
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	11 96       	adiw	r26, 0x01	; 1
    19be:	9c 93       	st	X, r25
    19c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c2:	fe 01       	movw	r30, r28
    19c4:	e1 56       	subi	r30, 0x61	; 97
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	80 81       	ld	r24, Z
    19ca:	91 81       	ldd	r25, Z+1	; 0x01
    19cc:	00 97       	sbiw	r24, 0x00	; 0
    19ce:	d1 f6       	brne	.-76     	; 0x1984 <main+0x706>
    19d0:	27 c0       	rjmp	.+78     	; 0x1a20 <main+0x7a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d2:	8e 01       	movw	r16, r28
    19d4:	01 56       	subi	r16, 0x61	; 97
    19d6:	1f 4f       	sbci	r17, 0xFF	; 255
    19d8:	fe 01       	movw	r30, r28
    19da:	ef 55       	subi	r30, 0x5F	; 95
    19dc:	ff 4f       	sbci	r31, 0xFF	; 255
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19ea:	dc 01       	movw	r26, r24
    19ec:	cb 01       	movw	r24, r22
    19ee:	f8 01       	movw	r30, r16
    19f0:	91 83       	std	Z+1, r25	; 0x01
    19f2:	80 83       	st	Z, r24
    19f4:	de 01       	movw	r26, r28
    19f6:	a5 56       	subi	r26, 0x65	; 101
    19f8:	bf 4f       	sbci	r27, 0xFF	; 255
    19fa:	fe 01       	movw	r30, r28
    19fc:	e1 56       	subi	r30, 0x61	; 97
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	80 81       	ld	r24, Z
    1a02:	91 81       	ldd	r25, Z+1	; 0x01
    1a04:	8d 93       	st	X+, r24
    1a06:	9c 93       	st	X, r25
    1a08:	fe 01       	movw	r30, r28
    1a0a:	e5 56       	subi	r30, 0x65	; 101
    1a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0e:	80 81       	ld	r24, Z
    1a10:	91 81       	ldd	r25, Z+1	; 0x01
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <main+0x794>
    1a16:	fe 01       	movw	r30, r28
    1a18:	e5 56       	subi	r30, 0x65	; 101
    1a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1c:	91 83       	std	Z+1, r25	; 0x01
    1a1e:	80 83       	st	Z, r24
			MDIO_voidDioSetPortValue(1, 0x0);
			_delay_ms(500);
			break;

		case 1://Shifting Left every 250 ms
			for (L_s8Count = 7; L_s8Count >= 0; L_s8Count --)
    1a20:	de 01       	movw	r26, r28
    1a22:	a9 52       	subi	r26, 0x29	; 41
    1a24:	bf 4f       	sbci	r27, 0xFF	; 255
    1a26:	fe 01       	movw	r30, r28
    1a28:	e9 52       	subi	r30, 0x29	; 41
    1a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2c:	80 81       	ld	r24, Z
    1a2e:	81 50       	subi	r24, 0x01	; 1
    1a30:	8c 93       	st	X, r24
    1a32:	fe 01       	movw	r30, r28
    1a34:	e9 52       	subi	r30, 0x29	; 41
    1a36:	ff 4f       	sbci	r31, 0xFF	; 255
    1a38:	80 81       	ld	r24, Z
    1a3a:	88 23       	and	r24, r24
    1a3c:	0c f0       	brlt	.+2      	; 0x1a40 <main+0x7c2>
    1a3e:	78 ce       	rjmp	.-784    	; 0x1730 <main+0x4b2>
    1a40:	65 cc       	rjmp	.-1846   	; 0x130c <main+0x8e>
			}
			break;


		case 2://Shifting Right every 250 ms
			for (L_s8Count = 0; L_s8Count < 8; L_s8Count ++)
    1a42:	fe 01       	movw	r30, r28
    1a44:	e9 52       	subi	r30, 0x29	; 41
    1a46:	ff 4f       	sbci	r31, 0xFF	; 255
    1a48:	10 82       	st	Z, r1
    1a4a:	81 c1       	rjmp	.+770    	; 0x1d4e <main+0xad0>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	e9 52       	subi	r30, 0x29	; 41
    1a50:	ff 4f       	sbci	r31, 0xFF	; 255
    1a52:	90 81       	ld	r25, Z
    1a54:	81 e0       	ldi	r24, 0x01	; 1
    1a56:	69 2f       	mov	r22, r25
    1a58:	41 e0       	ldi	r20, 0x01	; 1
    1a5a:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    1a5e:	fe 01       	movw	r30, r28
    1a60:	e9 56       	subi	r30, 0x69	; 105
    1a62:	ff 4f       	sbci	r31, 0xFF	; 255
    1a64:	80 e0       	ldi	r24, 0x00	; 0
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	aa e7       	ldi	r26, 0x7A	; 122
    1a6a:	b3 e4       	ldi	r27, 0x43	; 67
    1a6c:	80 83       	st	Z, r24
    1a6e:	91 83       	std	Z+1, r25	; 0x01
    1a70:	a2 83       	std	Z+2, r26	; 0x02
    1a72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a74:	8e 01       	movw	r16, r28
    1a76:	0d 56       	subi	r16, 0x6D	; 109
    1a78:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	e9 56       	subi	r30, 0x69	; 105
    1a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a80:	60 81       	ld	r22, Z
    1a82:	71 81       	ldd	r23, Z+1	; 0x01
    1a84:	82 81       	ldd	r24, Z+2	; 0x02
    1a86:	93 81       	ldd	r25, Z+3	; 0x03
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	4a e7       	ldi	r20, 0x7A	; 122
    1a8e:	53 e4       	ldi	r21, 0x43	; 67
    1a90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a94:	dc 01       	movw	r26, r24
    1a96:	cb 01       	movw	r24, r22
    1a98:	f8 01       	movw	r30, r16
    1a9a:	80 83       	st	Z, r24
    1a9c:	91 83       	std	Z+1, r25	; 0x01
    1a9e:	a2 83       	std	Z+2, r26	; 0x02
    1aa0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	ed 56       	subi	r30, 0x6D	; 109
    1aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa8:	60 81       	ld	r22, Z
    1aaa:	71 81       	ldd	r23, Z+1	; 0x01
    1aac:	82 81       	ldd	r24, Z+2	; 0x02
    1aae:	93 81       	ldd	r25, Z+3	; 0x03
    1ab0:	20 e0       	ldi	r18, 0x00	; 0
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	40 e8       	ldi	r20, 0x80	; 128
    1ab6:	5f e3       	ldi	r21, 0x3F	; 63
    1ab8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1abc:	88 23       	and	r24, r24
    1abe:	44 f4       	brge	.+16     	; 0x1ad0 <main+0x852>
		__ticks = 1;
    1ac0:	fe 01       	movw	r30, r28
    1ac2:	ef 56       	subi	r30, 0x6F	; 111
    1ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	91 83       	std	Z+1, r25	; 0x01
    1acc:	80 83       	st	Z, r24
    1ace:	64 c0       	rjmp	.+200    	; 0x1b98 <main+0x91a>
	else if (__tmp > 65535)
    1ad0:	fe 01       	movw	r30, r28
    1ad2:	ed 56       	subi	r30, 0x6D	; 109
    1ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad6:	60 81       	ld	r22, Z
    1ad8:	71 81       	ldd	r23, Z+1	; 0x01
    1ada:	82 81       	ldd	r24, Z+2	; 0x02
    1adc:	93 81       	ldd	r25, Z+3	; 0x03
    1ade:	20 e0       	ldi	r18, 0x00	; 0
    1ae0:	3f ef       	ldi	r19, 0xFF	; 255
    1ae2:	4f e7       	ldi	r20, 0x7F	; 127
    1ae4:	57 e4       	ldi	r21, 0x47	; 71
    1ae6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1aea:	18 16       	cp	r1, r24
    1aec:	0c f0       	brlt	.+2      	; 0x1af0 <main+0x872>
    1aee:	43 c0       	rjmp	.+134    	; 0x1b76 <main+0x8f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1af0:	fe 01       	movw	r30, r28
    1af2:	e9 56       	subi	r30, 0x69	; 105
    1af4:	ff 4f       	sbci	r31, 0xFF	; 255
    1af6:	60 81       	ld	r22, Z
    1af8:	71 81       	ldd	r23, Z+1	; 0x01
    1afa:	82 81       	ldd	r24, Z+2	; 0x02
    1afc:	93 81       	ldd	r25, Z+3	; 0x03
    1afe:	20 e0       	ldi	r18, 0x00	; 0
    1b00:	30 e0       	ldi	r19, 0x00	; 0
    1b02:	40 e2       	ldi	r20, 0x20	; 32
    1b04:	51 e4       	ldi	r21, 0x41	; 65
    1b06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b0a:	dc 01       	movw	r26, r24
    1b0c:	cb 01       	movw	r24, r22
    1b0e:	8e 01       	movw	r16, r28
    1b10:	0f 56       	subi	r16, 0x6F	; 111
    1b12:	1f 4f       	sbci	r17, 0xFF	; 255
    1b14:	bc 01       	movw	r22, r24
    1b16:	cd 01       	movw	r24, r26
    1b18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b1c:	dc 01       	movw	r26, r24
    1b1e:	cb 01       	movw	r24, r22
    1b20:	f8 01       	movw	r30, r16
    1b22:	91 83       	std	Z+1, r25	; 0x01
    1b24:	80 83       	st	Z, r24
    1b26:	1f c0       	rjmp	.+62     	; 0x1b66 <main+0x8e8>
    1b28:	fe 01       	movw	r30, r28
    1b2a:	e1 57       	subi	r30, 0x71	; 113
    1b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b2e:	89 e1       	ldi	r24, 0x19	; 25
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	91 83       	std	Z+1, r25	; 0x01
    1b34:	80 83       	st	Z, r24
    1b36:	fe 01       	movw	r30, r28
    1b38:	e1 57       	subi	r30, 0x71	; 113
    1b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3c:	80 81       	ld	r24, Z
    1b3e:	91 81       	ldd	r25, Z+1	; 0x01
    1b40:	01 97       	sbiw	r24, 0x01	; 1
    1b42:	f1 f7       	brne	.-4      	; 0x1b40 <main+0x8c2>
    1b44:	fe 01       	movw	r30, r28
    1b46:	e1 57       	subi	r30, 0x71	; 113
    1b48:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4a:	91 83       	std	Z+1, r25	; 0x01
    1b4c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b4e:	de 01       	movw	r26, r28
    1b50:	af 56       	subi	r26, 0x6F	; 111
    1b52:	bf 4f       	sbci	r27, 0xFF	; 255
    1b54:	fe 01       	movw	r30, r28
    1b56:	ef 56       	subi	r30, 0x6F	; 111
    1b58:	ff 4f       	sbci	r31, 0xFF	; 255
    1b5a:	80 81       	ld	r24, Z
    1b5c:	91 81       	ldd	r25, Z+1	; 0x01
    1b5e:	01 97       	sbiw	r24, 0x01	; 1
    1b60:	11 96       	adiw	r26, 0x01	; 1
    1b62:	9c 93       	st	X, r25
    1b64:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b66:	fe 01       	movw	r30, r28
    1b68:	ef 56       	subi	r30, 0x6F	; 111
    1b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6c:	80 81       	ld	r24, Z
    1b6e:	91 81       	ldd	r25, Z+1	; 0x01
    1b70:	00 97       	sbiw	r24, 0x00	; 0
    1b72:	d1 f6       	brne	.-76     	; 0x1b28 <main+0x8aa>
    1b74:	27 c0       	rjmp	.+78     	; 0x1bc4 <main+0x946>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b76:	8e 01       	movw	r16, r28
    1b78:	0f 56       	subi	r16, 0x6F	; 111
    1b7a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	ed 56       	subi	r30, 0x6D	; 109
    1b80:	ff 4f       	sbci	r31, 0xFF	; 255
    1b82:	60 81       	ld	r22, Z
    1b84:	71 81       	ldd	r23, Z+1	; 0x01
    1b86:	82 81       	ldd	r24, Z+2	; 0x02
    1b88:	93 81       	ldd	r25, Z+3	; 0x03
    1b8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b8e:	dc 01       	movw	r26, r24
    1b90:	cb 01       	movw	r24, r22
    1b92:	f8 01       	movw	r30, r16
    1b94:	91 83       	std	Z+1, r25	; 0x01
    1b96:	80 83       	st	Z, r24
    1b98:	de 01       	movw	r26, r28
    1b9a:	a3 57       	subi	r26, 0x73	; 115
    1b9c:	bf 4f       	sbci	r27, 0xFF	; 255
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	ef 56       	subi	r30, 0x6F	; 111
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	80 81       	ld	r24, Z
    1ba6:	91 81       	ldd	r25, Z+1	; 0x01
    1ba8:	8d 93       	st	X+, r24
    1baa:	9c 93       	st	X, r25
    1bac:	fe 01       	movw	r30, r28
    1bae:	e3 57       	subi	r30, 0x73	; 115
    1bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb2:	80 81       	ld	r24, Z
    1bb4:	91 81       	ldd	r25, Z+1	; 0x01
    1bb6:	01 97       	sbiw	r24, 0x01	; 1
    1bb8:	f1 f7       	brne	.-4      	; 0x1bb6 <main+0x938>
    1bba:	fe 01       	movw	r30, r28
    1bbc:	e3 57       	subi	r30, 0x73	; 115
    1bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc0:	91 83       	std	Z+1, r25	; 0x01
    1bc2:	80 83       	st	Z, r24
				_delay_ms(250);
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 0);
    1bc4:	fe 01       	movw	r30, r28
    1bc6:	e9 52       	subi	r30, 0x29	; 41
    1bc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bca:	90 81       	ld	r25, Z
    1bcc:	81 e0       	ldi	r24, 0x01	; 1
    1bce:	69 2f       	mov	r22, r25
    1bd0:	40 e0       	ldi	r20, 0x00	; 0
    1bd2:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	e7 57       	subi	r30, 0x77	; 119
    1bda:	ff 4f       	sbci	r31, 0xFF	; 255
    1bdc:	80 e0       	ldi	r24, 0x00	; 0
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	aa e7       	ldi	r26, 0x7A	; 122
    1be2:	b3 e4       	ldi	r27, 0x43	; 67
    1be4:	80 83       	st	Z, r24
    1be6:	91 83       	std	Z+1, r25	; 0x01
    1be8:	a2 83       	std	Z+2, r26	; 0x02
    1bea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bec:	8e 01       	movw	r16, r28
    1bee:	0b 57       	subi	r16, 0x7B	; 123
    1bf0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	e7 57       	subi	r30, 0x77	; 119
    1bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf8:	60 81       	ld	r22, Z
    1bfa:	71 81       	ldd	r23, Z+1	; 0x01
    1bfc:	82 81       	ldd	r24, Z+2	; 0x02
    1bfe:	93 81       	ldd	r25, Z+3	; 0x03
    1c00:	20 e0       	ldi	r18, 0x00	; 0
    1c02:	30 e0       	ldi	r19, 0x00	; 0
    1c04:	4a e7       	ldi	r20, 0x7A	; 122
    1c06:	53 e4       	ldi	r21, 0x43	; 67
    1c08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c0c:	dc 01       	movw	r26, r24
    1c0e:	cb 01       	movw	r24, r22
    1c10:	f8 01       	movw	r30, r16
    1c12:	80 83       	st	Z, r24
    1c14:	91 83       	std	Z+1, r25	; 0x01
    1c16:	a2 83       	std	Z+2, r26	; 0x02
    1c18:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c1a:	fe 01       	movw	r30, r28
    1c1c:	eb 57       	subi	r30, 0x7B	; 123
    1c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c20:	60 81       	ld	r22, Z
    1c22:	71 81       	ldd	r23, Z+1	; 0x01
    1c24:	82 81       	ldd	r24, Z+2	; 0x02
    1c26:	93 81       	ldd	r25, Z+3	; 0x03
    1c28:	20 e0       	ldi	r18, 0x00	; 0
    1c2a:	30 e0       	ldi	r19, 0x00	; 0
    1c2c:	40 e8       	ldi	r20, 0x80	; 128
    1c2e:	5f e3       	ldi	r21, 0x3F	; 63
    1c30:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c34:	88 23       	and	r24, r24
    1c36:	44 f4       	brge	.+16     	; 0x1c48 <main+0x9ca>
		__ticks = 1;
    1c38:	fe 01       	movw	r30, r28
    1c3a:	ed 57       	subi	r30, 0x7D	; 125
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	81 e0       	ldi	r24, 0x01	; 1
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	91 83       	std	Z+1, r25	; 0x01
    1c44:	80 83       	st	Z, r24
    1c46:	64 c0       	rjmp	.+200    	; 0x1d10 <main+0xa92>
	else if (__tmp > 65535)
    1c48:	fe 01       	movw	r30, r28
    1c4a:	eb 57       	subi	r30, 0x7B	; 123
    1c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4e:	60 81       	ld	r22, Z
    1c50:	71 81       	ldd	r23, Z+1	; 0x01
    1c52:	82 81       	ldd	r24, Z+2	; 0x02
    1c54:	93 81       	ldd	r25, Z+3	; 0x03
    1c56:	20 e0       	ldi	r18, 0x00	; 0
    1c58:	3f ef       	ldi	r19, 0xFF	; 255
    1c5a:	4f e7       	ldi	r20, 0x7F	; 127
    1c5c:	57 e4       	ldi	r21, 0x47	; 71
    1c5e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c62:	18 16       	cp	r1, r24
    1c64:	0c f0       	brlt	.+2      	; 0x1c68 <main+0x9ea>
    1c66:	43 c0       	rjmp	.+134    	; 0x1cee <main+0xa70>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c68:	fe 01       	movw	r30, r28
    1c6a:	e7 57       	subi	r30, 0x77	; 119
    1c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6e:	60 81       	ld	r22, Z
    1c70:	71 81       	ldd	r23, Z+1	; 0x01
    1c72:	82 81       	ldd	r24, Z+2	; 0x02
    1c74:	93 81       	ldd	r25, Z+3	; 0x03
    1c76:	20 e0       	ldi	r18, 0x00	; 0
    1c78:	30 e0       	ldi	r19, 0x00	; 0
    1c7a:	40 e2       	ldi	r20, 0x20	; 32
    1c7c:	51 e4       	ldi	r21, 0x41	; 65
    1c7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c82:	dc 01       	movw	r26, r24
    1c84:	cb 01       	movw	r24, r22
    1c86:	8e 01       	movw	r16, r28
    1c88:	0d 57       	subi	r16, 0x7D	; 125
    1c8a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c8c:	bc 01       	movw	r22, r24
    1c8e:	cd 01       	movw	r24, r26
    1c90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c94:	dc 01       	movw	r26, r24
    1c96:	cb 01       	movw	r24, r22
    1c98:	f8 01       	movw	r30, r16
    1c9a:	91 83       	std	Z+1, r25	; 0x01
    1c9c:	80 83       	st	Z, r24
    1c9e:	1f c0       	rjmp	.+62     	; 0x1cde <main+0xa60>
    1ca0:	fe 01       	movw	r30, r28
    1ca2:	ef 57       	subi	r30, 0x7F	; 127
    1ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca6:	89 e1       	ldi	r24, 0x19	; 25
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	91 83       	std	Z+1, r25	; 0x01
    1cac:	80 83       	st	Z, r24
    1cae:	fe 01       	movw	r30, r28
    1cb0:	ef 57       	subi	r30, 0x7F	; 127
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	80 81       	ld	r24, Z
    1cb6:	91 81       	ldd	r25, Z+1	; 0x01
    1cb8:	01 97       	sbiw	r24, 0x01	; 1
    1cba:	f1 f7       	brne	.-4      	; 0x1cb8 <main+0xa3a>
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	ef 57       	subi	r30, 0x7F	; 127
    1cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc2:	91 83       	std	Z+1, r25	; 0x01
    1cc4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cc6:	de 01       	movw	r26, r28
    1cc8:	ad 57       	subi	r26, 0x7D	; 125
    1cca:	bf 4f       	sbci	r27, 0xFF	; 255
    1ccc:	fe 01       	movw	r30, r28
    1cce:	ed 57       	subi	r30, 0x7D	; 125
    1cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd2:	80 81       	ld	r24, Z
    1cd4:	91 81       	ldd	r25, Z+1	; 0x01
    1cd6:	01 97       	sbiw	r24, 0x01	; 1
    1cd8:	11 96       	adiw	r26, 0x01	; 1
    1cda:	9c 93       	st	X, r25
    1cdc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cde:	fe 01       	movw	r30, r28
    1ce0:	ed 57       	subi	r30, 0x7D	; 125
    1ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce4:	80 81       	ld	r24, Z
    1ce6:	91 81       	ldd	r25, Z+1	; 0x01
    1ce8:	00 97       	sbiw	r24, 0x00	; 0
    1cea:	d1 f6       	brne	.-76     	; 0x1ca0 <main+0xa22>
    1cec:	27 c0       	rjmp	.+78     	; 0x1d3c <main+0xabe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cee:	8e 01       	movw	r16, r28
    1cf0:	0d 57       	subi	r16, 0x7D	; 125
    1cf2:	1f 4f       	sbci	r17, 0xFF	; 255
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	eb 57       	subi	r30, 0x7B	; 123
    1cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfa:	60 81       	ld	r22, Z
    1cfc:	71 81       	ldd	r23, Z+1	; 0x01
    1cfe:	82 81       	ldd	r24, Z+2	; 0x02
    1d00:	93 81       	ldd	r25, Z+3	; 0x03
    1d02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	f8 01       	movw	r30, r16
    1d0c:	91 83       	std	Z+1, r25	; 0x01
    1d0e:	80 83       	st	Z, r24
    1d10:	de 01       	movw	r26, r28
    1d12:	a1 58       	subi	r26, 0x81	; 129
    1d14:	bf 4f       	sbci	r27, 0xFF	; 255
    1d16:	fe 01       	movw	r30, r28
    1d18:	ed 57       	subi	r30, 0x7D	; 125
    1d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1c:	80 81       	ld	r24, Z
    1d1e:	91 81       	ldd	r25, Z+1	; 0x01
    1d20:	8d 93       	st	X+, r24
    1d22:	9c 93       	st	X, r25
    1d24:	fe 01       	movw	r30, r28
    1d26:	e1 58       	subi	r30, 0x81	; 129
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	80 81       	ld	r24, Z
    1d2c:	91 81       	ldd	r25, Z+1	; 0x01
    1d2e:	01 97       	sbiw	r24, 0x01	; 1
    1d30:	f1 f7       	brne	.-4      	; 0x1d2e <main+0xab0>
    1d32:	fe 01       	movw	r30, r28
    1d34:	e1 58       	subi	r30, 0x81	; 129
    1d36:	ff 4f       	sbci	r31, 0xFF	; 255
    1d38:	91 83       	std	Z+1, r25	; 0x01
    1d3a:	80 83       	st	Z, r24
			}
			break;


		case 2://Shifting Right every 250 ms
			for (L_s8Count = 0; L_s8Count < 8; L_s8Count ++)
    1d3c:	de 01       	movw	r26, r28
    1d3e:	a9 52       	subi	r26, 0x29	; 41
    1d40:	bf 4f       	sbci	r27, 0xFF	; 255
    1d42:	fe 01       	movw	r30, r28
    1d44:	e9 52       	subi	r30, 0x29	; 41
    1d46:	ff 4f       	sbci	r31, 0xFF	; 255
    1d48:	80 81       	ld	r24, Z
    1d4a:	8f 5f       	subi	r24, 0xFF	; 255
    1d4c:	8c 93       	st	X, r24
    1d4e:	fe 01       	movw	r30, r28
    1d50:	e9 52       	subi	r30, 0x29	; 41
    1d52:	ff 4f       	sbci	r31, 0xFF	; 255
    1d54:	80 81       	ld	r24, Z
    1d56:	88 30       	cpi	r24, 0x08	; 8
    1d58:	0c f4       	brge	.+2      	; 0x1d5c <main+0xade>
    1d5a:	78 ce       	rjmp	.-784    	; 0x1a4c <main+0x7ce>
    1d5c:	d7 ca       	rjmp	.-2642   	; 0x130c <main+0x8e>
			}
			break;


		case 3://2-LEDs Converging every 300 ms
			for (L_s8Count = 0; L_s8Count < 4; L_s8Count ++)
    1d5e:	fe 01       	movw	r30, r28
    1d60:	e9 52       	subi	r30, 0x29	; 41
    1d62:	ff 4f       	sbci	r31, 0xFF	; 255
    1d64:	10 82       	st	Z, r1
    1d66:	d6 c0       	rjmp	.+428    	; 0x1f14 <main+0xc96>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    1d68:	fe 01       	movw	r30, r28
    1d6a:	e9 52       	subi	r30, 0x29	; 41
    1d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6e:	90 81       	ld	r25, Z
    1d70:	81 e0       	ldi	r24, 0x01	; 1
    1d72:	69 2f       	mov	r22, r25
    1d74:	41 e0       	ldi	r20, 0x01	; 1
    1d76:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
				MDIO_voidDioSetPinValue(LED_PORT, 7 - L_s8Count, 1);
    1d7a:	fe 01       	movw	r30, r28
    1d7c:	e9 52       	subi	r30, 0x29	; 41
    1d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d80:	90 81       	ld	r25, Z
    1d82:	87 e0       	ldi	r24, 0x07	; 7
    1d84:	f8 2f       	mov	r31, r24
    1d86:	f9 1b       	sub	r31, r25
    1d88:	9f 2f       	mov	r25, r31
    1d8a:	81 e0       	ldi	r24, 0x01	; 1
    1d8c:	69 2f       	mov	r22, r25
    1d8e:	41 e0       	ldi	r20, 0x01	; 1
    1d90:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    1d94:	fe 01       	movw	r30, r28
    1d96:	e5 58       	subi	r30, 0x85	; 133
    1d98:	ff 4f       	sbci	r31, 0xFF	; 255
    1d9a:	80 e0       	ldi	r24, 0x00	; 0
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	a6 e9       	ldi	r26, 0x96	; 150
    1da0:	b3 e4       	ldi	r27, 0x43	; 67
    1da2:	80 83       	st	Z, r24
    1da4:	91 83       	std	Z+1, r25	; 0x01
    1da6:	a2 83       	std	Z+2, r26	; 0x02
    1da8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1daa:	8e 01       	movw	r16, r28
    1dac:	09 58       	subi	r16, 0x89	; 137
    1dae:	1f 4f       	sbci	r17, 0xFF	; 255
    1db0:	fe 01       	movw	r30, r28
    1db2:	e5 58       	subi	r30, 0x85	; 133
    1db4:	ff 4f       	sbci	r31, 0xFF	; 255
    1db6:	60 81       	ld	r22, Z
    1db8:	71 81       	ldd	r23, Z+1	; 0x01
    1dba:	82 81       	ldd	r24, Z+2	; 0x02
    1dbc:	93 81       	ldd	r25, Z+3	; 0x03
    1dbe:	20 e0       	ldi	r18, 0x00	; 0
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	4a e7       	ldi	r20, 0x7A	; 122
    1dc4:	53 e4       	ldi	r21, 0x43	; 67
    1dc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dca:	dc 01       	movw	r26, r24
    1dcc:	cb 01       	movw	r24, r22
    1dce:	f8 01       	movw	r30, r16
    1dd0:	80 83       	st	Z, r24
    1dd2:	91 83       	std	Z+1, r25	; 0x01
    1dd4:	a2 83       	std	Z+2, r26	; 0x02
    1dd6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dd8:	fe 01       	movw	r30, r28
    1dda:	e9 58       	subi	r30, 0x89	; 137
    1ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dde:	60 81       	ld	r22, Z
    1de0:	71 81       	ldd	r23, Z+1	; 0x01
    1de2:	82 81       	ldd	r24, Z+2	; 0x02
    1de4:	93 81       	ldd	r25, Z+3	; 0x03
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	40 e8       	ldi	r20, 0x80	; 128
    1dec:	5f e3       	ldi	r21, 0x3F	; 63
    1dee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1df2:	88 23       	and	r24, r24
    1df4:	44 f4       	brge	.+16     	; 0x1e06 <main+0xb88>
		__ticks = 1;
    1df6:	fe 01       	movw	r30, r28
    1df8:	eb 58       	subi	r30, 0x8B	; 139
    1dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfc:	81 e0       	ldi	r24, 0x01	; 1
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	91 83       	std	Z+1, r25	; 0x01
    1e02:	80 83       	st	Z, r24
    1e04:	64 c0       	rjmp	.+200    	; 0x1ece <main+0xc50>
	else if (__tmp > 65535)
    1e06:	fe 01       	movw	r30, r28
    1e08:	e9 58       	subi	r30, 0x89	; 137
    1e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0c:	60 81       	ld	r22, Z
    1e0e:	71 81       	ldd	r23, Z+1	; 0x01
    1e10:	82 81       	ldd	r24, Z+2	; 0x02
    1e12:	93 81       	ldd	r25, Z+3	; 0x03
    1e14:	20 e0       	ldi	r18, 0x00	; 0
    1e16:	3f ef       	ldi	r19, 0xFF	; 255
    1e18:	4f e7       	ldi	r20, 0x7F	; 127
    1e1a:	57 e4       	ldi	r21, 0x47	; 71
    1e1c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e20:	18 16       	cp	r1, r24
    1e22:	0c f0       	brlt	.+2      	; 0x1e26 <main+0xba8>
    1e24:	43 c0       	rjmp	.+134    	; 0x1eac <main+0xc2e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e26:	fe 01       	movw	r30, r28
    1e28:	e5 58       	subi	r30, 0x85	; 133
    1e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2c:	60 81       	ld	r22, Z
    1e2e:	71 81       	ldd	r23, Z+1	; 0x01
    1e30:	82 81       	ldd	r24, Z+2	; 0x02
    1e32:	93 81       	ldd	r25, Z+3	; 0x03
    1e34:	20 e0       	ldi	r18, 0x00	; 0
    1e36:	30 e0       	ldi	r19, 0x00	; 0
    1e38:	40 e2       	ldi	r20, 0x20	; 32
    1e3a:	51 e4       	ldi	r21, 0x41	; 65
    1e3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e40:	dc 01       	movw	r26, r24
    1e42:	cb 01       	movw	r24, r22
    1e44:	8e 01       	movw	r16, r28
    1e46:	0b 58       	subi	r16, 0x8B	; 139
    1e48:	1f 4f       	sbci	r17, 0xFF	; 255
    1e4a:	bc 01       	movw	r22, r24
    1e4c:	cd 01       	movw	r24, r26
    1e4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e52:	dc 01       	movw	r26, r24
    1e54:	cb 01       	movw	r24, r22
    1e56:	f8 01       	movw	r30, r16
    1e58:	91 83       	std	Z+1, r25	; 0x01
    1e5a:	80 83       	st	Z, r24
    1e5c:	1f c0       	rjmp	.+62     	; 0x1e9c <main+0xc1e>
    1e5e:	fe 01       	movw	r30, r28
    1e60:	ed 58       	subi	r30, 0x8D	; 141
    1e62:	ff 4f       	sbci	r31, 0xFF	; 255
    1e64:	89 e1       	ldi	r24, 0x19	; 25
    1e66:	90 e0       	ldi	r25, 0x00	; 0
    1e68:	91 83       	std	Z+1, r25	; 0x01
    1e6a:	80 83       	st	Z, r24
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	ed 58       	subi	r30, 0x8D	; 141
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	80 81       	ld	r24, Z
    1e74:	91 81       	ldd	r25, Z+1	; 0x01
    1e76:	01 97       	sbiw	r24, 0x01	; 1
    1e78:	f1 f7       	brne	.-4      	; 0x1e76 <main+0xbf8>
    1e7a:	fe 01       	movw	r30, r28
    1e7c:	ed 58       	subi	r30, 0x8D	; 141
    1e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e80:	91 83       	std	Z+1, r25	; 0x01
    1e82:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e84:	de 01       	movw	r26, r28
    1e86:	ab 58       	subi	r26, 0x8B	; 139
    1e88:	bf 4f       	sbci	r27, 0xFF	; 255
    1e8a:	fe 01       	movw	r30, r28
    1e8c:	eb 58       	subi	r30, 0x8B	; 139
    1e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e90:	80 81       	ld	r24, Z
    1e92:	91 81       	ldd	r25, Z+1	; 0x01
    1e94:	01 97       	sbiw	r24, 0x01	; 1
    1e96:	11 96       	adiw	r26, 0x01	; 1
    1e98:	9c 93       	st	X, r25
    1e9a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e9c:	fe 01       	movw	r30, r28
    1e9e:	eb 58       	subi	r30, 0x8B	; 139
    1ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea2:	80 81       	ld	r24, Z
    1ea4:	91 81       	ldd	r25, Z+1	; 0x01
    1ea6:	00 97       	sbiw	r24, 0x00	; 0
    1ea8:	d1 f6       	brne	.-76     	; 0x1e5e <main+0xbe0>
    1eaa:	27 c0       	rjmp	.+78     	; 0x1efa <main+0xc7c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1eac:	8e 01       	movw	r16, r28
    1eae:	0b 58       	subi	r16, 0x8B	; 139
    1eb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	e9 58       	subi	r30, 0x89	; 137
    1eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb8:	60 81       	ld	r22, Z
    1eba:	71 81       	ldd	r23, Z+1	; 0x01
    1ebc:	82 81       	ldd	r24, Z+2	; 0x02
    1ebe:	93 81       	ldd	r25, Z+3	; 0x03
    1ec0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ec4:	dc 01       	movw	r26, r24
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	f8 01       	movw	r30, r16
    1eca:	91 83       	std	Z+1, r25	; 0x01
    1ecc:	80 83       	st	Z, r24
    1ece:	de 01       	movw	r26, r28
    1ed0:	af 58       	subi	r26, 0x8F	; 143
    1ed2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ed4:	fe 01       	movw	r30, r28
    1ed6:	eb 58       	subi	r30, 0x8B	; 139
    1ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eda:	80 81       	ld	r24, Z
    1edc:	91 81       	ldd	r25, Z+1	; 0x01
    1ede:	8d 93       	st	X+, r24
    1ee0:	9c 93       	st	X, r25
    1ee2:	fe 01       	movw	r30, r28
    1ee4:	ef 58       	subi	r30, 0x8F	; 143
    1ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee8:	80 81       	ld	r24, Z
    1eea:	91 81       	ldd	r25, Z+1	; 0x01
    1eec:	01 97       	sbiw	r24, 0x01	; 1
    1eee:	f1 f7       	brne	.-4      	; 0x1eec <main+0xc6e>
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	ef 58       	subi	r30, 0x8F	; 143
    1ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef6:	91 83       	std	Z+1, r25	; 0x01
    1ef8:	80 83       	st	Z, r24
				_delay_ms(300);
				MDIO_voidDioSetPortValue(LED_PORT, 0x00);
    1efa:	81 e0       	ldi	r24, 0x01	; 1
    1efc:	60 e0       	ldi	r22, 0x00	; 0
    1efe:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
			}
			break;


		case 3://2-LEDs Converging every 300 ms
			for (L_s8Count = 0; L_s8Count < 4; L_s8Count ++)
    1f02:	de 01       	movw	r26, r28
    1f04:	a9 52       	subi	r26, 0x29	; 41
    1f06:	bf 4f       	sbci	r27, 0xFF	; 255
    1f08:	fe 01       	movw	r30, r28
    1f0a:	e9 52       	subi	r30, 0x29	; 41
    1f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0e:	80 81       	ld	r24, Z
    1f10:	8f 5f       	subi	r24, 0xFF	; 255
    1f12:	8c 93       	st	X, r24
    1f14:	fe 01       	movw	r30, r28
    1f16:	e9 52       	subi	r30, 0x29	; 41
    1f18:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1a:	80 81       	ld	r24, Z
    1f1c:	84 30       	cpi	r24, 0x04	; 4
    1f1e:	0c f4       	brge	.+2      	; 0x1f22 <main+0xca4>
    1f20:	23 cf       	rjmp	.-442    	; 0x1d68 <main+0xaea>
    1f22:	f4 c9       	rjmp	.-3096   	; 0x130c <main+0x8e>
			}
			break;


		case 4://2-LEDs Diverging every 300 ms
			for (L_s8Count = 3; L_s8Count >= 0; L_s8Count --)
    1f24:	fe 01       	movw	r30, r28
    1f26:	e9 52       	subi	r30, 0x29	; 41
    1f28:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2a:	83 e0       	ldi	r24, 0x03	; 3
    1f2c:	80 83       	st	Z, r24
    1f2e:	d6 c0       	rjmp	.+428    	; 0x20dc <main+0xe5e>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    1f30:	fe 01       	movw	r30, r28
    1f32:	e9 52       	subi	r30, 0x29	; 41
    1f34:	ff 4f       	sbci	r31, 0xFF	; 255
    1f36:	90 81       	ld	r25, Z
    1f38:	81 e0       	ldi	r24, 0x01	; 1
    1f3a:	69 2f       	mov	r22, r25
    1f3c:	41 e0       	ldi	r20, 0x01	; 1
    1f3e:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
				MDIO_voidDioSetPinValue(LED_PORT, 7 - L_s8Count, 1);
    1f42:	fe 01       	movw	r30, r28
    1f44:	e9 52       	subi	r30, 0x29	; 41
    1f46:	ff 4f       	sbci	r31, 0xFF	; 255
    1f48:	90 81       	ld	r25, Z
    1f4a:	87 e0       	ldi	r24, 0x07	; 7
    1f4c:	f8 2f       	mov	r31, r24
    1f4e:	f9 1b       	sub	r31, r25
    1f50:	9f 2f       	mov	r25, r31
    1f52:	81 e0       	ldi	r24, 0x01	; 1
    1f54:	69 2f       	mov	r22, r25
    1f56:	41 e0       	ldi	r20, 0x01	; 1
    1f58:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    1f5c:	fe 01       	movw	r30, r28
    1f5e:	e3 59       	subi	r30, 0x93	; 147
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	80 e0       	ldi	r24, 0x00	; 0
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	a6 e9       	ldi	r26, 0x96	; 150
    1f68:	b3 e4       	ldi	r27, 0x43	; 67
    1f6a:	80 83       	st	Z, r24
    1f6c:	91 83       	std	Z+1, r25	; 0x01
    1f6e:	a2 83       	std	Z+2, r26	; 0x02
    1f70:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f72:	8e 01       	movw	r16, r28
    1f74:	07 59       	subi	r16, 0x97	; 151
    1f76:	1f 4f       	sbci	r17, 0xFF	; 255
    1f78:	fe 01       	movw	r30, r28
    1f7a:	e3 59       	subi	r30, 0x93	; 147
    1f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7e:	60 81       	ld	r22, Z
    1f80:	71 81       	ldd	r23, Z+1	; 0x01
    1f82:	82 81       	ldd	r24, Z+2	; 0x02
    1f84:	93 81       	ldd	r25, Z+3	; 0x03
    1f86:	20 e0       	ldi	r18, 0x00	; 0
    1f88:	30 e0       	ldi	r19, 0x00	; 0
    1f8a:	4a e7       	ldi	r20, 0x7A	; 122
    1f8c:	53 e4       	ldi	r21, 0x43	; 67
    1f8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f92:	dc 01       	movw	r26, r24
    1f94:	cb 01       	movw	r24, r22
    1f96:	f8 01       	movw	r30, r16
    1f98:	80 83       	st	Z, r24
    1f9a:	91 83       	std	Z+1, r25	; 0x01
    1f9c:	a2 83       	std	Z+2, r26	; 0x02
    1f9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	e7 59       	subi	r30, 0x97	; 151
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	60 81       	ld	r22, Z
    1fa8:	71 81       	ldd	r23, Z+1	; 0x01
    1faa:	82 81       	ldd	r24, Z+2	; 0x02
    1fac:	93 81       	ldd	r25, Z+3	; 0x03
    1fae:	20 e0       	ldi	r18, 0x00	; 0
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	40 e8       	ldi	r20, 0x80	; 128
    1fb4:	5f e3       	ldi	r21, 0x3F	; 63
    1fb6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fba:	88 23       	and	r24, r24
    1fbc:	44 f4       	brge	.+16     	; 0x1fce <main+0xd50>
		__ticks = 1;
    1fbe:	fe 01       	movw	r30, r28
    1fc0:	e9 59       	subi	r30, 0x99	; 153
    1fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc4:	81 e0       	ldi	r24, 0x01	; 1
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	91 83       	std	Z+1, r25	; 0x01
    1fca:	80 83       	st	Z, r24
    1fcc:	64 c0       	rjmp	.+200    	; 0x2096 <main+0xe18>
	else if (__tmp > 65535)
    1fce:	fe 01       	movw	r30, r28
    1fd0:	e7 59       	subi	r30, 0x97	; 151
    1fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd4:	60 81       	ld	r22, Z
    1fd6:	71 81       	ldd	r23, Z+1	; 0x01
    1fd8:	82 81       	ldd	r24, Z+2	; 0x02
    1fda:	93 81       	ldd	r25, Z+3	; 0x03
    1fdc:	20 e0       	ldi	r18, 0x00	; 0
    1fde:	3f ef       	ldi	r19, 0xFF	; 255
    1fe0:	4f e7       	ldi	r20, 0x7F	; 127
    1fe2:	57 e4       	ldi	r21, 0x47	; 71
    1fe4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fe8:	18 16       	cp	r1, r24
    1fea:	0c f0       	brlt	.+2      	; 0x1fee <main+0xd70>
    1fec:	43 c0       	rjmp	.+134    	; 0x2074 <main+0xdf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fee:	fe 01       	movw	r30, r28
    1ff0:	e3 59       	subi	r30, 0x93	; 147
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	60 81       	ld	r22, Z
    1ff6:	71 81       	ldd	r23, Z+1	; 0x01
    1ff8:	82 81       	ldd	r24, Z+2	; 0x02
    1ffa:	93 81       	ldd	r25, Z+3	; 0x03
    1ffc:	20 e0       	ldi	r18, 0x00	; 0
    1ffe:	30 e0       	ldi	r19, 0x00	; 0
    2000:	40 e2       	ldi	r20, 0x20	; 32
    2002:	51 e4       	ldi	r21, 0x41	; 65
    2004:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2008:	dc 01       	movw	r26, r24
    200a:	cb 01       	movw	r24, r22
    200c:	8e 01       	movw	r16, r28
    200e:	09 59       	subi	r16, 0x99	; 153
    2010:	1f 4f       	sbci	r17, 0xFF	; 255
    2012:	bc 01       	movw	r22, r24
    2014:	cd 01       	movw	r24, r26
    2016:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    201a:	dc 01       	movw	r26, r24
    201c:	cb 01       	movw	r24, r22
    201e:	f8 01       	movw	r30, r16
    2020:	91 83       	std	Z+1, r25	; 0x01
    2022:	80 83       	st	Z, r24
    2024:	1f c0       	rjmp	.+62     	; 0x2064 <main+0xde6>
    2026:	fe 01       	movw	r30, r28
    2028:	eb 59       	subi	r30, 0x9B	; 155
    202a:	ff 4f       	sbci	r31, 0xFF	; 255
    202c:	89 e1       	ldi	r24, 0x19	; 25
    202e:	90 e0       	ldi	r25, 0x00	; 0
    2030:	91 83       	std	Z+1, r25	; 0x01
    2032:	80 83       	st	Z, r24
    2034:	fe 01       	movw	r30, r28
    2036:	eb 59       	subi	r30, 0x9B	; 155
    2038:	ff 4f       	sbci	r31, 0xFF	; 255
    203a:	80 81       	ld	r24, Z
    203c:	91 81       	ldd	r25, Z+1	; 0x01
    203e:	01 97       	sbiw	r24, 0x01	; 1
    2040:	f1 f7       	brne	.-4      	; 0x203e <main+0xdc0>
    2042:	fe 01       	movw	r30, r28
    2044:	eb 59       	subi	r30, 0x9B	; 155
    2046:	ff 4f       	sbci	r31, 0xFF	; 255
    2048:	91 83       	std	Z+1, r25	; 0x01
    204a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    204c:	de 01       	movw	r26, r28
    204e:	a9 59       	subi	r26, 0x99	; 153
    2050:	bf 4f       	sbci	r27, 0xFF	; 255
    2052:	fe 01       	movw	r30, r28
    2054:	e9 59       	subi	r30, 0x99	; 153
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	80 81       	ld	r24, Z
    205a:	91 81       	ldd	r25, Z+1	; 0x01
    205c:	01 97       	sbiw	r24, 0x01	; 1
    205e:	11 96       	adiw	r26, 0x01	; 1
    2060:	9c 93       	st	X, r25
    2062:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2064:	fe 01       	movw	r30, r28
    2066:	e9 59       	subi	r30, 0x99	; 153
    2068:	ff 4f       	sbci	r31, 0xFF	; 255
    206a:	80 81       	ld	r24, Z
    206c:	91 81       	ldd	r25, Z+1	; 0x01
    206e:	00 97       	sbiw	r24, 0x00	; 0
    2070:	d1 f6       	brne	.-76     	; 0x2026 <main+0xda8>
    2072:	27 c0       	rjmp	.+78     	; 0x20c2 <main+0xe44>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2074:	8e 01       	movw	r16, r28
    2076:	09 59       	subi	r16, 0x99	; 153
    2078:	1f 4f       	sbci	r17, 0xFF	; 255
    207a:	fe 01       	movw	r30, r28
    207c:	e7 59       	subi	r30, 0x97	; 151
    207e:	ff 4f       	sbci	r31, 0xFF	; 255
    2080:	60 81       	ld	r22, Z
    2082:	71 81       	ldd	r23, Z+1	; 0x01
    2084:	82 81       	ldd	r24, Z+2	; 0x02
    2086:	93 81       	ldd	r25, Z+3	; 0x03
    2088:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    208c:	dc 01       	movw	r26, r24
    208e:	cb 01       	movw	r24, r22
    2090:	f8 01       	movw	r30, r16
    2092:	91 83       	std	Z+1, r25	; 0x01
    2094:	80 83       	st	Z, r24
    2096:	de 01       	movw	r26, r28
    2098:	ad 59       	subi	r26, 0x9D	; 157
    209a:	bf 4f       	sbci	r27, 0xFF	; 255
    209c:	fe 01       	movw	r30, r28
    209e:	e9 59       	subi	r30, 0x99	; 153
    20a0:	ff 4f       	sbci	r31, 0xFF	; 255
    20a2:	80 81       	ld	r24, Z
    20a4:	91 81       	ldd	r25, Z+1	; 0x01
    20a6:	8d 93       	st	X+, r24
    20a8:	9c 93       	st	X, r25
    20aa:	fe 01       	movw	r30, r28
    20ac:	ed 59       	subi	r30, 0x9D	; 157
    20ae:	ff 4f       	sbci	r31, 0xFF	; 255
    20b0:	80 81       	ld	r24, Z
    20b2:	91 81       	ldd	r25, Z+1	; 0x01
    20b4:	01 97       	sbiw	r24, 0x01	; 1
    20b6:	f1 f7       	brne	.-4      	; 0x20b4 <main+0xe36>
    20b8:	fe 01       	movw	r30, r28
    20ba:	ed 59       	subi	r30, 0x9D	; 157
    20bc:	ff 4f       	sbci	r31, 0xFF	; 255
    20be:	91 83       	std	Z+1, r25	; 0x01
    20c0:	80 83       	st	Z, r24
				_delay_ms(300);
				MDIO_voidDioSetPortValue(LED_PORT, 0x00);
    20c2:	81 e0       	ldi	r24, 0x01	; 1
    20c4:	60 e0       	ldi	r22, 0x00	; 0
    20c6:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
			}
			break;


		case 4://2-LEDs Diverging every 300 ms
			for (L_s8Count = 3; L_s8Count >= 0; L_s8Count --)
    20ca:	de 01       	movw	r26, r28
    20cc:	a9 52       	subi	r26, 0x29	; 41
    20ce:	bf 4f       	sbci	r27, 0xFF	; 255
    20d0:	fe 01       	movw	r30, r28
    20d2:	e9 52       	subi	r30, 0x29	; 41
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	80 81       	ld	r24, Z
    20d8:	81 50       	subi	r24, 0x01	; 1
    20da:	8c 93       	st	X, r24
    20dc:	fe 01       	movw	r30, r28
    20de:	e9 52       	subi	r30, 0x29	; 41
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	80 81       	ld	r24, Z
    20e4:	88 23       	and	r24, r24
    20e6:	0c f0       	brlt	.+2      	; 0x20ea <main+0xe6c>
    20e8:	23 cf       	rjmp	.-442    	; 0x1f30 <main+0xcb2>
    20ea:	10 c9       	rjmp	.-3552   	; 0x130c <main+0x8e>
			}
			break;


		case 5://Ping Pong effect every 250 ms
			for (L_s8Count = 7; L_s8Count >= 0; L_s8Count --)
    20ec:	fe 01       	movw	r30, r28
    20ee:	e9 52       	subi	r30, 0x29	; 41
    20f0:	ff 4f       	sbci	r31, 0xFF	; 255
    20f2:	87 e0       	ldi	r24, 0x07	; 7
    20f4:	80 83       	st	Z, r24
    20f6:	81 c1       	rjmp	.+770    	; 0x23fa <main+0x117c>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    20f8:	fe 01       	movw	r30, r28
    20fa:	e9 52       	subi	r30, 0x29	; 41
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	90 81       	ld	r25, Z
    2100:	81 e0       	ldi	r24, 0x01	; 1
    2102:	69 2f       	mov	r22, r25
    2104:	41 e0       	ldi	r20, 0x01	; 1
    2106:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    210a:	fe 01       	movw	r30, r28
    210c:	e1 5a       	subi	r30, 0xA1	; 161
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	80 e0       	ldi	r24, 0x00	; 0
    2112:	90 e0       	ldi	r25, 0x00	; 0
    2114:	aa e7       	ldi	r26, 0x7A	; 122
    2116:	b3 e4       	ldi	r27, 0x43	; 67
    2118:	80 83       	st	Z, r24
    211a:	91 83       	std	Z+1, r25	; 0x01
    211c:	a2 83       	std	Z+2, r26	; 0x02
    211e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2120:	8e 01       	movw	r16, r28
    2122:	05 5a       	subi	r16, 0xA5	; 165
    2124:	1f 4f       	sbci	r17, 0xFF	; 255
    2126:	fe 01       	movw	r30, r28
    2128:	e1 5a       	subi	r30, 0xA1	; 161
    212a:	ff 4f       	sbci	r31, 0xFF	; 255
    212c:	60 81       	ld	r22, Z
    212e:	71 81       	ldd	r23, Z+1	; 0x01
    2130:	82 81       	ldd	r24, Z+2	; 0x02
    2132:	93 81       	ldd	r25, Z+3	; 0x03
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	4a e7       	ldi	r20, 0x7A	; 122
    213a:	53 e4       	ldi	r21, 0x43	; 67
    213c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2140:	dc 01       	movw	r26, r24
    2142:	cb 01       	movw	r24, r22
    2144:	f8 01       	movw	r30, r16
    2146:	80 83       	st	Z, r24
    2148:	91 83       	std	Z+1, r25	; 0x01
    214a:	a2 83       	std	Z+2, r26	; 0x02
    214c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    214e:	fe 01       	movw	r30, r28
    2150:	e5 5a       	subi	r30, 0xA5	; 165
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	60 81       	ld	r22, Z
    2156:	71 81       	ldd	r23, Z+1	; 0x01
    2158:	82 81       	ldd	r24, Z+2	; 0x02
    215a:	93 81       	ldd	r25, Z+3	; 0x03
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	30 e0       	ldi	r19, 0x00	; 0
    2160:	40 e8       	ldi	r20, 0x80	; 128
    2162:	5f e3       	ldi	r21, 0x3F	; 63
    2164:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2168:	88 23       	and	r24, r24
    216a:	44 f4       	brge	.+16     	; 0x217c <main+0xefe>
		__ticks = 1;
    216c:	fe 01       	movw	r30, r28
    216e:	e7 5a       	subi	r30, 0xA7	; 167
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	81 e0       	ldi	r24, 0x01	; 1
    2174:	90 e0       	ldi	r25, 0x00	; 0
    2176:	91 83       	std	Z+1, r25	; 0x01
    2178:	80 83       	st	Z, r24
    217a:	64 c0       	rjmp	.+200    	; 0x2244 <main+0xfc6>
	else if (__tmp > 65535)
    217c:	fe 01       	movw	r30, r28
    217e:	e5 5a       	subi	r30, 0xA5	; 165
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	60 81       	ld	r22, Z
    2184:	71 81       	ldd	r23, Z+1	; 0x01
    2186:	82 81       	ldd	r24, Z+2	; 0x02
    2188:	93 81       	ldd	r25, Z+3	; 0x03
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	3f ef       	ldi	r19, 0xFF	; 255
    218e:	4f e7       	ldi	r20, 0x7F	; 127
    2190:	57 e4       	ldi	r21, 0x47	; 71
    2192:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2196:	18 16       	cp	r1, r24
    2198:	0c f0       	brlt	.+2      	; 0x219c <main+0xf1e>
    219a:	43 c0       	rjmp	.+134    	; 0x2222 <main+0xfa4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    219c:	fe 01       	movw	r30, r28
    219e:	e1 5a       	subi	r30, 0xA1	; 161
    21a0:	ff 4f       	sbci	r31, 0xFF	; 255
    21a2:	60 81       	ld	r22, Z
    21a4:	71 81       	ldd	r23, Z+1	; 0x01
    21a6:	82 81       	ldd	r24, Z+2	; 0x02
    21a8:	93 81       	ldd	r25, Z+3	; 0x03
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	30 e0       	ldi	r19, 0x00	; 0
    21ae:	40 e2       	ldi	r20, 0x20	; 32
    21b0:	51 e4       	ldi	r21, 0x41	; 65
    21b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21b6:	dc 01       	movw	r26, r24
    21b8:	cb 01       	movw	r24, r22
    21ba:	8e 01       	movw	r16, r28
    21bc:	07 5a       	subi	r16, 0xA7	; 167
    21be:	1f 4f       	sbci	r17, 0xFF	; 255
    21c0:	bc 01       	movw	r22, r24
    21c2:	cd 01       	movw	r24, r26
    21c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21c8:	dc 01       	movw	r26, r24
    21ca:	cb 01       	movw	r24, r22
    21cc:	f8 01       	movw	r30, r16
    21ce:	91 83       	std	Z+1, r25	; 0x01
    21d0:	80 83       	st	Z, r24
    21d2:	1f c0       	rjmp	.+62     	; 0x2212 <main+0xf94>
    21d4:	fe 01       	movw	r30, r28
    21d6:	e9 5a       	subi	r30, 0xA9	; 169
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	89 e1       	ldi	r24, 0x19	; 25
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	91 83       	std	Z+1, r25	; 0x01
    21e0:	80 83       	st	Z, r24
    21e2:	fe 01       	movw	r30, r28
    21e4:	e9 5a       	subi	r30, 0xA9	; 169
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	80 81       	ld	r24, Z
    21ea:	91 81       	ldd	r25, Z+1	; 0x01
    21ec:	01 97       	sbiw	r24, 0x01	; 1
    21ee:	f1 f7       	brne	.-4      	; 0x21ec <main+0xf6e>
    21f0:	fe 01       	movw	r30, r28
    21f2:	e9 5a       	subi	r30, 0xA9	; 169
    21f4:	ff 4f       	sbci	r31, 0xFF	; 255
    21f6:	91 83       	std	Z+1, r25	; 0x01
    21f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21fa:	de 01       	movw	r26, r28
    21fc:	a7 5a       	subi	r26, 0xA7	; 167
    21fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2200:	fe 01       	movw	r30, r28
    2202:	e7 5a       	subi	r30, 0xA7	; 167
    2204:	ff 4f       	sbci	r31, 0xFF	; 255
    2206:	80 81       	ld	r24, Z
    2208:	91 81       	ldd	r25, Z+1	; 0x01
    220a:	01 97       	sbiw	r24, 0x01	; 1
    220c:	11 96       	adiw	r26, 0x01	; 1
    220e:	9c 93       	st	X, r25
    2210:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2212:	fe 01       	movw	r30, r28
    2214:	e7 5a       	subi	r30, 0xA7	; 167
    2216:	ff 4f       	sbci	r31, 0xFF	; 255
    2218:	80 81       	ld	r24, Z
    221a:	91 81       	ldd	r25, Z+1	; 0x01
    221c:	00 97       	sbiw	r24, 0x00	; 0
    221e:	d1 f6       	brne	.-76     	; 0x21d4 <main+0xf56>
    2220:	27 c0       	rjmp	.+78     	; 0x2270 <main+0xff2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2222:	8e 01       	movw	r16, r28
    2224:	07 5a       	subi	r16, 0xA7	; 167
    2226:	1f 4f       	sbci	r17, 0xFF	; 255
    2228:	fe 01       	movw	r30, r28
    222a:	e5 5a       	subi	r30, 0xA5	; 165
    222c:	ff 4f       	sbci	r31, 0xFF	; 255
    222e:	60 81       	ld	r22, Z
    2230:	71 81       	ldd	r23, Z+1	; 0x01
    2232:	82 81       	ldd	r24, Z+2	; 0x02
    2234:	93 81       	ldd	r25, Z+3	; 0x03
    2236:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    223a:	dc 01       	movw	r26, r24
    223c:	cb 01       	movw	r24, r22
    223e:	f8 01       	movw	r30, r16
    2240:	91 83       	std	Z+1, r25	; 0x01
    2242:	80 83       	st	Z, r24
    2244:	de 01       	movw	r26, r28
    2246:	ab 5a       	subi	r26, 0xAB	; 171
    2248:	bf 4f       	sbci	r27, 0xFF	; 255
    224a:	fe 01       	movw	r30, r28
    224c:	e7 5a       	subi	r30, 0xA7	; 167
    224e:	ff 4f       	sbci	r31, 0xFF	; 255
    2250:	80 81       	ld	r24, Z
    2252:	91 81       	ldd	r25, Z+1	; 0x01
    2254:	8d 93       	st	X+, r24
    2256:	9c 93       	st	X, r25
    2258:	fe 01       	movw	r30, r28
    225a:	eb 5a       	subi	r30, 0xAB	; 171
    225c:	ff 4f       	sbci	r31, 0xFF	; 255
    225e:	80 81       	ld	r24, Z
    2260:	91 81       	ldd	r25, Z+1	; 0x01
    2262:	01 97       	sbiw	r24, 0x01	; 1
    2264:	f1 f7       	brne	.-4      	; 0x2262 <main+0xfe4>
    2266:	fe 01       	movw	r30, r28
    2268:	eb 5a       	subi	r30, 0xAB	; 171
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	91 83       	std	Z+1, r25	; 0x01
    226e:	80 83       	st	Z, r24
				_delay_ms(250);
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 0);
    2270:	fe 01       	movw	r30, r28
    2272:	e9 52       	subi	r30, 0x29	; 41
    2274:	ff 4f       	sbci	r31, 0xFF	; 255
    2276:	90 81       	ld	r25, Z
    2278:	81 e0       	ldi	r24, 0x01	; 1
    227a:	69 2f       	mov	r22, r25
    227c:	40 e0       	ldi	r20, 0x00	; 0
    227e:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    2282:	fe 01       	movw	r30, r28
    2284:	ef 5a       	subi	r30, 0xAF	; 175
    2286:	ff 4f       	sbci	r31, 0xFF	; 255
    2288:	80 e0       	ldi	r24, 0x00	; 0
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	aa e7       	ldi	r26, 0x7A	; 122
    228e:	b3 e4       	ldi	r27, 0x43	; 67
    2290:	80 83       	st	Z, r24
    2292:	91 83       	std	Z+1, r25	; 0x01
    2294:	a2 83       	std	Z+2, r26	; 0x02
    2296:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2298:	8e 01       	movw	r16, r28
    229a:	03 5b       	subi	r16, 0xB3	; 179
    229c:	1f 4f       	sbci	r17, 0xFF	; 255
    229e:	fe 01       	movw	r30, r28
    22a0:	ef 5a       	subi	r30, 0xAF	; 175
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	60 81       	ld	r22, Z
    22a6:	71 81       	ldd	r23, Z+1	; 0x01
    22a8:	82 81       	ldd	r24, Z+2	; 0x02
    22aa:	93 81       	ldd	r25, Z+3	; 0x03
    22ac:	20 e0       	ldi	r18, 0x00	; 0
    22ae:	30 e0       	ldi	r19, 0x00	; 0
    22b0:	4a e7       	ldi	r20, 0x7A	; 122
    22b2:	53 e4       	ldi	r21, 0x43	; 67
    22b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22b8:	dc 01       	movw	r26, r24
    22ba:	cb 01       	movw	r24, r22
    22bc:	f8 01       	movw	r30, r16
    22be:	80 83       	st	Z, r24
    22c0:	91 83       	std	Z+1, r25	; 0x01
    22c2:	a2 83       	std	Z+2, r26	; 0x02
    22c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22c6:	fe 01       	movw	r30, r28
    22c8:	e3 5b       	subi	r30, 0xB3	; 179
    22ca:	ff 4f       	sbci	r31, 0xFF	; 255
    22cc:	60 81       	ld	r22, Z
    22ce:	71 81       	ldd	r23, Z+1	; 0x01
    22d0:	82 81       	ldd	r24, Z+2	; 0x02
    22d2:	93 81       	ldd	r25, Z+3	; 0x03
    22d4:	20 e0       	ldi	r18, 0x00	; 0
    22d6:	30 e0       	ldi	r19, 0x00	; 0
    22d8:	40 e8       	ldi	r20, 0x80	; 128
    22da:	5f e3       	ldi	r21, 0x3F	; 63
    22dc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22e0:	88 23       	and	r24, r24
    22e2:	44 f4       	brge	.+16     	; 0x22f4 <main+0x1076>
		__ticks = 1;
    22e4:	fe 01       	movw	r30, r28
    22e6:	e5 5b       	subi	r30, 0xB5	; 181
    22e8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ea:	81 e0       	ldi	r24, 0x01	; 1
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	91 83       	std	Z+1, r25	; 0x01
    22f0:	80 83       	st	Z, r24
    22f2:	64 c0       	rjmp	.+200    	; 0x23bc <main+0x113e>
	else if (__tmp > 65535)
    22f4:	fe 01       	movw	r30, r28
    22f6:	e3 5b       	subi	r30, 0xB3	; 179
    22f8:	ff 4f       	sbci	r31, 0xFF	; 255
    22fa:	60 81       	ld	r22, Z
    22fc:	71 81       	ldd	r23, Z+1	; 0x01
    22fe:	82 81       	ldd	r24, Z+2	; 0x02
    2300:	93 81       	ldd	r25, Z+3	; 0x03
    2302:	20 e0       	ldi	r18, 0x00	; 0
    2304:	3f ef       	ldi	r19, 0xFF	; 255
    2306:	4f e7       	ldi	r20, 0x7F	; 127
    2308:	57 e4       	ldi	r21, 0x47	; 71
    230a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    230e:	18 16       	cp	r1, r24
    2310:	0c f0       	brlt	.+2      	; 0x2314 <main+0x1096>
    2312:	43 c0       	rjmp	.+134    	; 0x239a <main+0x111c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2314:	fe 01       	movw	r30, r28
    2316:	ef 5a       	subi	r30, 0xAF	; 175
    2318:	ff 4f       	sbci	r31, 0xFF	; 255
    231a:	60 81       	ld	r22, Z
    231c:	71 81       	ldd	r23, Z+1	; 0x01
    231e:	82 81       	ldd	r24, Z+2	; 0x02
    2320:	93 81       	ldd	r25, Z+3	; 0x03
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	30 e0       	ldi	r19, 0x00	; 0
    2326:	40 e2       	ldi	r20, 0x20	; 32
    2328:	51 e4       	ldi	r21, 0x41	; 65
    232a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    232e:	dc 01       	movw	r26, r24
    2330:	cb 01       	movw	r24, r22
    2332:	8e 01       	movw	r16, r28
    2334:	05 5b       	subi	r16, 0xB5	; 181
    2336:	1f 4f       	sbci	r17, 0xFF	; 255
    2338:	bc 01       	movw	r22, r24
    233a:	cd 01       	movw	r24, r26
    233c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2340:	dc 01       	movw	r26, r24
    2342:	cb 01       	movw	r24, r22
    2344:	f8 01       	movw	r30, r16
    2346:	91 83       	std	Z+1, r25	; 0x01
    2348:	80 83       	st	Z, r24
    234a:	1f c0       	rjmp	.+62     	; 0x238a <main+0x110c>
    234c:	fe 01       	movw	r30, r28
    234e:	e7 5b       	subi	r30, 0xB7	; 183
    2350:	ff 4f       	sbci	r31, 0xFF	; 255
    2352:	89 e1       	ldi	r24, 0x19	; 25
    2354:	90 e0       	ldi	r25, 0x00	; 0
    2356:	91 83       	std	Z+1, r25	; 0x01
    2358:	80 83       	st	Z, r24
    235a:	fe 01       	movw	r30, r28
    235c:	e7 5b       	subi	r30, 0xB7	; 183
    235e:	ff 4f       	sbci	r31, 0xFF	; 255
    2360:	80 81       	ld	r24, Z
    2362:	91 81       	ldd	r25, Z+1	; 0x01
    2364:	01 97       	sbiw	r24, 0x01	; 1
    2366:	f1 f7       	brne	.-4      	; 0x2364 <main+0x10e6>
    2368:	fe 01       	movw	r30, r28
    236a:	e7 5b       	subi	r30, 0xB7	; 183
    236c:	ff 4f       	sbci	r31, 0xFF	; 255
    236e:	91 83       	std	Z+1, r25	; 0x01
    2370:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2372:	de 01       	movw	r26, r28
    2374:	a5 5b       	subi	r26, 0xB5	; 181
    2376:	bf 4f       	sbci	r27, 0xFF	; 255
    2378:	fe 01       	movw	r30, r28
    237a:	e5 5b       	subi	r30, 0xB5	; 181
    237c:	ff 4f       	sbci	r31, 0xFF	; 255
    237e:	80 81       	ld	r24, Z
    2380:	91 81       	ldd	r25, Z+1	; 0x01
    2382:	01 97       	sbiw	r24, 0x01	; 1
    2384:	11 96       	adiw	r26, 0x01	; 1
    2386:	9c 93       	st	X, r25
    2388:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    238a:	fe 01       	movw	r30, r28
    238c:	e5 5b       	subi	r30, 0xB5	; 181
    238e:	ff 4f       	sbci	r31, 0xFF	; 255
    2390:	80 81       	ld	r24, Z
    2392:	91 81       	ldd	r25, Z+1	; 0x01
    2394:	00 97       	sbiw	r24, 0x00	; 0
    2396:	d1 f6       	brne	.-76     	; 0x234c <main+0x10ce>
    2398:	27 c0       	rjmp	.+78     	; 0x23e8 <main+0x116a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    239a:	8e 01       	movw	r16, r28
    239c:	05 5b       	subi	r16, 0xB5	; 181
    239e:	1f 4f       	sbci	r17, 0xFF	; 255
    23a0:	fe 01       	movw	r30, r28
    23a2:	e3 5b       	subi	r30, 0xB3	; 179
    23a4:	ff 4f       	sbci	r31, 0xFF	; 255
    23a6:	60 81       	ld	r22, Z
    23a8:	71 81       	ldd	r23, Z+1	; 0x01
    23aa:	82 81       	ldd	r24, Z+2	; 0x02
    23ac:	93 81       	ldd	r25, Z+3	; 0x03
    23ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23b2:	dc 01       	movw	r26, r24
    23b4:	cb 01       	movw	r24, r22
    23b6:	f8 01       	movw	r30, r16
    23b8:	91 83       	std	Z+1, r25	; 0x01
    23ba:	80 83       	st	Z, r24
    23bc:	de 01       	movw	r26, r28
    23be:	a9 5b       	subi	r26, 0xB9	; 185
    23c0:	bf 4f       	sbci	r27, 0xFF	; 255
    23c2:	fe 01       	movw	r30, r28
    23c4:	e5 5b       	subi	r30, 0xB5	; 181
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	80 81       	ld	r24, Z
    23ca:	91 81       	ldd	r25, Z+1	; 0x01
    23cc:	8d 93       	st	X+, r24
    23ce:	9c 93       	st	X, r25
    23d0:	fe 01       	movw	r30, r28
    23d2:	e9 5b       	subi	r30, 0xB9	; 185
    23d4:	ff 4f       	sbci	r31, 0xFF	; 255
    23d6:	80 81       	ld	r24, Z
    23d8:	91 81       	ldd	r25, Z+1	; 0x01
    23da:	01 97       	sbiw	r24, 0x01	; 1
    23dc:	f1 f7       	brne	.-4      	; 0x23da <main+0x115c>
    23de:	fe 01       	movw	r30, r28
    23e0:	e9 5b       	subi	r30, 0xB9	; 185
    23e2:	ff 4f       	sbci	r31, 0xFF	; 255
    23e4:	91 83       	std	Z+1, r25	; 0x01
    23e6:	80 83       	st	Z, r24
			}
			break;


		case 5://Ping Pong effect every 250 ms
			for (L_s8Count = 7; L_s8Count >= 0; L_s8Count --)
    23e8:	de 01       	movw	r26, r28
    23ea:	a9 52       	subi	r26, 0x29	; 41
    23ec:	bf 4f       	sbci	r27, 0xFF	; 255
    23ee:	fe 01       	movw	r30, r28
    23f0:	e9 52       	subi	r30, 0x29	; 41
    23f2:	ff 4f       	sbci	r31, 0xFF	; 255
    23f4:	80 81       	ld	r24, Z
    23f6:	81 50       	subi	r24, 0x01	; 1
    23f8:	8c 93       	st	X, r24
    23fa:	fe 01       	movw	r30, r28
    23fc:	e9 52       	subi	r30, 0x29	; 41
    23fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2400:	80 81       	ld	r24, Z
    2402:	88 23       	and	r24, r24
    2404:	0c f0       	brlt	.+2      	; 0x2408 <main+0x118a>
    2406:	78 ce       	rjmp	.-784    	; 0x20f8 <main+0xe7a>
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
				_delay_ms(250);
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 0);
				_delay_ms(250);
			}
			for (L_s8Count = 1; L_s8Count < 7; L_s8Count ++)
    2408:	fe 01       	movw	r30, r28
    240a:	e9 52       	subi	r30, 0x29	; 41
    240c:	ff 4f       	sbci	r31, 0xFF	; 255
    240e:	81 e0       	ldi	r24, 0x01	; 1
    2410:	80 83       	st	Z, r24
    2412:	12 c1       	rjmp	.+548    	; 0x2638 <main+0x13ba>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    2414:	fe 01       	movw	r30, r28
    2416:	e9 52       	subi	r30, 0x29	; 41
    2418:	ff 4f       	sbci	r31, 0xFF	; 255
    241a:	90 81       	ld	r25, Z
    241c:	81 e0       	ldi	r24, 0x01	; 1
    241e:	69 2f       	mov	r22, r25
    2420:	41 e0       	ldi	r20, 0x01	; 1
    2422:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    2426:	fe 01       	movw	r30, r28
    2428:	ed 5b       	subi	r30, 0xBD	; 189
    242a:	ff 4f       	sbci	r31, 0xFF	; 255
    242c:	80 e0       	ldi	r24, 0x00	; 0
    242e:	90 e0       	ldi	r25, 0x00	; 0
    2430:	aa e7       	ldi	r26, 0x7A	; 122
    2432:	b3 e4       	ldi	r27, 0x43	; 67
    2434:	80 83       	st	Z, r24
    2436:	91 83       	std	Z+1, r25	; 0x01
    2438:	a2 83       	std	Z+2, r26	; 0x02
    243a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    243c:	8e 01       	movw	r16, r28
    243e:	01 5c       	subi	r16, 0xC1	; 193
    2440:	1f 4f       	sbci	r17, 0xFF	; 255
    2442:	fe 01       	movw	r30, r28
    2444:	ed 5b       	subi	r30, 0xBD	; 189
    2446:	ff 4f       	sbci	r31, 0xFF	; 255
    2448:	60 81       	ld	r22, Z
    244a:	71 81       	ldd	r23, Z+1	; 0x01
    244c:	82 81       	ldd	r24, Z+2	; 0x02
    244e:	93 81       	ldd	r25, Z+3	; 0x03
    2450:	20 e0       	ldi	r18, 0x00	; 0
    2452:	30 e0       	ldi	r19, 0x00	; 0
    2454:	4a e7       	ldi	r20, 0x7A	; 122
    2456:	53 e4       	ldi	r21, 0x43	; 67
    2458:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    245c:	dc 01       	movw	r26, r24
    245e:	cb 01       	movw	r24, r22
    2460:	f8 01       	movw	r30, r16
    2462:	80 83       	st	Z, r24
    2464:	91 83       	std	Z+1, r25	; 0x01
    2466:	a2 83       	std	Z+2, r26	; 0x02
    2468:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    246a:	fe 01       	movw	r30, r28
    246c:	ff 96       	adiw	r30, 0x3f	; 63
    246e:	60 81       	ld	r22, Z
    2470:	71 81       	ldd	r23, Z+1	; 0x01
    2472:	82 81       	ldd	r24, Z+2	; 0x02
    2474:	93 81       	ldd	r25, Z+3	; 0x03
    2476:	20 e0       	ldi	r18, 0x00	; 0
    2478:	30 e0       	ldi	r19, 0x00	; 0
    247a:	40 e8       	ldi	r20, 0x80	; 128
    247c:	5f e3       	ldi	r21, 0x3F	; 63
    247e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2482:	88 23       	and	r24, r24
    2484:	2c f4       	brge	.+10     	; 0x2490 <main+0x1212>
		__ticks = 1;
    2486:	81 e0       	ldi	r24, 0x01	; 1
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	9e af       	std	Y+62, r25	; 0x3e
    248c:	8d af       	std	Y+61, r24	; 0x3d
    248e:	46 c0       	rjmp	.+140    	; 0x251c <main+0x129e>
	else if (__tmp > 65535)
    2490:	fe 01       	movw	r30, r28
    2492:	ff 96       	adiw	r30, 0x3f	; 63
    2494:	60 81       	ld	r22, Z
    2496:	71 81       	ldd	r23, Z+1	; 0x01
    2498:	82 81       	ldd	r24, Z+2	; 0x02
    249a:	93 81       	ldd	r25, Z+3	; 0x03
    249c:	20 e0       	ldi	r18, 0x00	; 0
    249e:	3f ef       	ldi	r19, 0xFF	; 255
    24a0:	4f e7       	ldi	r20, 0x7F	; 127
    24a2:	57 e4       	ldi	r21, 0x47	; 71
    24a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24a8:	18 16       	cp	r1, r24
    24aa:	64 f5       	brge	.+88     	; 0x2504 <main+0x1286>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24ac:	fe 01       	movw	r30, r28
    24ae:	ed 5b       	subi	r30, 0xBD	; 189
    24b0:	ff 4f       	sbci	r31, 0xFF	; 255
    24b2:	60 81       	ld	r22, Z
    24b4:	71 81       	ldd	r23, Z+1	; 0x01
    24b6:	82 81       	ldd	r24, Z+2	; 0x02
    24b8:	93 81       	ldd	r25, Z+3	; 0x03
    24ba:	20 e0       	ldi	r18, 0x00	; 0
    24bc:	30 e0       	ldi	r19, 0x00	; 0
    24be:	40 e2       	ldi	r20, 0x20	; 32
    24c0:	51 e4       	ldi	r21, 0x41	; 65
    24c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	bc 01       	movw	r22, r24
    24cc:	cd 01       	movw	r24, r26
    24ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24d2:	dc 01       	movw	r26, r24
    24d4:	cb 01       	movw	r24, r22
    24d6:	9e af       	std	Y+62, r25	; 0x3e
    24d8:	8d af       	std	Y+61, r24	; 0x3d
    24da:	0f c0       	rjmp	.+30     	; 0x24fa <main+0x127c>
    24dc:	89 e1       	ldi	r24, 0x19	; 25
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	9c af       	std	Y+60, r25	; 0x3c
    24e2:	8b af       	std	Y+59, r24	; 0x3b
    24e4:	8b ad       	ldd	r24, Y+59	; 0x3b
    24e6:	9c ad       	ldd	r25, Y+60	; 0x3c
    24e8:	01 97       	sbiw	r24, 0x01	; 1
    24ea:	f1 f7       	brne	.-4      	; 0x24e8 <main+0x126a>
    24ec:	9c af       	std	Y+60, r25	; 0x3c
    24ee:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24f0:	8d ad       	ldd	r24, Y+61	; 0x3d
    24f2:	9e ad       	ldd	r25, Y+62	; 0x3e
    24f4:	01 97       	sbiw	r24, 0x01	; 1
    24f6:	9e af       	std	Y+62, r25	; 0x3e
    24f8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24fa:	8d ad       	ldd	r24, Y+61	; 0x3d
    24fc:	9e ad       	ldd	r25, Y+62	; 0x3e
    24fe:	00 97       	sbiw	r24, 0x00	; 0
    2500:	69 f7       	brne	.-38     	; 0x24dc <main+0x125e>
    2502:	16 c0       	rjmp	.+44     	; 0x2530 <main+0x12b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2504:	fe 01       	movw	r30, r28
    2506:	ff 96       	adiw	r30, 0x3f	; 63
    2508:	60 81       	ld	r22, Z
    250a:	71 81       	ldd	r23, Z+1	; 0x01
    250c:	82 81       	ldd	r24, Z+2	; 0x02
    250e:	93 81       	ldd	r25, Z+3	; 0x03
    2510:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2514:	dc 01       	movw	r26, r24
    2516:	cb 01       	movw	r24, r22
    2518:	9e af       	std	Y+62, r25	; 0x3e
    251a:	8d af       	std	Y+61, r24	; 0x3d
    251c:	8d ad       	ldd	r24, Y+61	; 0x3d
    251e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2520:	9a af       	std	Y+58, r25	; 0x3a
    2522:	89 af       	std	Y+57, r24	; 0x39
    2524:	89 ad       	ldd	r24, Y+57	; 0x39
    2526:	9a ad       	ldd	r25, Y+58	; 0x3a
    2528:	01 97       	sbiw	r24, 0x01	; 1
    252a:	f1 f7       	brne	.-4      	; 0x2528 <main+0x12aa>
    252c:	9a af       	std	Y+58, r25	; 0x3a
    252e:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(250);
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 0);
    2530:	fe 01       	movw	r30, r28
    2532:	e9 52       	subi	r30, 0x29	; 41
    2534:	ff 4f       	sbci	r31, 0xFF	; 255
    2536:	90 81       	ld	r25, Z
    2538:	81 e0       	ldi	r24, 0x01	; 1
    253a:	69 2f       	mov	r22, r25
    253c:	40 e0       	ldi	r20, 0x00	; 0
    253e:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    2542:	80 e0       	ldi	r24, 0x00	; 0
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	aa e7       	ldi	r26, 0x7A	; 122
    2548:	b3 e4       	ldi	r27, 0x43	; 67
    254a:	8d ab       	std	Y+53, r24	; 0x35
    254c:	9e ab       	std	Y+54, r25	; 0x36
    254e:	af ab       	std	Y+55, r26	; 0x37
    2550:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2552:	6d a9       	ldd	r22, Y+53	; 0x35
    2554:	7e a9       	ldd	r23, Y+54	; 0x36
    2556:	8f a9       	ldd	r24, Y+55	; 0x37
    2558:	98 ad       	ldd	r25, Y+56	; 0x38
    255a:	20 e0       	ldi	r18, 0x00	; 0
    255c:	30 e0       	ldi	r19, 0x00	; 0
    255e:	4a e7       	ldi	r20, 0x7A	; 122
    2560:	53 e4       	ldi	r21, 0x43	; 67
    2562:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2566:	dc 01       	movw	r26, r24
    2568:	cb 01       	movw	r24, r22
    256a:	89 ab       	std	Y+49, r24	; 0x31
    256c:	9a ab       	std	Y+50, r25	; 0x32
    256e:	ab ab       	std	Y+51, r26	; 0x33
    2570:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2572:	69 a9       	ldd	r22, Y+49	; 0x31
    2574:	7a a9       	ldd	r23, Y+50	; 0x32
    2576:	8b a9       	ldd	r24, Y+51	; 0x33
    2578:	9c a9       	ldd	r25, Y+52	; 0x34
    257a:	20 e0       	ldi	r18, 0x00	; 0
    257c:	30 e0       	ldi	r19, 0x00	; 0
    257e:	40 e8       	ldi	r20, 0x80	; 128
    2580:	5f e3       	ldi	r21, 0x3F	; 63
    2582:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2586:	88 23       	and	r24, r24
    2588:	2c f4       	brge	.+10     	; 0x2594 <main+0x1316>
		__ticks = 1;
    258a:	81 e0       	ldi	r24, 0x01	; 1
    258c:	90 e0       	ldi	r25, 0x00	; 0
    258e:	98 ab       	std	Y+48, r25	; 0x30
    2590:	8f a7       	std	Y+47, r24	; 0x2f
    2592:	3f c0       	rjmp	.+126    	; 0x2612 <main+0x1394>
	else if (__tmp > 65535)
    2594:	69 a9       	ldd	r22, Y+49	; 0x31
    2596:	7a a9       	ldd	r23, Y+50	; 0x32
    2598:	8b a9       	ldd	r24, Y+51	; 0x33
    259a:	9c a9       	ldd	r25, Y+52	; 0x34
    259c:	20 e0       	ldi	r18, 0x00	; 0
    259e:	3f ef       	ldi	r19, 0xFF	; 255
    25a0:	4f e7       	ldi	r20, 0x7F	; 127
    25a2:	57 e4       	ldi	r21, 0x47	; 71
    25a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25a8:	18 16       	cp	r1, r24
    25aa:	4c f5       	brge	.+82     	; 0x25fe <main+0x1380>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25ac:	6d a9       	ldd	r22, Y+53	; 0x35
    25ae:	7e a9       	ldd	r23, Y+54	; 0x36
    25b0:	8f a9       	ldd	r24, Y+55	; 0x37
    25b2:	98 ad       	ldd	r25, Y+56	; 0x38
    25b4:	20 e0       	ldi	r18, 0x00	; 0
    25b6:	30 e0       	ldi	r19, 0x00	; 0
    25b8:	40 e2       	ldi	r20, 0x20	; 32
    25ba:	51 e4       	ldi	r21, 0x41	; 65
    25bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25c0:	dc 01       	movw	r26, r24
    25c2:	cb 01       	movw	r24, r22
    25c4:	bc 01       	movw	r22, r24
    25c6:	cd 01       	movw	r24, r26
    25c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25cc:	dc 01       	movw	r26, r24
    25ce:	cb 01       	movw	r24, r22
    25d0:	98 ab       	std	Y+48, r25	; 0x30
    25d2:	8f a7       	std	Y+47, r24	; 0x2f
    25d4:	0f c0       	rjmp	.+30     	; 0x25f4 <main+0x1376>
    25d6:	89 e1       	ldi	r24, 0x19	; 25
    25d8:	90 e0       	ldi	r25, 0x00	; 0
    25da:	9e a7       	std	Y+46, r25	; 0x2e
    25dc:	8d a7       	std	Y+45, r24	; 0x2d
    25de:	8d a5       	ldd	r24, Y+45	; 0x2d
    25e0:	9e a5       	ldd	r25, Y+46	; 0x2e
    25e2:	01 97       	sbiw	r24, 0x01	; 1
    25e4:	f1 f7       	brne	.-4      	; 0x25e2 <main+0x1364>
    25e6:	9e a7       	std	Y+46, r25	; 0x2e
    25e8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25ea:	8f a5       	ldd	r24, Y+47	; 0x2f
    25ec:	98 a9       	ldd	r25, Y+48	; 0x30
    25ee:	01 97       	sbiw	r24, 0x01	; 1
    25f0:	98 ab       	std	Y+48, r25	; 0x30
    25f2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25f4:	8f a5       	ldd	r24, Y+47	; 0x2f
    25f6:	98 a9       	ldd	r25, Y+48	; 0x30
    25f8:	00 97       	sbiw	r24, 0x00	; 0
    25fa:	69 f7       	brne	.-38     	; 0x25d6 <main+0x1358>
    25fc:	14 c0       	rjmp	.+40     	; 0x2626 <main+0x13a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25fe:	69 a9       	ldd	r22, Y+49	; 0x31
    2600:	7a a9       	ldd	r23, Y+50	; 0x32
    2602:	8b a9       	ldd	r24, Y+51	; 0x33
    2604:	9c a9       	ldd	r25, Y+52	; 0x34
    2606:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    260a:	dc 01       	movw	r26, r24
    260c:	cb 01       	movw	r24, r22
    260e:	98 ab       	std	Y+48, r25	; 0x30
    2610:	8f a7       	std	Y+47, r24	; 0x2f
    2612:	8f a5       	ldd	r24, Y+47	; 0x2f
    2614:	98 a9       	ldd	r25, Y+48	; 0x30
    2616:	9c a7       	std	Y+44, r25	; 0x2c
    2618:	8b a7       	std	Y+43, r24	; 0x2b
    261a:	8b a5       	ldd	r24, Y+43	; 0x2b
    261c:	9c a5       	ldd	r25, Y+44	; 0x2c
    261e:	01 97       	sbiw	r24, 0x01	; 1
    2620:	f1 f7       	brne	.-4      	; 0x261e <main+0x13a0>
    2622:	9c a7       	std	Y+44, r25	; 0x2c
    2624:	8b a7       	std	Y+43, r24	; 0x2b
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
				_delay_ms(250);
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 0);
				_delay_ms(250);
			}
			for (L_s8Count = 1; L_s8Count < 7; L_s8Count ++)
    2626:	de 01       	movw	r26, r28
    2628:	a9 52       	subi	r26, 0x29	; 41
    262a:	bf 4f       	sbci	r27, 0xFF	; 255
    262c:	fe 01       	movw	r30, r28
    262e:	e9 52       	subi	r30, 0x29	; 41
    2630:	ff 4f       	sbci	r31, 0xFF	; 255
    2632:	80 81       	ld	r24, Z
    2634:	8f 5f       	subi	r24, 0xFF	; 255
    2636:	8c 93       	st	X, r24
    2638:	fe 01       	movw	r30, r28
    263a:	e9 52       	subi	r30, 0x29	; 41
    263c:	ff 4f       	sbci	r31, 0xFF	; 255
    263e:	80 81       	ld	r24, Z
    2640:	87 30       	cpi	r24, 0x07	; 7
    2642:	0c f4       	brge	.+2      	; 0x2646 <main+0x13c8>
    2644:	e7 ce       	rjmp	.-562    	; 0x2414 <main+0x1196>
    2646:	0c 94 86 09 	jmp	0x130c	; 0x130c <main+0x8e>
			}
			break;


		case 6: //Incrementing (Snake effect) every 300 ms
			for (L_s8Count = 0; L_s8Count < 8; L_s8Count ++)
    264a:	fe 01       	movw	r30, r28
    264c:	e9 52       	subi	r30, 0x29	; 41
    264e:	ff 4f       	sbci	r31, 0xFF	; 255
    2650:	10 82       	st	Z, r1
    2652:	84 c0       	rjmp	.+264    	; 0x275c <main+0x14de>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    2654:	fe 01       	movw	r30, r28
    2656:	e9 52       	subi	r30, 0x29	; 41
    2658:	ff 4f       	sbci	r31, 0xFF	; 255
    265a:	90 81       	ld	r25, Z
    265c:	81 e0       	ldi	r24, 0x01	; 1
    265e:	69 2f       	mov	r22, r25
    2660:	41 e0       	ldi	r20, 0x01	; 1
    2662:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    2666:	80 e0       	ldi	r24, 0x00	; 0
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	a6 e9       	ldi	r26, 0x96	; 150
    266c:	b3 e4       	ldi	r27, 0x43	; 67
    266e:	8f a3       	std	Y+39, r24	; 0x27
    2670:	98 a7       	std	Y+40, r25	; 0x28
    2672:	a9 a7       	std	Y+41, r26	; 0x29
    2674:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2676:	6f a1       	ldd	r22, Y+39	; 0x27
    2678:	78 a5       	ldd	r23, Y+40	; 0x28
    267a:	89 a5       	ldd	r24, Y+41	; 0x29
    267c:	9a a5       	ldd	r25, Y+42	; 0x2a
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	4a e7       	ldi	r20, 0x7A	; 122
    2684:	53 e4       	ldi	r21, 0x43	; 67
    2686:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    268a:	dc 01       	movw	r26, r24
    268c:	cb 01       	movw	r24, r22
    268e:	8b a3       	std	Y+35, r24	; 0x23
    2690:	9c a3       	std	Y+36, r25	; 0x24
    2692:	ad a3       	std	Y+37, r26	; 0x25
    2694:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2696:	6b a1       	ldd	r22, Y+35	; 0x23
    2698:	7c a1       	ldd	r23, Y+36	; 0x24
    269a:	8d a1       	ldd	r24, Y+37	; 0x25
    269c:	9e a1       	ldd	r25, Y+38	; 0x26
    269e:	20 e0       	ldi	r18, 0x00	; 0
    26a0:	30 e0       	ldi	r19, 0x00	; 0
    26a2:	40 e8       	ldi	r20, 0x80	; 128
    26a4:	5f e3       	ldi	r21, 0x3F	; 63
    26a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26aa:	88 23       	and	r24, r24
    26ac:	2c f4       	brge	.+10     	; 0x26b8 <main+0x143a>
		__ticks = 1;
    26ae:	81 e0       	ldi	r24, 0x01	; 1
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	9a a3       	std	Y+34, r25	; 0x22
    26b4:	89 a3       	std	Y+33, r24	; 0x21
    26b6:	3f c0       	rjmp	.+126    	; 0x2736 <main+0x14b8>
	else if (__tmp > 65535)
    26b8:	6b a1       	ldd	r22, Y+35	; 0x23
    26ba:	7c a1       	ldd	r23, Y+36	; 0x24
    26bc:	8d a1       	ldd	r24, Y+37	; 0x25
    26be:	9e a1       	ldd	r25, Y+38	; 0x26
    26c0:	20 e0       	ldi	r18, 0x00	; 0
    26c2:	3f ef       	ldi	r19, 0xFF	; 255
    26c4:	4f e7       	ldi	r20, 0x7F	; 127
    26c6:	57 e4       	ldi	r21, 0x47	; 71
    26c8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26cc:	18 16       	cp	r1, r24
    26ce:	4c f5       	brge	.+82     	; 0x2722 <main+0x14a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26d0:	6f a1       	ldd	r22, Y+39	; 0x27
    26d2:	78 a5       	ldd	r23, Y+40	; 0x28
    26d4:	89 a5       	ldd	r24, Y+41	; 0x29
    26d6:	9a a5       	ldd	r25, Y+42	; 0x2a
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	40 e2       	ldi	r20, 0x20	; 32
    26de:	51 e4       	ldi	r21, 0x41	; 65
    26e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	bc 01       	movw	r22, r24
    26ea:	cd 01       	movw	r24, r26
    26ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26f0:	dc 01       	movw	r26, r24
    26f2:	cb 01       	movw	r24, r22
    26f4:	9a a3       	std	Y+34, r25	; 0x22
    26f6:	89 a3       	std	Y+33, r24	; 0x21
    26f8:	0f c0       	rjmp	.+30     	; 0x2718 <main+0x149a>
    26fa:	89 e1       	ldi	r24, 0x19	; 25
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	98 a3       	std	Y+32, r25	; 0x20
    2700:	8f 8f       	std	Y+31, r24	; 0x1f
    2702:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2704:	98 a1       	ldd	r25, Y+32	; 0x20
    2706:	01 97       	sbiw	r24, 0x01	; 1
    2708:	f1 f7       	brne	.-4      	; 0x2706 <main+0x1488>
    270a:	98 a3       	std	Y+32, r25	; 0x20
    270c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    270e:	89 a1       	ldd	r24, Y+33	; 0x21
    2710:	9a a1       	ldd	r25, Y+34	; 0x22
    2712:	01 97       	sbiw	r24, 0x01	; 1
    2714:	9a a3       	std	Y+34, r25	; 0x22
    2716:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2718:	89 a1       	ldd	r24, Y+33	; 0x21
    271a:	9a a1       	ldd	r25, Y+34	; 0x22
    271c:	00 97       	sbiw	r24, 0x00	; 0
    271e:	69 f7       	brne	.-38     	; 0x26fa <main+0x147c>
    2720:	14 c0       	rjmp	.+40     	; 0x274a <main+0x14cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2722:	6b a1       	ldd	r22, Y+35	; 0x23
    2724:	7c a1       	ldd	r23, Y+36	; 0x24
    2726:	8d a1       	ldd	r24, Y+37	; 0x25
    2728:	9e a1       	ldd	r25, Y+38	; 0x26
    272a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    272e:	dc 01       	movw	r26, r24
    2730:	cb 01       	movw	r24, r22
    2732:	9a a3       	std	Y+34, r25	; 0x22
    2734:	89 a3       	std	Y+33, r24	; 0x21
    2736:	89 a1       	ldd	r24, Y+33	; 0x21
    2738:	9a a1       	ldd	r25, Y+34	; 0x22
    273a:	9e 8f       	std	Y+30, r25	; 0x1e
    273c:	8d 8f       	std	Y+29, r24	; 0x1d
    273e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2740:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2742:	01 97       	sbiw	r24, 0x01	; 1
    2744:	f1 f7       	brne	.-4      	; 0x2742 <main+0x14c4>
    2746:	9e 8f       	std	Y+30, r25	; 0x1e
    2748:	8d 8f       	std	Y+29, r24	; 0x1d
			}
			break;


		case 6: //Incrementing (Snake effect) every 300 ms
			for (L_s8Count = 0; L_s8Count < 8; L_s8Count ++)
    274a:	de 01       	movw	r26, r28
    274c:	a9 52       	subi	r26, 0x29	; 41
    274e:	bf 4f       	sbci	r27, 0xFF	; 255
    2750:	fe 01       	movw	r30, r28
    2752:	e9 52       	subi	r30, 0x29	; 41
    2754:	ff 4f       	sbci	r31, 0xFF	; 255
    2756:	80 81       	ld	r24, Z
    2758:	8f 5f       	subi	r24, 0xFF	; 255
    275a:	8c 93       	st	X, r24
    275c:	fe 01       	movw	r30, r28
    275e:	e9 52       	subi	r30, 0x29	; 41
    2760:	ff 4f       	sbci	r31, 0xFF	; 255
    2762:	80 81       	ld	r24, Z
    2764:	88 30       	cpi	r24, 0x08	; 8
    2766:	0c f4       	brge	.+2      	; 0x276a <main+0x14ec>
    2768:	75 cf       	rjmp	.-278    	; 0x2654 <main+0x13d6>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
				_delay_ms(300);
			}
			MDIO_voidDioSetPortValue(LED_PORT, 0x0);
    276a:	81 e0       	ldi	r24, 0x01	; 1
    276c:	60 e0       	ldi	r22, 0x00	; 0
    276e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
    2772:	0c 94 86 09 	jmp	0x130c	; 0x130c <main+0x8e>
			break;

		case 7:
			for (L_s8Count = 0; L_s8Count < 4; L_s8Count ++)
    2776:	fe 01       	movw	r30, r28
    2778:	e9 52       	subi	r30, 0x29	; 41
    277a:	ff 4f       	sbci	r31, 0xFF	; 255
    277c:	10 82       	st	Z, r1
    277e:	95 c0       	rjmp	.+298    	; 0x28aa <main+0x162c>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    2780:	fe 01       	movw	r30, r28
    2782:	e9 52       	subi	r30, 0x29	; 41
    2784:	ff 4f       	sbci	r31, 0xFF	; 255
    2786:	90 81       	ld	r25, Z
    2788:	81 e0       	ldi	r24, 0x01	; 1
    278a:	69 2f       	mov	r22, r25
    278c:	41 e0       	ldi	r20, 0x01	; 1
    278e:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
				MDIO_voidDioSetPinValue(LED_PORT, 7 - L_s8Count, 1);
    2792:	fe 01       	movw	r30, r28
    2794:	e9 52       	subi	r30, 0x29	; 41
    2796:	ff 4f       	sbci	r31, 0xFF	; 255
    2798:	90 81       	ld	r25, Z
    279a:	87 e0       	ldi	r24, 0x07	; 7
    279c:	f8 2f       	mov	r31, r24
    279e:	f9 1b       	sub	r31, r25
    27a0:	9f 2f       	mov	r25, r31
    27a2:	81 e0       	ldi	r24, 0x01	; 1
    27a4:	69 2f       	mov	r22, r25
    27a6:	41 e0       	ldi	r20, 0x01	; 1
    27a8:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    27ac:	80 e0       	ldi	r24, 0x00	; 0
    27ae:	90 e0       	ldi	r25, 0x00	; 0
    27b0:	a6 e9       	ldi	r26, 0x96	; 150
    27b2:	b3 e4       	ldi	r27, 0x43	; 67
    27b4:	89 8f       	std	Y+25, r24	; 0x19
    27b6:	9a 8f       	std	Y+26, r25	; 0x1a
    27b8:	ab 8f       	std	Y+27, r26	; 0x1b
    27ba:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27bc:	69 8d       	ldd	r22, Y+25	; 0x19
    27be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    27c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27c4:	20 e0       	ldi	r18, 0x00	; 0
    27c6:	30 e0       	ldi	r19, 0x00	; 0
    27c8:	4a e7       	ldi	r20, 0x7A	; 122
    27ca:	53 e4       	ldi	r21, 0x43	; 67
    27cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27d0:	dc 01       	movw	r26, r24
    27d2:	cb 01       	movw	r24, r22
    27d4:	8d 8b       	std	Y+21, r24	; 0x15
    27d6:	9e 8b       	std	Y+22, r25	; 0x16
    27d8:	af 8b       	std	Y+23, r26	; 0x17
    27da:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    27dc:	6d 89       	ldd	r22, Y+21	; 0x15
    27de:	7e 89       	ldd	r23, Y+22	; 0x16
    27e0:	8f 89       	ldd	r24, Y+23	; 0x17
    27e2:	98 8d       	ldd	r25, Y+24	; 0x18
    27e4:	20 e0       	ldi	r18, 0x00	; 0
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	40 e8       	ldi	r20, 0x80	; 128
    27ea:	5f e3       	ldi	r21, 0x3F	; 63
    27ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27f0:	88 23       	and	r24, r24
    27f2:	2c f4       	brge	.+10     	; 0x27fe <main+0x1580>
		__ticks = 1;
    27f4:	81 e0       	ldi	r24, 0x01	; 1
    27f6:	90 e0       	ldi	r25, 0x00	; 0
    27f8:	9c 8b       	std	Y+20, r25	; 0x14
    27fa:	8b 8b       	std	Y+19, r24	; 0x13
    27fc:	3f c0       	rjmp	.+126    	; 0x287c <main+0x15fe>
	else if (__tmp > 65535)
    27fe:	6d 89       	ldd	r22, Y+21	; 0x15
    2800:	7e 89       	ldd	r23, Y+22	; 0x16
    2802:	8f 89       	ldd	r24, Y+23	; 0x17
    2804:	98 8d       	ldd	r25, Y+24	; 0x18
    2806:	20 e0       	ldi	r18, 0x00	; 0
    2808:	3f ef       	ldi	r19, 0xFF	; 255
    280a:	4f e7       	ldi	r20, 0x7F	; 127
    280c:	57 e4       	ldi	r21, 0x47	; 71
    280e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2812:	18 16       	cp	r1, r24
    2814:	4c f5       	brge	.+82     	; 0x2868 <main+0x15ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2816:	69 8d       	ldd	r22, Y+25	; 0x19
    2818:	7a 8d       	ldd	r23, Y+26	; 0x1a
    281a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    281c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	40 e2       	ldi	r20, 0x20	; 32
    2824:	51 e4       	ldi	r21, 0x41	; 65
    2826:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    282a:	dc 01       	movw	r26, r24
    282c:	cb 01       	movw	r24, r22
    282e:	bc 01       	movw	r22, r24
    2830:	cd 01       	movw	r24, r26
    2832:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2836:	dc 01       	movw	r26, r24
    2838:	cb 01       	movw	r24, r22
    283a:	9c 8b       	std	Y+20, r25	; 0x14
    283c:	8b 8b       	std	Y+19, r24	; 0x13
    283e:	0f c0       	rjmp	.+30     	; 0x285e <main+0x15e0>
    2840:	89 e1       	ldi	r24, 0x19	; 25
    2842:	90 e0       	ldi	r25, 0x00	; 0
    2844:	9a 8b       	std	Y+18, r25	; 0x12
    2846:	89 8b       	std	Y+17, r24	; 0x11
    2848:	89 89       	ldd	r24, Y+17	; 0x11
    284a:	9a 89       	ldd	r25, Y+18	; 0x12
    284c:	01 97       	sbiw	r24, 0x01	; 1
    284e:	f1 f7       	brne	.-4      	; 0x284c <main+0x15ce>
    2850:	9a 8b       	std	Y+18, r25	; 0x12
    2852:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2854:	8b 89       	ldd	r24, Y+19	; 0x13
    2856:	9c 89       	ldd	r25, Y+20	; 0x14
    2858:	01 97       	sbiw	r24, 0x01	; 1
    285a:	9c 8b       	std	Y+20, r25	; 0x14
    285c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    285e:	8b 89       	ldd	r24, Y+19	; 0x13
    2860:	9c 89       	ldd	r25, Y+20	; 0x14
    2862:	00 97       	sbiw	r24, 0x00	; 0
    2864:	69 f7       	brne	.-38     	; 0x2840 <main+0x15c2>
    2866:	14 c0       	rjmp	.+40     	; 0x2890 <main+0x1612>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2868:	6d 89       	ldd	r22, Y+21	; 0x15
    286a:	7e 89       	ldd	r23, Y+22	; 0x16
    286c:	8f 89       	ldd	r24, Y+23	; 0x17
    286e:	98 8d       	ldd	r25, Y+24	; 0x18
    2870:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2874:	dc 01       	movw	r26, r24
    2876:	cb 01       	movw	r24, r22
    2878:	9c 8b       	std	Y+20, r25	; 0x14
    287a:	8b 8b       	std	Y+19, r24	; 0x13
    287c:	8b 89       	ldd	r24, Y+19	; 0x13
    287e:	9c 89       	ldd	r25, Y+20	; 0x14
    2880:	98 8b       	std	Y+16, r25	; 0x10
    2882:	8f 87       	std	Y+15, r24	; 0x0f
    2884:	8f 85       	ldd	r24, Y+15	; 0x0f
    2886:	98 89       	ldd	r25, Y+16	; 0x10
    2888:	01 97       	sbiw	r24, 0x01	; 1
    288a:	f1 f7       	brne	.-4      	; 0x2888 <main+0x160a>
    288c:	98 8b       	std	Y+16, r25	; 0x10
    288e:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(300);
				MDIO_voidDioSetPortValue(LED_PORT, 0x00);
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	60 e0       	ldi	r22, 0x00	; 0
    2894:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
			}
			MDIO_voidDioSetPortValue(LED_PORT, 0x0);
			break;

		case 7:
			for (L_s8Count = 0; L_s8Count < 4; L_s8Count ++)
    2898:	de 01       	movw	r26, r28
    289a:	a9 52       	subi	r26, 0x29	; 41
    289c:	bf 4f       	sbci	r27, 0xFF	; 255
    289e:	fe 01       	movw	r30, r28
    28a0:	e9 52       	subi	r30, 0x29	; 41
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	80 81       	ld	r24, Z
    28a6:	8f 5f       	subi	r24, 0xFF	; 255
    28a8:	8c 93       	st	X, r24
    28aa:	fe 01       	movw	r30, r28
    28ac:	e9 52       	subi	r30, 0x29	; 41
    28ae:	ff 4f       	sbci	r31, 0xFF	; 255
    28b0:	80 81       	ld	r24, Z
    28b2:	84 30       	cpi	r24, 0x04	; 4
    28b4:	0c f4       	brge	.+2      	; 0x28b8 <main+0x163a>
    28b6:	64 cf       	rjmp	.-312    	; 0x2780 <main+0x1502>
				MDIO_voidDioSetPinValue(LED_PORT, 7 - L_s8Count, 1);
				_delay_ms(300);
				MDIO_voidDioSetPortValue(LED_PORT, 0x00);
			}

			for (L_s8Count = 2; L_s8Count >= 0; L_s8Count --)
    28b8:	fe 01       	movw	r30, r28
    28ba:	e9 52       	subi	r30, 0x29	; 41
    28bc:	ff 4f       	sbci	r31, 0xFF	; 255
    28be:	82 e0       	ldi	r24, 0x02	; 2
    28c0:	80 83       	st	Z, r24
    28c2:	95 c0       	rjmp	.+298    	; 0x29ee <main+0x1770>
			{
				MDIO_voidDioSetPinValue(LED_PORT, L_s8Count, 1);
    28c4:	fe 01       	movw	r30, r28
    28c6:	e9 52       	subi	r30, 0x29	; 41
    28c8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ca:	90 81       	ld	r25, Z
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	69 2f       	mov	r22, r25
    28d0:	41 e0       	ldi	r20, 0x01	; 1
    28d2:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
				MDIO_voidDioSetPinValue(LED_PORT, 7 - L_s8Count, 1);
    28d6:	fe 01       	movw	r30, r28
    28d8:	e9 52       	subi	r30, 0x29	; 41
    28da:	ff 4f       	sbci	r31, 0xFF	; 255
    28dc:	90 81       	ld	r25, Z
    28de:	87 e0       	ldi	r24, 0x07	; 7
    28e0:	28 2f       	mov	r18, r24
    28e2:	29 1b       	sub	r18, r25
    28e4:	92 2f       	mov	r25, r18
    28e6:	81 e0       	ldi	r24, 0x01	; 1
    28e8:	69 2f       	mov	r22, r25
    28ea:	41 e0       	ldi	r20, 0x01	; 1
    28ec:	0e 94 9b 06 	call	0xd36	; 0xd36 <MDIO_voidDioSetPinValue>
    28f0:	80 e0       	ldi	r24, 0x00	; 0
    28f2:	90 e0       	ldi	r25, 0x00	; 0
    28f4:	a6 e9       	ldi	r26, 0x96	; 150
    28f6:	b3 e4       	ldi	r27, 0x43	; 67
    28f8:	8b 87       	std	Y+11, r24	; 0x0b
    28fa:	9c 87       	std	Y+12, r25	; 0x0c
    28fc:	ad 87       	std	Y+13, r26	; 0x0d
    28fe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2900:	6b 85       	ldd	r22, Y+11	; 0x0b
    2902:	7c 85       	ldd	r23, Y+12	; 0x0c
    2904:	8d 85       	ldd	r24, Y+13	; 0x0d
    2906:	9e 85       	ldd	r25, Y+14	; 0x0e
    2908:	20 e0       	ldi	r18, 0x00	; 0
    290a:	30 e0       	ldi	r19, 0x00	; 0
    290c:	4a e7       	ldi	r20, 0x7A	; 122
    290e:	53 e4       	ldi	r21, 0x43	; 67
    2910:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2914:	dc 01       	movw	r26, r24
    2916:	cb 01       	movw	r24, r22
    2918:	8f 83       	std	Y+7, r24	; 0x07
    291a:	98 87       	std	Y+8, r25	; 0x08
    291c:	a9 87       	std	Y+9, r26	; 0x09
    291e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2920:	6f 81       	ldd	r22, Y+7	; 0x07
    2922:	78 85       	ldd	r23, Y+8	; 0x08
    2924:	89 85       	ldd	r24, Y+9	; 0x09
    2926:	9a 85       	ldd	r25, Y+10	; 0x0a
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	40 e8       	ldi	r20, 0x80	; 128
    292e:	5f e3       	ldi	r21, 0x3F	; 63
    2930:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2934:	88 23       	and	r24, r24
    2936:	2c f4       	brge	.+10     	; 0x2942 <main+0x16c4>
		__ticks = 1;
    2938:	81 e0       	ldi	r24, 0x01	; 1
    293a:	90 e0       	ldi	r25, 0x00	; 0
    293c:	9e 83       	std	Y+6, r25	; 0x06
    293e:	8d 83       	std	Y+5, r24	; 0x05
    2940:	3f c0       	rjmp	.+126    	; 0x29c0 <main+0x1742>
	else if (__tmp > 65535)
    2942:	6f 81       	ldd	r22, Y+7	; 0x07
    2944:	78 85       	ldd	r23, Y+8	; 0x08
    2946:	89 85       	ldd	r24, Y+9	; 0x09
    2948:	9a 85       	ldd	r25, Y+10	; 0x0a
    294a:	20 e0       	ldi	r18, 0x00	; 0
    294c:	3f ef       	ldi	r19, 0xFF	; 255
    294e:	4f e7       	ldi	r20, 0x7F	; 127
    2950:	57 e4       	ldi	r21, 0x47	; 71
    2952:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2956:	18 16       	cp	r1, r24
    2958:	4c f5       	brge	.+82     	; 0x29ac <main+0x172e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    295a:	6b 85       	ldd	r22, Y+11	; 0x0b
    295c:	7c 85       	ldd	r23, Y+12	; 0x0c
    295e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2960:	9e 85       	ldd	r25, Y+14	; 0x0e
    2962:	20 e0       	ldi	r18, 0x00	; 0
    2964:	30 e0       	ldi	r19, 0x00	; 0
    2966:	40 e2       	ldi	r20, 0x20	; 32
    2968:	51 e4       	ldi	r21, 0x41	; 65
    296a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    296e:	dc 01       	movw	r26, r24
    2970:	cb 01       	movw	r24, r22
    2972:	bc 01       	movw	r22, r24
    2974:	cd 01       	movw	r24, r26
    2976:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    297a:	dc 01       	movw	r26, r24
    297c:	cb 01       	movw	r24, r22
    297e:	9e 83       	std	Y+6, r25	; 0x06
    2980:	8d 83       	std	Y+5, r24	; 0x05
    2982:	0f c0       	rjmp	.+30     	; 0x29a2 <main+0x1724>
    2984:	89 e1       	ldi	r24, 0x19	; 25
    2986:	90 e0       	ldi	r25, 0x00	; 0
    2988:	9c 83       	std	Y+4, r25	; 0x04
    298a:	8b 83       	std	Y+3, r24	; 0x03
    298c:	8b 81       	ldd	r24, Y+3	; 0x03
    298e:	9c 81       	ldd	r25, Y+4	; 0x04
    2990:	01 97       	sbiw	r24, 0x01	; 1
    2992:	f1 f7       	brne	.-4      	; 0x2990 <main+0x1712>
    2994:	9c 83       	std	Y+4, r25	; 0x04
    2996:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2998:	8d 81       	ldd	r24, Y+5	; 0x05
    299a:	9e 81       	ldd	r25, Y+6	; 0x06
    299c:	01 97       	sbiw	r24, 0x01	; 1
    299e:	9e 83       	std	Y+6, r25	; 0x06
    29a0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29a2:	8d 81       	ldd	r24, Y+5	; 0x05
    29a4:	9e 81       	ldd	r25, Y+6	; 0x06
    29a6:	00 97       	sbiw	r24, 0x00	; 0
    29a8:	69 f7       	brne	.-38     	; 0x2984 <main+0x1706>
    29aa:	14 c0       	rjmp	.+40     	; 0x29d4 <main+0x1756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29ac:	6f 81       	ldd	r22, Y+7	; 0x07
    29ae:	78 85       	ldd	r23, Y+8	; 0x08
    29b0:	89 85       	ldd	r24, Y+9	; 0x09
    29b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    29b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29b8:	dc 01       	movw	r26, r24
    29ba:	cb 01       	movw	r24, r22
    29bc:	9e 83       	std	Y+6, r25	; 0x06
    29be:	8d 83       	std	Y+5, r24	; 0x05
    29c0:	8d 81       	ldd	r24, Y+5	; 0x05
    29c2:	9e 81       	ldd	r25, Y+6	; 0x06
    29c4:	9a 83       	std	Y+2, r25	; 0x02
    29c6:	89 83       	std	Y+1, r24	; 0x01
    29c8:	89 81       	ldd	r24, Y+1	; 0x01
    29ca:	9a 81       	ldd	r25, Y+2	; 0x02
    29cc:	01 97       	sbiw	r24, 0x01	; 1
    29ce:	f1 f7       	brne	.-4      	; 0x29cc <main+0x174e>
    29d0:	9a 83       	std	Y+2, r25	; 0x02
    29d2:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(300);
				MDIO_voidDioSetPortValue(LED_PORT, 0x00);
    29d4:	81 e0       	ldi	r24, 0x01	; 1
    29d6:	60 e0       	ldi	r22, 0x00	; 0
    29d8:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <MDIO_voidDioSetPortValue>
				MDIO_voidDioSetPinValue(LED_PORT, 7 - L_s8Count, 1);
				_delay_ms(300);
				MDIO_voidDioSetPortValue(LED_PORT, 0x00);
			}

			for (L_s8Count = 2; L_s8Count >= 0; L_s8Count --)
    29dc:	de 01       	movw	r26, r28
    29de:	a9 52       	subi	r26, 0x29	; 41
    29e0:	bf 4f       	sbci	r27, 0xFF	; 255
    29e2:	fe 01       	movw	r30, r28
    29e4:	e9 52       	subi	r30, 0x29	; 41
    29e6:	ff 4f       	sbci	r31, 0xFF	; 255
    29e8:	80 81       	ld	r24, Z
    29ea:	81 50       	subi	r24, 0x01	; 1
    29ec:	8c 93       	st	X, r24
    29ee:	fe 01       	movw	r30, r28
    29f0:	e9 52       	subi	r30, 0x29	; 41
    29f2:	ff 4f       	sbci	r31, 0xFF	; 255
    29f4:	80 81       	ld	r24, Z
    29f6:	88 23       	and	r24, r24
    29f8:	0c f0       	brlt	.+2      	; 0x29fc <main+0x177e>
    29fa:	64 cf       	rjmp	.-312    	; 0x28c4 <main+0x1646>
    29fc:	0c 94 86 09 	jmp	0x130c	; 0x130c <main+0x8e>

00002a00 <__udivmodqi4>:
    2a00:	99 1b       	sub	r25, r25
    2a02:	79 e0       	ldi	r23, 0x09	; 9
    2a04:	04 c0       	rjmp	.+8      	; 0x2a0e <__udivmodqi4_ep>

00002a06 <__udivmodqi4_loop>:
    2a06:	99 1f       	adc	r25, r25
    2a08:	96 17       	cp	r25, r22
    2a0a:	08 f0       	brcs	.+2      	; 0x2a0e <__udivmodqi4_ep>
    2a0c:	96 1b       	sub	r25, r22

00002a0e <__udivmodqi4_ep>:
    2a0e:	88 1f       	adc	r24, r24
    2a10:	7a 95       	dec	r23
    2a12:	c9 f7       	brne	.-14     	; 0x2a06 <__udivmodqi4_loop>
    2a14:	80 95       	com	r24
    2a16:	08 95       	ret

00002a18 <__prologue_saves__>:
    2a18:	2f 92       	push	r2
    2a1a:	3f 92       	push	r3
    2a1c:	4f 92       	push	r4
    2a1e:	5f 92       	push	r5
    2a20:	6f 92       	push	r6
    2a22:	7f 92       	push	r7
    2a24:	8f 92       	push	r8
    2a26:	9f 92       	push	r9
    2a28:	af 92       	push	r10
    2a2a:	bf 92       	push	r11
    2a2c:	cf 92       	push	r12
    2a2e:	df 92       	push	r13
    2a30:	ef 92       	push	r14
    2a32:	ff 92       	push	r15
    2a34:	0f 93       	push	r16
    2a36:	1f 93       	push	r17
    2a38:	cf 93       	push	r28
    2a3a:	df 93       	push	r29
    2a3c:	cd b7       	in	r28, 0x3d	; 61
    2a3e:	de b7       	in	r29, 0x3e	; 62
    2a40:	ca 1b       	sub	r28, r26
    2a42:	db 0b       	sbc	r29, r27
    2a44:	0f b6       	in	r0, 0x3f	; 63
    2a46:	f8 94       	cli
    2a48:	de bf       	out	0x3e, r29	; 62
    2a4a:	0f be       	out	0x3f, r0	; 63
    2a4c:	cd bf       	out	0x3d, r28	; 61
    2a4e:	09 94       	ijmp

00002a50 <__epilogue_restores__>:
    2a50:	2a 88       	ldd	r2, Y+18	; 0x12
    2a52:	39 88       	ldd	r3, Y+17	; 0x11
    2a54:	48 88       	ldd	r4, Y+16	; 0x10
    2a56:	5f 84       	ldd	r5, Y+15	; 0x0f
    2a58:	6e 84       	ldd	r6, Y+14	; 0x0e
    2a5a:	7d 84       	ldd	r7, Y+13	; 0x0d
    2a5c:	8c 84       	ldd	r8, Y+12	; 0x0c
    2a5e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2a60:	aa 84       	ldd	r10, Y+10	; 0x0a
    2a62:	b9 84       	ldd	r11, Y+9	; 0x09
    2a64:	c8 84       	ldd	r12, Y+8	; 0x08
    2a66:	df 80       	ldd	r13, Y+7	; 0x07
    2a68:	ee 80       	ldd	r14, Y+6	; 0x06
    2a6a:	fd 80       	ldd	r15, Y+5	; 0x05
    2a6c:	0c 81       	ldd	r16, Y+4	; 0x04
    2a6e:	1b 81       	ldd	r17, Y+3	; 0x03
    2a70:	aa 81       	ldd	r26, Y+2	; 0x02
    2a72:	b9 81       	ldd	r27, Y+1	; 0x01
    2a74:	ce 0f       	add	r28, r30
    2a76:	d1 1d       	adc	r29, r1
    2a78:	0f b6       	in	r0, 0x3f	; 63
    2a7a:	f8 94       	cli
    2a7c:	de bf       	out	0x3e, r29	; 62
    2a7e:	0f be       	out	0x3f, r0	; 63
    2a80:	cd bf       	out	0x3d, r28	; 61
    2a82:	ed 01       	movw	r28, r26
    2a84:	08 95       	ret

00002a86 <_exit>:
    2a86:	f8 94       	cli

00002a88 <__stop_program>:
    2a88:	ff cf       	rjmp	.-2      	; 0x2a88 <__stop_program>
